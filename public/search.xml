<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[GitLab 安装、汉化及常见错误处理]]></title>
    <url>%2F2018%2F01%2F03%2Fdevops-gitlab.html</url>
    <content type="text"><![CDATA[公司现在开始实行 DevOps 的开发模式，代码托管采用了 GitLab 搭建私有代码仓库，本文记录了 GitLab 的安装、汉化及常见错误处理。 安装GitLab准备工作 12345678sudo yum install curl policycoreutils openssh-server openssh-clientssudo systemctl enable sshdsudo systemctl start sshdsudo yum install postfixsudo systemctl enable postfixsudo systemctl start postfixsudo firewall-cmd --permanent --add-service=httpsudo systemctl reload firewalld 配置镜像源地址 12curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bashsudo yum install gitlab-ce 安装完毕后执行注册启动 1sudo gitlab-ctl reconfigure 修改访问 IP 和 端口号 vim /etc/gitlab/gitlab.rb 修改 external_url ，比如 http://localhost:9080 配置邮件发送服务 vim /etc/gitlab/gitlab.rb 修改与 email 有关的配置项 123456789101112131415161718192021222324252627## 邮箱基础配置gitlab_rails[&apos;gitlab_email_enabled&apos;] = truegitlab_rails[&apos;gitlab_email_from&apos;] = &apos;237497819@qq.com&apos;gitlab_rails[&apos;gitlab_email_display_name&apos;] = &apos;237497819&apos;gitlab_rails[&apos;gitlab_email_reply_to&apos;] = &apos;237497819@qq.com&apos;gitlab_rails[&apos;gitlab_email_subject_suffix&apos;] = &apos;&apos;gitlab_rails[&apos;gitlab_default_can_create_group&apos;] = truegitlab_rails[&apos;gitlab_username_changing_enabled&apos;] = true## smtp 配置gitlab_rails[&apos;smtp_enable&apos;] = truegitlab_rails[&apos;smtp_address&apos;] = &quot;smtp.qq.com&quot;gitlab_rails[&apos;smtp_port&apos;] = 25gitlab_rails[&apos;smtp_user_name&apos;] = &quot;237497819@qq.com&quot;gitlab_rails[&apos;smtp_password&apos;] = &quot;*********&quot;gitlab_rails[&apos;smtp_domain&apos;] = &quot;smtp.qq.com&quot;gitlab_rails[&apos;smtp_authentication&apos;] = &quot;login&quot;gitlab_rails[&apos;smtp_enable_starttls_auto&apos;] = truegitlab_rails[&apos;smtp_tls&apos;] = falsegitlab_rails[&apos;smtp_openssl_verify_mode&apos;] = &apos;none&apos;gitlab_rails[&apos;smtp_ca_path&apos;] = &quot;/etc/ssl/certs&quot;gitlab_rails[&apos;smtp_ca_file&apos;] = &quot;/etc/ssl/certs/ca-certificates.crt&quot;## 用户配置user[&apos;git_user_email&apos;] = &quot;237497819@qq.com&quot; 汉化 GitLab 注意：汉化之前是必须设置root密码登录过的，否则有些必须文件没有生成，汉化不成功。 汉化包版本选择：version ≤ 8.8、version &gt; 8.8 查看安装的 GitLab 的版本 12cat /opt/gitlab/embedded/service/gitlab-rails/VERSION10.3.2 停止 GitLab 服务：gitlab-ctl stop git clone https://gitlab.com/xhang/gitlab.git 汉化操作： 12cd gitlabyes|cp -rf ../gitlab/* /opt/gitlab/embedded/service/gitlab-rails/ 重新启动查看效果：gitlab-ctl start 日常 GitLab 管理1gitlab-ctl start|stop|status|restart 常见错误解决在卸载 GitLab 然后再次安装执行 sudo gitlab-ctl reconfigure 的时候往往会出现：ruby_block[supervise_redis_sleep] action run，会一直卡无法往下进行。 按住 CTRL+C 强制结束； 运行：sudo systemctl restart gitlab-runsvdir 再次执行：sudo gitlab-ctl reconfigure gitlab-ctl reconfigure 之后，访问浏览器出现如下错误：Whoops, GitLab is taking too much time to respond. 使用 gitlab-ctl tail 查看完整的 gitlab-ctl reconfigure 日志 我出现这个的错误是因为日志中出现了端口占用 123==&gt; /var/log/gitlab/unicorn/unicorn_stderr.log &lt;==Errno::EADDRINUSE: Address already in use - bind(2) for 127.0.0.1:8080 vim /etc/gitlab/gitlab.rb 去修改 unicorn 的 url 和 port 12unicorn[&apos;listen&apos;] = &apos;127.0.0.1&apos;unicorn[&apos;port&apos;] = 8888 再次执行：sudo gitlab-ctl reconfigure 有时也可能是超时引起的这个错误，vim /etc/gitlab/gitlab.rb 去修改 webhook_timeout 12## WebHook 超时时间gitlab_rails[&apos;webhook_timeout&apos;] = 60 ​]]></content>
      <categories>
        <category>技术相关</category>
        <category>devops</category>
      </categories>
      <tags>
        <tag>技术相关</tag>
        <tag>gitlab</tag>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[提升 JAVA 编程技能]]></title>
    <url>%2F2017%2F12%2F11%2Ftips-for-improve-java-skill.html</url>
    <content type="text"><![CDATA[翻译自： How to improve Java programming skill 深入理解 OO 思想 多读 JAVA 相关的书籍 多练习，只有多去写代码，才能更懂代码 阅读关键的 API（java.lang.*，java.io.*，java.util.*）的源码 处理问题之前，花更多的时间去分析问题，这其实是在节约时间 通过帮助他人来提升自己对问题的理解 尽量写简单、容易理解的逻辑代码，而不是通过复杂的代码来彰显自己的代码多么牛逼，好的代码本身就是文档 多阅读大牛的技术博客 保持跟进新的 JAVA 技术，可以不去精通，但是你不能落后 多阅读文档 不要去和他人比较（最后一点，但并不是关键性的），最大的敌人永远是你自己]]></content>
      <categories>
        <category>技术相关</category>
      </categories>
      <tags>
        <tag>技术相关</tag>
        <tag>翻译</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[redux 和 mobx 初体验]]></title>
    <url>%2F2017%2F12%2F05%2Fredux-and-mobx-first.html</url>
    <content type="text"><![CDATA[前段时间搞了 Vue，现在又得开始写 React 了。 我堂堂的一个后端，真是太残忍啦 o(╯□╰)o 接触过 Vue 的应该都知道，Vue 的状态管理可以有两种实现，一种是 Vuex，还有一种是 eventBus 形式。 React 状态管理，老牌的应该是 Redux，但是存在了太多的概念，对于刚接触的童鞋不太友好。mobx 当属时代的新星了。不管从效率，还是易读性都远超 Redux。 下面带来俩小🌰大家感受下~~ 最简单的一个 redux 操作123456789101112131415161718192021222324252627import &#123;createStore&#125; from 'redux';const ADD_ACTION = 'ADD';const add = (num) =&gt; &#123; return &#123; type: ADD_ACTION, num &#125;;&#125;;const initialState = &#123; count: 0&#125;;const reducers = (state = initialState, action) =&gt; &#123; switch (action.type) &#123; case ADD_ACTION: return Object.assign(&#123;&#125;, state, &#123;count: state.count + action.num&#125;); default: return state; &#125;&#125;;const reduxStore = createStore(reducers);reduxStore.dispatch(add(1)); 最简单的一个 mobx 操作12345678910import &#123;observable, action&#125; from 'mobx';const mobxStore = observable(&#123; count: 0, add: action((num) =&gt; &#123; this.count += num; &#125;)&#125;);mobxStore.add(1);]]></content>
      <categories>
        <category>技术相关</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac 下彻底解决 mysql 中文乱码问题]]></title>
    <url>%2F2017%2F11%2F14%2Fmysql-chinese-character-encoding.html</url>
    <content type="text"><![CDATA[数据库中文乱码是个比较常见的问题，今天笔者就遇到了。 系统环境：macOS Sierra 10.12.6MySQL 版本：5.7.18 Homebrew连接软件：Navicat Premium 12.0.12 TNT edition MySQL程序问题1234567891011121314151617181920#启动mysql.server start#关闭mysql.server stop#执行mysql命令mysql;#查看编码设置[下面显示的是已经设置好的]mysql&gt; show variables like &apos;%char%&apos;;+--------------------------+--------------------------------------------------------+| Variable_name | Value |+--------------------------+--------------------------------------------------------+| character_set_client | utf8 || character_set_connection | utf8 || character_set_database | utf8 || character_set_filesystem | binary || character_set_results | utf8 || character_set_server | utf8 || character_set_system | utf8 || character_sets_dir | /usr/local/Cellar/mysql/5.7.18_1/share/mysql/charsets/ |+--------------------------+--------------------------------------------------------+ 与客户端（网页或软件：web／终端／数据库管理工具）有关的： character_set_client：对客户端的请求字符串进行编码 character_set_connection：连接服务器时的默认编码，例如navicat连接阿里云服务器 character_set_results：表示客户端想以哪种编码接收查询结果 如果后两个没有特别指定，则默认和character_set_client是一样的 与服务器端（增删查改命令）有关的： character_set_server：服务器编码 character_set_database：创建数据库时的默认编码 如果后一个没有特别指定，则默认和character_set_server是一样的 其他： character_set_filesystem：以二进制文件进行设置，不影响字符显示 character_set_system：用于mysql存储标识符，一直是UTF8，也不影响字符显示 因此如果字符编码有异常，我们只需要在my.cnf中对character_set_client与character_set_server进行设置就ok了。 12345#默认路径下，配置文件加载的先后顺序/etc/my.cnf/etc/mysql/my.cnf/usr/local/etc/my.cnf~/.my.cnf 但是我的系统是通过 homebrew 安装的 MySQL，默认情况下没有 my.cnf 文件。 1cd /etc &amp;&amp; touch my.cnf 使用 vi 编辑器将下面内容写入 /etc/my.cnf 。 1234[client]default-character-set=utf8[mysqld]character-set-server=utf8 保存退出，然后停止 MySQL（mysql.server stop），并重新启动 MySQL（mysql.server start），并用以下命令校验字符编码信息。 1234#执行mysql命令mysql -uroot -proot;#查看编码设置[下面显示的是已经设置好的]mysql&gt; show variables like &apos;%char%&apos;; MySQL 数据库数据问题如果显示的数据查询结果还是乱码，可能就是之前创建的数据库或数据表有问题了，可以通过以下方式进行检查。 查询数据库支持的所有字符集 1show character set;或者show char set; 查看mysql服务器当前状态 1status或者\s 查看数据库编码 1show create database dbname; 查看数据表编码 1show create table tablename\G; 查看数据表字段编码 1show full columns from tablename; 如果发现编码不是 UTF-8，请重新创建相应的数据库／数据表／字段 。 Mac终端－iTerm2软件设置这一种情况比较少见，就是Mac终端不支持显示中文，这样也会导致乱码。一方面对终端软件如iterm2的软件偏好设置进行修改为utf-8。另一方面就是在终端执行以下语句： 12LANG='zh_CN.UTF-8';export $LANG; MySQL 管理工具—Navicat 软件设置笔者这次遇到的问题就属于最后一种，前面的数据库配置，查看的编码都是正确的，并且使用程序查询出来的也没有乱码，偏偏 Navicat 显示数据表时中文便乱码了，那么请新建mysql服务器连接，Encoding那一栏不要选择默认的 UTF-8，选择Auto即可正常显示中文。 本文参考： Mac系统解决MySQL乱码问题]]></content>
      <categories>
        <category>技术相关</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用 Druid 加速 oracle 的查询]]></title>
    <url>%2F2017%2F11%2F10%2Fdruid-oracle-pscache.html</url>
    <content type="text"><![CDATA[问题最近，公司的 web 应用，查询数据有些慢，数据库使用的是 oracle，连接池采用了阿里巴巴温少开源的 Druid 连接池，于是开始寻找解决办法。 方法 首先我们需要做的应该是通过 Druid 来监控我们应用中的慢 SQL，然后对其进行优化。从 SQL 监控和 SQL 防火墙中，我发现我们的 SQL 并没有多少慢 SQL。于是排除了慢 SQL 导致查询变慢的原因。 Druid 中支持配置 PSCache。我们的 web 程序并没有开启这个选项，我们将其开启，发现查询返回的结果速度快了 20% 左右。 原理oracle 支持游标，一个 PreparedStatement 对应服务器一个游标，如果 PreparedStatement 被缓存起来重复执行，PreparedStatement 没有被关闭，服务器端的游标就不会被关闭，性能提高非常显著。在类似 SELECT * FROM T WHERE ID = ?这样的场景，启用 PSCache 和不启用 PSCache 的性能可能是相差一个数量级的。 连接 oracle 数据库，打开 PSCache，但是其他的数据库连接池都会存在内存占用过多的问题，Druid 是唯一解决这个问题的连接池。]]></content>
      <categories>
        <category>技术相关</category>
      </categories>
      <tags>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[dubbo前置知识：dubbo-admin 的安装]]></title>
    <url>%2F2017%2F11%2F08%2Fdubbo-admin-install.html</url>
    <content type="text"><![CDATA[dubbo-admin 是 dubbo 官方提供的一个的管控台程序，可以对 dubbo 服务进行监控，还可以对其进行权重分配、负载均衡策略等的调优操作，简而言之，我们可以通过 dubbo-admin，对我们的 dubbo 服务进行服务治理及服务监控。 现在，我们开始安装及配置 dubbo-admin。 首先启动我们之前安装了 zookeeper 集群的三台 Linux 虚拟机，并将虚拟机的 zookeeper 集群启动起来。 前往 GitHub 的 dubbo 仓库 去 clone 最新的 dubbo 源码。 12# yangkai.shen @ localhost in ~/Documents/code/open [16:23:11]$ git clone https://github.com/alibaba/dubbo.git 进入 dubbo 项目文件夹里的 dubbo-admin 文件夹中。 12# yangkai.shen @ localhost in ~/Documents/code/open [16:24:05] C:1$ cd dubbo/dubbo-admin 使用 maven 编译打包项目，然后在 dubbo/dubbo-admin/target 目录中得到 dubbo-admin 的 war 包程序。 12345678910111213141516171819202122# yangkai.shen @ localhost in ~/Documents/code/open/dubbo/dubbo-admin on git:master o [16:24:12]$ mvn package[INFO] Scanning for projects......省略中间一些日志信息...[INFO][INFO] --- maven-war-plugin:2.2:war (default-war) @ dubbo-admin ---[INFO] Packaging webapp[INFO] Assembling webapp [dubbo-admin] in [/Users/yangkai.shen/Documents/code/open/dubbo/dubbo-admin/target/dubbo-admin-2.5.6][INFO] Processing war project[INFO] Copying webapp resources [/Users/yangkai.shen/Documents/code/open/dubbo/dubbo-admin/src/main/webapp][INFO] Webapp assembled in [405 msecs][INFO] Building war: /Users/yangkai.shen/Documents/code/open/dubbo/dubbo-admin/target/dubbo-admin-2.5.6.war[INFO] WEB-INF/web.xml already added, skipping[INFO] ------------------------------------------------------------------------[INFO] BUILD SUCCESS[INFO] ------------------------------------------------------------------------[INFO] Total time: 3.831 s[INFO] Finished at: 2017-11-08T16:29:21+08:00[INFO] Final Memory: 15M/301M[INFO] ------------------------------------------------------------------------ 前往 Apache 的 Tomcat 主页，下载并解压一个新的 Tomcat 程序，专门用来启动 dubbo-admin 。 接下来我们开始对 Tomcat 以及 dubbo-admin 做一些配置。 删除 webapps/ROOT 目录下的所有文件，然后将 打包的 dubbo-admin.war 程序解压至 webapps/ROOT 目录下，注意不需要 dubbo-admin 这个目录，只要将里面的 WEB-INF 这级目录及其子目录的文件放置在 webapps/ROOT 中。 配置 dubbo-admin 的一些启动配置，配置文件是 WEB-INF/dubbo.properties ，我们需要把之前的 zookeeper 集群地址配置上。 12345678# zookeeper 地址，这里是集群配置，如果 zookeeper 是 standalone 模式，那么则不需要 ?backup=*** 这部分内容dubbo.registry.address=zookeeper://172.16.15.129:2181?backup=172.16.15.130:2181,172.16.15.131:2181# dubbo-admin 程序 root 用户的密码dubbo.admin.root.password=root# dubbo-admin 程序 guest 用户的密码dubbo.admin.guest.password=guest 因为考虑到我们自己写程序可能会占用8080端口，因此我们对这个专门为 dubbo-admin 的 Tomcat 重新配置端口，配置文件是 tomcat/conf/server.xml。 修改 HTTP 端口 12345678&lt;!--&lt;Connector port="8080" protocol="HTTP/1.1" connectionTimeout="20000" redirectPort="8443" /&gt;--&gt;&lt;Connector port="7777" protocol="HTTP/1.1" connectionTimeout="20000" redirectPort="8444" /&gt; 修改 远程停服务 端口 1234&lt;!--&lt;Server port="8005" shutdown="SHUTDOWN"&gt;--&gt;&lt;Server port="8006" shutdown="SHUTDOWN"&gt; 修改 AJP 端口 1234&lt;!--&lt;Connector port="8009" protocol="AJP/1.3" redirectPort="8444" /&gt; --&gt;&lt;Connector port="8010" protocol="AJP/1.3" redirectPort="8444" /&gt; 因为 dubbo-admin 程序较大，因此需要对 Tomcat 做一些调优准备， 在 tomcat/bin/catalina.sh 文件中的第二行加入 JAVA_OPTS=&#39;-Xms256m -Xmx512m&#39; ，如下所示。 123#!/bin/shJAVA_OPTS='-Xms256m -Xmx512m'# 省略剩余内容 配置、调优结束，我们就可以运行 tomcat/bin/start.sh 或者 tomcat/bin/start.bat，启动 Tomcat 查看效果了，因为现在只是搭建了 dubbo-admin 还没有 dubbo 服务，因此我们现在只浏览首页和一些系统页面。 浏览器输入 http://localhost:7777 弹出验证信息。 dubbo-admin 首页 系统状态 系统日志 系统环境]]></content>
      <categories>
        <category>技术相关</category>
      </categories>
      <tags>
        <tag>dubbo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[dubbo前置知识：zookeeper集群搭建]]></title>
    <url>%2F2017%2F11%2F01%2Fzookeeper-cluster.html</url>
    <content type="text"><![CDATA[拖了一天一天又一天，终于在时隔3月之后，又迎来了一篇新博客。真的是懒癌晚期了。o(╯□╰)o dubbo 框架需要将服务统一注册到一个注册中心，才能被远程调用。这里注册中心可以使用 zookeeper 或者 redis。 这里我们以 zookeeper 为例。zookeeper 可以单机版也就是 standalone模式运行，也可以使用集群方式运行。为了实现高可用，本例采用集群方式部署，需要保证至少半数以上的机器存活，所以至少为3台机器。话不多说，让我们开始 zookeeper 集群的搭建吧： 官网下载 zookeeper-3.4.10.tar.gz ，将软件包分别放在三台 Linux 虚拟机的 /software 目录下。 进入 software 目录下，解压软件包。 123456[root@localhost ~]# cd /software [root@localhost software]# tar -zxvf zookeeper-3.4.10.tar.gz[root@localhost software]# ll total 34228 drwxr-xr-x. 10 1001 1001 4096 Mar 23 2017 zookeeper-3.4.10 -rw-r--r--. 1 root root 35042811 Nov 1 14:58 zookeeper-3.4.10.tar.gz 解压后的文件夹名字包含了版本号，我们将其删除。 12345[root@localhost software]# mv zookeeper-3.4.10 zookeeper [root@localhost software]# ll total 34228 drwxr-xr-x. 10 1001 1001 4096 Mar 23 2017 zookeeper -rw-r--r--. 1 root root 35042811 Nov 1 14:58 zookeeper-3.4.10.tar.gz 进入刚解压的 zookeeper 的目录中 12345678910111213141516171819202122[root@bogon software]# cd zookeeper/ [root@bogon zookeeper]# ll total 1580 drwxr-xr-x. 2 1001 1001 4096 Mar 23 2017 bin -rw-rw-r--. 1 1001 1001 84725 Mar 23 2017 build.xml drwxr-xr-x. 2 1001 1001 74 Mar 23 2017 conf drwxr-xr-x. 10 1001 1001 4096 Mar 23 2017 contrib drwxr-xr-x. 2 1001 1001 4096 Mar 23 2017 dist-maven drwxr-xr-x. 6 1001 1001 4096 Mar 23 2017 docs -rw-rw-r--. 1 1001 1001 1709 Mar 23 2017 ivysettings.xml -rw-rw-r--. 1 1001 1001 5691 Mar 23 2017 ivy.xml drwxr-xr-x. 4 1001 1001 4096 Mar 23 2017 lib -rw-rw-r--. 1 1001 1001 11938 Mar 23 2017 LICENSE.txt -rw-rw-r--. 1 1001 1001 3132 Mar 23 2017 NOTICE.txt -rw-rw-r--. 1 1001 1001 1770 Mar 23 2017 README_packaging.txt -rw-rw-r--. 1 1001 1001 1585 Mar 23 2017 README.txt drwxr-xr-x. 5 1001 1001 44 Mar 23 2017 recipes drwxr-xr-x. 8 1001 1001 4096 Mar 23 2017 src -rw-rw-r--. 1 1001 1001 1456729 Mar 23 2017 zookeeper-3.4.10.jar -rw-rw-r--. 1 1001 1001 819 Mar 23 2017 zookeeper-3.4.10.jar.asc -rw-rw-r--. 1 1001 1001 33 Mar 23 2017 zookeeper-3.4.10.jar.md5 -rw-rw-r--. 1 1001 1001 41 Mar 23 2017 zookeeper-3.4.10.jar.sha1 解释一下，几个常见目录里的内容： bin 目录里存放的是一些可执行文件，基本以 *.bat 和 *.sh 结尾的文件。 conf 目录里存放的是项目（软件）运行时的一些配置文件。 contrib 目录存放的内容官方未提供的一些附加软件。 dist-maven 目录存放的是 zookeeper 使用 maven 编译之后的源码和 jar文件 docs 目录里存放的是一些文档 lib 目录里存放的是依赖库 recipes 目录下存放的是使用 zookeeper 实现的分布式锁、高并发、队列的一些方案 src 目录里存放的是源码文件 在 conf 文件夹里对 zookeeper 进行配置，将示例配置文件复制并改名 1234567891011121314[root@bogon software]# cd zookeeper/conf/ [root@bogon conf]# ll total 12 -rw-rw-r--. 1 1001 1001 535 Mar 23 2017 configuration.xsl -rw-rw-r--. 1 1001 1001 2161 Mar 23 2017 log4j.properties -rw-rw-r--. 1 1001 1001 922 Mar 23 2017 zoo_sample.cfg[root@bogon conf]# cp zoo_sample.cfg zoo.cfg [root@bogon conf]# ll total 16 -rw-rw-r--. 1 1001 1001 535 Mar 23 2017 configuration.xsl -rw-rw-r--. 1 1001 1001 2161 Mar 23 2017 log4j.properties -rw-r--r--. 1 root root 922 Nov 2 14:40 zoo.cfg -rw-rw-r--. 1 1001 1001 922 Mar 23 2017 zoo_sample.cfg[root@bogon conf]# vim zoo.cfg 然后在 zoo.cfg 里加上一些配置 1234567891011121314151617181920212223242526272829303132333435363738tickTime=2000 # The number of ticks that the initial # synchronization phase can take initLimit=10 # The number of ticks that can pass between # sending a request and getting an acknowledgement syncLimit=5 # the directory where the snapshot is stored. # do not use /tmp for storage, /tmp here is just # example sakes. ################ 修改的地方1 ################ # dataDir=/tmp/zookeeper# 将原先的 dataDir 注释，并修改成自定义的路径 dataDir=/software/zookeeper/data # the port at which the clients will connect clientPort=2181 # the maximum number of client connections. # increase this if you need to handle more clients #maxClientCnxns=60 # # Be sure to read the maintenance section of the # administrator guide before turning on autopurge. # # http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance # # The number of snapshots to retain in dataDir #autopurge.snapRetainCount=3 # Purge task interval in hours # Set to "0" to disable auto purge feature #autopurge.purgeInterval=1 ################ 修改的地方2 ################ # 在文件的末尾加上 server.0=172.16.15.129:2888:3888 server.1=172.16.15.130:2888:3888 server.2=172.16.15.131:2888:3888 新建配置文件中的 dataDir 配置的目录 123456789101112131415161718192021222324[root@bogon conf]# cd ../ [root@bogon zookeeper]# mkdir data [root@bogon zookeeper]# ll total 1580 drwxr-xr-x. 2 1001 1001 4096 Mar 23 2017 bin -rw-rw-r--. 1 1001 1001 84725 Mar 23 2017 build.xml drwxr-xr-x. 2 1001 1001 88 Nov 2 14:57 conf drwxr-xr-x. 10 1001 1001 4096 Mar 23 2017 contrib drwxr-xr-x. 2 root root 6 Nov 2 14:58 data drwxr-xr-x. 2 1001 1001 4096 Mar 23 2017 dist-maven drwxr-xr-x. 6 1001 1001 4096 Mar 23 2017 docs -rw-rw-r--. 1 1001 1001 1709 Mar 23 2017 ivysettings.xml -rw-rw-r--. 1 1001 1001 5691 Mar 23 2017 ivy.xml drwxr-xr-x. 4 1001 1001 4096 Mar 23 2017 lib -rw-rw-r--. 1 1001 1001 11938 Mar 23 2017 LICENSE.txt -rw-rw-r--. 1 1001 1001 3132 Mar 23 2017 NOTICE.txt -rw-rw-r--. 1 1001 1001 1770 Mar 23 2017 README_packaging.txt -rw-rw-r--. 1 1001 1001 1585 Mar 23 2017 README.txt drwxr-xr-x. 5 1001 1001 44 Mar 23 2017 recipes drwxr-xr-x. 8 1001 1001 4096 Mar 23 2017 src -rw-rw-r--. 1 1001 1001 1456729 Mar 23 2017 zookeeper-3.4.10.jar -rw-rw-r--. 1 1001 1001 819 Mar 23 2017 zookeeper-3.4.10.jar.asc -rw-rw-r--. 1 1001 1001 33 Mar 23 2017 zookeeper-3.4.10.jar.md5 -rw-rw-r--. 1 1001 1001 41 Mar 23 2017 zookeeper-3.4.10.jar.sha1 在 data 目录中新建一个 myid 文件，这个文件中的内容存放配置文件中对应 IP 的 serverId。 1234[root@bogon zookeeper]# cd data [root@bogon data]# vim myid[root@bogon data]# cat myid 0 将 zookeeper 的目录配置在 Linux 系统的环境变量中 1[root@bogon data]# vim /etc/profile 在文件末尾添加 12export ZOOKEEPER_HOME=/software/zookeeperexport PATH=$ZOOKEEPER_HOME/bin:$PATH 然后让环境变量生效 1[root@bogon data]# source /etc/profile 将另外两台虚拟机也按照 2-7 的步骤配置，注意第6步的 myid 文件里存放的内容，应该与 zoo.cfg 配置文件末尾的 server.n=ip:2888:3888 的 n 对应 配置完环境变量之后，我们就可以不需要到 bin 目录下，直接在任意目录下执行 zookeeper 中 bin 目录下的文件了。 zkServer.sh status ：查看 zookeeper 的状态 zkServer.sh start ：启动 zookeeper zkServer.sh stop ：关闭 zookeeper 分别查看各个虚拟机的启动情况，以及启动后的状态。 虚拟机1：(follower) 123456789101112[root@bogon software]# zkServer.sh status ZooKeeper JMX enabled by default Using config: /software/zookeeper/bin/../conf/zoo.cfg Error contacting service. It is probably not running. [root@bogon software]# zkServer.sh start ZooKeeper JMX enabled by default Using config: /software/zookeeper/bin/../conf/zoo.cfg Starting zookeeper ... STARTED [root@bogon software]# zkServer.sh status ZooKeeper JMX enabled by default Using config: /software/zookeeper/bin/../conf/zoo.cfg Mode: follower 虚拟机2：(leader) 123456789101112[root@bogon ~]# zkServer.sh status ZooKeeper JMX enabled by default Using config: /software/zookeeper/bin/../conf/zoo.cfg Error contacting service. It is probably not running. [root@bogon ~]# zkServer.sh start ZooKeeper JMX enabled by default Using config: /software/zookeeper/bin/../conf/zoo.cfg Starting zookeeper ... STARTED [root@bogon ~]# zkServer.sh status ZooKeeper JMX enabled by default Using config: /software/zookeeper/bin/../conf/zoo.cfg Mode: leader 虚拟机3：(follower) 123456789101112[root@bogon ~]# zkServer.sh status ZooKeeper JMX enabled by default Using config: /software/zookeeper/bin/../conf/zoo.cfg Error contacting service. It is probably not running. [root@bogon ~]# zkServer.sh start ZooKeeper JMX enabled by default Using config: /software/zookeeper/bin/../conf/zoo.cfg Starting zookeeper ... STARTED [root@bogon ~]# zkServer.sh status ZooKeeper JMX enabled by default Using config: /software/zookeeper/bin/../conf/zoo.cfg Mode: follower 至此，zookeeper 集群的简单搭建已经正式结束了。当然还有一些个性化（调优）的配置参数，请自行参照 zookeeper 的官方文档 在 zoo.cfg 中配置。]]></content>
      <categories>
        <category>技术相关</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql启动报错问题]]></title>
    <url>%2F2017%2F08%2F31%2Fmysql-start-error.html</url>
    <content type="text"><![CDATA[今天公司 windows 服务器 MySQL 数据库启动异常，记录下原因。 问题重现执行 net start mysql 的时候出现如下错误： 123系统出错发生系统错误 1067进程意外终止 排查问题查阅资料，普遍的解决方法是，my.ini 文件中需要存在 basedir 和 datadir 这两个配置 但是我的 my.ini 原本就已经加入了这两个配置，仍然启动错误。 排查原因，发现是 mysql 的 3306 端口被IEXPLORE.exe占用了 1234# windows 下查看端口占用netstat -aon|findstr "3306"# windows 下根据 id 查看对应程序tasklist|findstr "2016" 解决问题打开任务管理器， IEXPLORE.exe 的程序杀死，重新 net start mysql MySQL 就愉快的重新启动了。]]></content>
      <categories>
        <category>技术相关</category>
      </categories>
      <tags>
        <tag>技术相关</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自定义阻塞队列]]></title>
    <url>%2F2017%2F08%2F02%2Fcustomize-blocked-queue.html</url>
    <content type="text"><![CDATA[今天重温了下 java 多线程中的 notify() 方法以及 wait() 方法，一时兴起，决定通过这俩个方法，实现一个简易的自定义阻塞队列。 阻塞队列是什么，与普通队列的区别是什么？阻塞队列与普通队列的区别在于，当队列是空的时，从队列中获取元素的操作将会被阻塞，或者当队列是满时，往队列里添加元素的操作会被阻塞。试图从空的阻塞队列中获取元素的线程将会被阻塞，直到其他的线程往空的队列插入新的元素。同样，试图往已满的阻塞队列中添加新元素的线程同样也会被阻塞，直到其他的线程使队列重新变得空闲起来。 新建一个 MyQueue.java 类 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788import java.util.LinkedList;import java.util.concurrent.atomic.AtomicInteger;import com.xiaoleilu.hutool.util.StrUtil;/** * 使用 notify() 和 wait() 实现自定义阻塞队列 * * @author Yangkai.Shen * @version 1.0 * @date 2017.08.02 at 11:51:14 */public class MyQueue &#123; // 1. 承载数据的容器 private LinkedList&lt;Object&gt; queue = new LinkedList&lt;Object&gt;(); // 2. 计数器，用于判定边界 private AtomicInteger count = new AtomicInteger(0); private final int minSize = 0; // 3. 初始化一个对象，用于加锁 private final Object lock = new Object(); private final int maxSize; public MyQueue(int maxSize) &#123; this.maxSize = maxSize; &#125; /** * 添加一个元素到队列中，如果队列元素已满，则调用此方法的线程被阻塞，直到存在多余空间了，再进行添加 * * @param obj 添加 obj 到队列尾部 */ public void put(Object obj) &#123; synchronized (lock) &#123; // 1.没有多余空间，就阻塞线程 while (count.get() == this.maxSize) &#123; try &#123; lock.wait(); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125; // 2.添加元素 queue.add(obj); // 3.计数器累加 count.incrementAndGet(); System.out.println(StrUtil.format("新加入的元素为：&#123;&#125;", obj)); // 4.唤醒其他线程（若本来元素为空，有线程调用 get 方法，那么原本被阻塞的，需要在此时被唤醒） lock.notify(); &#125; &#125; /** * 获取一个元素，如果队列元素为空，则调用此方法的线程被阻塞，直到添加新元素了，再进行获取 * * @return 返回队列的第一个元素 */ public Object get() &#123; Object ret = null; synchronized (lock) &#123; // 1.没有元素，就阻塞线程 while (count.get() == this.minSize) &#123; try &#123; lock.wait(); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125; // 2.取第一个元素 ret = queue.removeFirst(); // 3.计数器递减 count.decrementAndGet(); System.out.println(StrUtil.format("移除的元素为：&#123;&#125;", ret)); // 4.唤醒其他线程（若元素本来已满，有线程调用 put 方法，那么原本被阻塞的，需要在此时被唤醒） lock.notify(); &#125; return ret; &#125; public int getSize() &#123; return this.count.get(); &#125;&#125; 新建一个测试类 MyQueueTest.java，测试类中，我们初始化一个队列，并将元素填满，然后启动一个线程 t1，去插入数据，中间休眠2s，再去启动一个线程 t2 取数据。 123456789101112131415161718192021222324252627282930313233343536import com.xiaoleilu.hutool.util.StrUtil;import java.util.concurrent.TimeUnit;public class MyQueueTest &#123; public static void main(String[] args) &#123; final MyQueue queue = new MyQueue(5); queue.put("a"); queue.put("b"); queue.put("c"); queue.put("d"); queue.put("e"); System.out.println(StrUtil.format("当前队列的长度: &#123;&#125;", queue.getSize())); Thread t1 = new Thread(() -&gt; &#123; queue.put("f"); queue.put("g"); queue.put("h"); &#125;, "t1"); Thread t2 = new Thread(() -&gt; &#123; queue.get(); queue.get(); &#125;); t1.start(); try &#123; TimeUnit.SECONDS.sleep(2); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; t2.start(); &#125;&#125; 启动测试类，查看运行结果。控制台如果应该出现的效果是，队列先初始化完成，然后休眠2s，接下来先取数据，再插入数据，则证明阻塞队列生效。下面是控制台运行的效果： 初始化队列 休眠2s后取队首元素，再插入队尾元素 此时我们会发现，程序还未停止，因为此时队列已满，但是线程 t1 还未插入 h 元素，因此线程被阻塞着，直至下次队列有空余空间才会被唤醒。 至此，一个自定义阻塞队列就已经实现了。 细心的朋友会发现，我打印的 log 里用到了一个 StrUtil.format() 方法，这个和 slf4j 的 log 用法一致，可以使用占位符。这个是用到了一个国产良心工具类，hutool，国产开源，需要大家的支持，觉得好用的话，期望可以去 码云 或者 github 上给个 Star 吧！]]></content>
      <categories>
        <category>技术相关</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>技术相关</tag>
        <tag>多线程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[spring-boot整合mybatis的时候使用logback打印日志]]></title>
    <url>%2F2017%2F07%2F19%2Fspring-boot-mybatis-logback.html</url>
    <content type="text"><![CDATA[最近在学习 spring boot ，日志用的是 logback ，至于为什么没有选常用的 log4j ，因为 logback 是 spring boot 官方推荐的日志系统。但是在整合 Mybatis 的时候一直打印不了 SQL 语句，查阅多方资料，终于解决了~ 先展示下 logback-spring.xml 的完整内容 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667&lt;?xml version="1.0" encoding="utf-8" ?&gt;&lt;configuration&gt; &lt;appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender"&gt; &lt;layout class="ch.qos.logback.classic.PatternLayout"&gt; &lt;pattern&gt;【xkcoding】%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %-5level [%thread] %logger&#123;36&#125; - %msg%n&lt;/pattern&gt; &lt;/layout&gt; &lt;/appender&gt; &lt;appender name="fileLog" class="ch.qos.logback.core.rolling.RollingFileAppender"&gt; &lt;!--滚动策略--&gt; &lt;rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"&gt; &lt;!--输出路径--&gt; &lt;fileNamePattern&gt;$&#123;user.dir&#125;/logs/log/online-study.%d.log&lt;/fileNamePattern&gt; &lt;/rollingPolicy&gt; &lt;encoder&gt; &lt;pattern&gt;【xkcoding】%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %-5level [%thread] %logger&#123;36&#125; - %msg%n&lt;/pattern&gt; &lt;/encoder&gt; &lt;/appender&gt; &lt;appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender"&gt; &lt;filter class="ch.qos.logback.classic.filter.LevelFilter"&gt; &lt;level&gt;ERROR&lt;/level&gt; &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt; &lt;onMismatch&gt;DENY&lt;/onMismatch&gt; &lt;/filter&gt; &lt;!--滚动策略--&gt; &lt;rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"&gt; &lt;!--输出路径--&gt; &lt;fileNamePattern&gt;$&#123;user.dir&#125;/logs/error/online-study.%d.error&lt;/fileNamePattern&gt; &lt;/rollingPolicy&gt; &lt;encoder&gt; &lt;pattern&gt;【xkcoding】%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %-5level [%thread] %logger&#123;36&#125; - %msg%n&lt;/pattern&gt; &lt;/encoder&gt; &lt;/appender&gt; &lt;!-- logger 属性： 1)name:用来指定受此logger约束的某一个包或者具体的某一个类 2)level:用来设置打印级别，大小写无关（最常用的几种）：DEBUG, INFO, WARN, ERROR --&gt; &lt;!-- 用于打印 Spring 在启动的时候初始化各个 Bean 的信息 --&gt; &lt;logger name="org.springframework.web" level="DEBUG"/&gt; &lt;!-- mybatis 日志打印如果在 ssm 中，可能就需要下边的7行了。--&gt; &lt;!--&lt;logger name="com.ibatis" level="DEBUG" /&gt;--&gt; &lt;!--&lt;logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" /&gt;--&gt; &lt;!--&lt;logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" /&gt;--&gt; &lt;!--&lt;logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" /&gt;--&gt; &lt;!--&lt;logger name="java.sql.Connection" level="DEBUG" /&gt;--&gt; &lt;!--&lt;logger name="java.sql.Statement" level="DEBUG" /&gt;--&gt; &lt;!--&lt;logger name="java.sql.PreparedStatement" level="DEBUG" /&gt;--&gt; &lt;!-- 以下这一句至关重要如果没有，就无法输出 sql 语句 --&gt; &lt;!--注意：在 spring boot 中，想在控制台打印 mybatis 的 sql 语句，只需要配置下边这一句就好了。--&gt; &lt;!--如果想要记录更详细的 SQL 日志，只需要把下面的日志级别改成 TRACE 就可以了--&gt; &lt;!--即将 mapper 接口打入 logger 就行。--&gt; &lt;logger name="com.xkcoding.dao" level="DEBUG"&gt;&lt;/logger&gt; &lt;root level="info"&gt; &lt;appender-ref ref="consoleLog"/&gt; &lt;appender-ref ref="fileLog"/&gt; &lt;appender-ref ref="fileErrorLog"/&gt; &lt;/root&gt;&lt;/configuration&gt; 如果是 Log4J 实现的话可以参考Mybatis 日志 第一个节点 consoleLog 是在控制台显示的 Log 日志，在控制台显示 Log 日志需要在 appender 节点里配置 class=&quot;ch.qos.logback.core.ConsoleAppender&quot; ，格式化输出的配置在 pattern 节点中配置，各个参数的介绍如下： 123456%-5level: 显示 Log 级别，从左显示5个字符宽度，打印内容: TRACE/DEBUG/INFO/WARN/ERROR%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;: 显示时间戳，&#123;&#125;中内容代表时间戳格式%thread: 显示线程名字%logger&#123;36&#125;: 表示 logger 名字最长36个字符，否则按照句点分割%msg: 日志消息%n: 换行符 第二个节点 fileLog 是将日志保存为文件，需要在 appender 节点里配置 class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot; ，并且指定滚动策略，为每天一个文件，指定文件名为 %d.log 。 12345&lt;!--滚动策略--&gt;&lt;rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"&gt; &lt;!--输出路径--&gt; &lt;fileNamePattern&gt;$&#123;user.dir&#125;/logs/log/online-study.%d.log&lt;/fileNamePattern&gt;&lt;/rollingPolicy&gt; 第三个节点 fileErrorLog 是将错误日志记录在文件中，不保存其他级别的日志，需要配置一个 filter 节点。拦截内容如下（注意单词大小写，千万不能出错！）： 12345&lt;filter class="ch.qos.logback.classic.filter.LevelFilter"&gt; &lt;level&gt;ERROR&lt;/level&gt; &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt; &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;&lt;/filter&gt; 在这里再推荐一个 maven 依赖，lombok 1234&lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt;&lt;/dependency&gt; 在 idea 里安装 lombok 的相应插件 然后就可以在类名上方添加 @Slf4j 注解，这样就可以直接在代码中使用 log.info(&quot;....&quot;) 打印日志了。 再提示下 lombok 的其他使用技巧，如果使用了 lombok ，只要在实体类的类名上加上 @Data 注解，那么我们就不需要写 getter/ setter/toString 方法，lombok 会自动生成 getter/setter/toString 方法，我们直接调用就可以了，如果只需要生成 getter 或者 setter，就可以直接使用 @Getter 或者 @Setter 注解。并且 @Getter 和 @Setter 这两个注解不止可以用在 Class 上，还可以用在 Enum 上哦。 就介绍到这儿，enjoy it !!!]]></content>
      <categories>
        <category>技术相关</category>
        <category>spring boot</category>
      </categories>
      <tags>
        <tag>spring boot</tag>
        <tag>mybatis</tag>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows10 系统下载与激活]]></title>
    <url>%2F2017%2F07%2F18%2Fwin10-download.html</url>
    <content type="text"><![CDATA[windows 是目前我们用的最多一个系统，win10 现在也优化的越来越好，今天大姐的电脑有点问题，担心太蠢，不会下载和激活系统，所以整理并记录一下如何下载并激活 win10 系统，以供查阅。 微软各类软件下载地址（国人自己搞得，非微软官方） 选择 win10 更新版本 选择 win10 的具体版本 复制版本下载地址，使用迅雷下载我已经把64位多版本的链接单独抠出来了，需要的直接拿去用~ 1ed2k://|file|cn_windows_10_multiple_editions_version_1703_updated_june_2017_x64_dvd_10724850.iso|5741144064|7717C389428734009E0350A1BB8F2508|/ 附赠一个激活工具下载地址 提取码：1pdp 这个激活工具很强大，可以激活 windows 系统 和 office 软件，并且提供 office 2016和 office 2013两个版本的自动安装功能。 激活工具的使用，下载激活工具，解压压缩包，得到一个名为 KMSTools.exe 的文件，然后右键，以管理员身份运行。（运行之前，注意关闭所有杀毒软件！） 打开之后，选择第二个 KMSAuto Lite 弹出另一个界面，点击 Activate Windows 选择，然后当下面的蓝框框输出 ACTIVATION SUCCESSFUL 的时候，就代表激活成功了。如果卡住了，可以多试几次。 have fun!]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>win10</tag>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HashMap 的 JDK 源码探索]]></title>
    <url>%2F2017%2F07%2F12%2Fjdk-map-source-explore.html</url>
    <content type="text"><![CDATA[缘由：今天好友拿着下面的代码，问我为什么Map.Entry 这个接口没有实现 getKey() 和 getValue() 方法，却可以使用，由此，开启了一番查阅 JDK 源码的旅途…. 12345678910111213Map map = new HashMap(); map.put(1, "张三");map.put(2, "李四");map.put(3, "王五");map.put(4, "赵六");map.put(5, "钱七"); Set set = map.entrySet();for (Object object : set) &#123; Map.Entry entry = (Map.Entry) object; System.out.println(entry.getKey() + "--&gt;" + entry.getValue());&#125; 首先，我们看 map 对象，这个 map 对象是 HashMap 的一个实例，然后下面的 Set set = map.entrySet(); 可以知道这其实用的 HashMap 实现的 entrySet() 方法，然后我们可以查看 HashMap 里 entrySet() 的源码 从源码可以看出，这里的返回了一个 EntrySet 对象，但是需要注意的是这个 EntrySet 是 HashMap 里的一个内部类，源码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051final class EntrySet extends AbstractSet&lt;Map.Entry&lt;K,V&gt;&gt; &#123; public final int size() &#123; return size; &#125; public final void clear() &#123; HashMap.this.clear(); &#125; public final Iterator&lt;Map.Entry&lt;K,V&gt;&gt; iterator() &#123; return new EntryIterator(); &#125; public final boolean contains(Object o) &#123; if (!(o instanceof Map.Entry)) return false; Map.Entry&lt;?,?&gt; e = (Map.Entry&lt;?,?&gt;) o; Object key = e.getKey(); Node&lt;K,V&gt; candidate = getNode(hash(key), key); return candidate != null &amp;&amp; candidate.equals(e); &#125; public final boolean remove(Object o) &#123; if (o instanceof Map.Entry) &#123; Map.Entry&lt;?,?&gt; e = (Map.Entry&lt;?,?&gt;) o; Object key = e.getKey(); Object value = e.getValue(); return removeNode(hash(key), key, value, true, true) != null; &#125; return false; &#125; public final Spliterator&lt;Map.Entry&lt;K,V&gt;&gt; spliterator() &#123; return new EntrySpliterator&lt;&gt;(HashMap.this, 0, -1, 0, 0); &#125; public final void forEach(Consumer&lt;? super Map.Entry&lt;K,V&gt;&gt; action) &#123; Node&lt;K,V&gt;[] tab; if (action == null) throw new NullPointerException(); if (size &gt; 0 &amp;&amp; (tab = table) != null) &#123; int mc = modCount; for (int i = 0; i &lt; tab.length; ++i) &#123; for (Node&lt;K,V&gt; e = tab[i]; e != null; e = e.next) action.accept(e); &#125; if (modCount != mc) throw new ConcurrentModificationException(); &#125; &#125;&#125; 从这里我们是可以看出，这个 EntrySet 其实是封装的一个 Node 类的实体。也就是说我们的 set 其实就是这个 Node 对象。 现在我们来说说这个 Node 对象，Node 对象也是 HashMap 里的一个内部类，源码如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; &#123; final int hash; final K key; V value; Node&lt;K,V&gt; next; Node(int hash, K key, V value, Node&lt;K,V&gt; next) &#123; this.hash = hash; this.key = key; this.value = value; this.next = next; &#125; public final K getKey() &#123; return key; &#125; public final V getValue() &#123; return value; &#125; public final String toString() &#123; return key + "=" + value; &#125; public final int hashCode() &#123; return Objects.hashCode(key) ^ Objects.hashCode(value); &#125; public final V setValue(V newValue) &#123; V oldValue = value; value = newValue; return oldValue; &#125; public final boolean equals(Object o) &#123; if (o == this) return true; if (o instanceof Map.Entry) &#123; Map.Entry&lt;?,?&gt; e = (Map.Entry&lt;?,?&gt;)o; if (Objects.equals(key, e.getKey()) &amp;&amp; Objects.equals(value, e.getValue())) return true; &#125; return false; &#125;&#125; 可以看出来，这个 Node 对象是 Map.Entry&lt;K,V&gt; 的实现类，我们可以看到这个 Node 对象实现了 getKey() 和 getValue() 的方法，所以后面调用的 entry.getKey() 以及 entry.getValue() 方法其实都是调用的 Node 对象里的getKey() 和 getValue() 方法，这里就是 Java 的多态的一种表现。 至此，打完收枪！]]></content>
      <categories>
        <category>技术相关</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>JDK HashMap 源码探索</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle 11gR2 RAC的JDBC连接串]]></title>
    <url>%2F2017%2F01%2F06%2Fconnect-oracle11g-rac-url.html</url>
    <content type="text"><![CDATA[今天tomcat启动时，连接oracle直接报错，出现ORA-12505的问题，最开始，我以为错误的原因是jdbc连接Oracle的连接串中的sid配置的不对，oracle不能解析连接串中的sid名字，所以拒绝了连接。在连接字串中写入正确的sid即可。于是，查看数据库中当前的sid:1select INSTANCE_NAME from v$instance; 发现sid果然不同，然后将url的sid换成查出来的sid，果然连接上了。但是我仔细一想，我用原来的sid通过navicat是可以连上oracle的，为什么jdbc会连接不上呢？查资料得知，对于Oracle的JDBC连接，是支持EZ-Connect写法的，即jdbc:oracle:thin:@Server:1521/Database但对于Oracle 11gR2 RAC系统，如果Server用了ScanName，Database用了数据库的ServiceName，并不能连接到数据库，而是报SID错误。原因可能是此种写法，JDBC将Database解析为了数据库的SID。经多方测试，可用如下写法实现11GR2的数据库连接的负载均衡，特此记录下：jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST = scan-name)(PORT = 1521))(CONNECT_DATA = (SERVER = DEDICATED)(SERVICE_NAME = DatabaseServiceName)))]]></content>
      <categories>
        <category>技术相关</category>
        <category>oracle</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[elasticsearch环境搭建及起步]]></title>
    <url>%2F2016%2F12%2F13%2Felasticsearch-get-start.html</url>
    <content type="text"><![CDATA[ElasticSearch 概述 ElasticSearch是一个高可扩展的开源的全文搜索分析引擎。 它允许你快速的存储、搜索和分析大量数据。ElasticSearch通常作为后端程序，为需要复杂查询的应用提供服务。 Elasticsearch是一个基于Lucene的开源分布式搜索引擎，具有分布式多用户能力。Elasticsearch是用java开发，提供Restful接口，能够达到实时搜索、高性能计算；同时Elasticsearch的横向扩展能力非常强，不需要重启服务，基本上达到了零配置。 ElasticSearch 安装 在VMware上安装centos7 安装vim，输入yum install -y vim 安装git，输入：yum install -y git 安装jdk1.8+ 查看CentOS自带JDK是否已安装，输入：yum list installed |grep java。 若有自带安装的JDK，卸载CentOS系统自带Java环境。 卸载JDK相关文件，输入：yum -y remove java-1.8.0-openjdk*。 卸载tzdata-java，输入：yum -y remove tzdata-java.noarch。当结果显示为Complete！即卸载完毕。 注：“*”表示卸载掉java1.8.0的所有openjdk相关文件。 新建目录mkdir /usr/java/ 将下载的jdk的rpm包上传至/usr/java文件夹中，修改权限，输入chmod +x jdk-8u111-linux-x64.rpm 输入rpm -ivh jdk-8u101-linux-x64.rpm安装 输入PATH=&quot;${PATH}:/usr/java/jdk1.8.0_111&quot;，修改环境变量 查看刚安装的Java版本信息，输入：java -version 可查看Java版本。 打开xshell通过xftp将elasticsearch-2.1.1.tar.gz传到虚拟机/opt中，cd到opt目录，输入tar zxvf elasticsearch-2.1.1.tar.gz，解压至当前目录。 注：不可以使用root用户启动elasticsearch，这是出于系统安全考虑设置的条件。由于ElasticSearch可以接收用户输入的脚本并且执行，为了系统安全考虑，建议创建一个单独的用户用来运行xkcoding 如果是用root账号启动，会报以下错误 1Exception in thread "main" java.lang.RuntimeException: don't run elasticsearch as root. at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:93) at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:144) at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285) at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35) Refer to the log for complete error details. 创建xkcoding用户组及xkcoding用户 12groupadd xkcodinguseradd xkcoding -g xkcoding -p elasticsearch-2.1.1 更改elasticsearch-2.1.1文件夹及内部文件的所属用户及组为xkcoding:xkcoding 12cd /optchown -R xkcoding:xkcoding elasticsearch-2.1.1 切换到elsearch用户再启动 123su xkcodingcd elasticsearch-2.1.1./bin/elasticsearch -d #以守护进程的方式运行 打开一个新的终端进行测试 1curl 'http://localhost:9200/?pretty' 查看返回数据 123456789101112&#123; "name" : "node-1", "cluster_name" : "togeek", "version" : &#123; "number" : "2.1.1", "build_hash" : "40e2c53a6b6c2972b3d13846e450e66f4375bd71", "build_timestamp" : "2015-12-15T13:05:55Z", "build_snapshot" : false, "lucene_version" : "5.3.1" &#125;, "tagline" : "You Know, for Search"&#125; 需要从windows本机访问centos7虚拟机，因此需要关闭防火墙 CentOS 7.0默认使用的是firewall作为防火墙，使用iptables必须重新设置一下 直接关闭防火墙 12systemctl stop firewalld.service #停止firewallsystemctl disable firewalld.service #禁止firewall开机启动 设置 iptables service 1yum -y install iptables-services 如果要修改防火墙配置，如增加防火墙端口9200 1vi /etc/sysconfig/iptables 增加规则 1-A INPUT -m state --state NEW -m tcp -p tcp --dport 9200 -j ACCEPT 保存退出后 12systemctl restart iptables.service #重启防火墙使配置生效systemctl enable iptables.service #设置防火墙开机启动 最后重启系统使设置生效即可。 在windows的cmd中测试，返回json，测试通过！]]></content>
      <categories>
        <category>elasticsearch</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Lenovo System X3250 M5服务器安装CentOS6.4]]></title>
    <url>%2F2016%2F08%2F31%2Fserver-install-centos6.html</url>
    <content type="text"><![CDATA[前言第一次真正接触服务器，公司要求安装linux系统，花了2天时间，因为该服务器比较复杂，以此文记录下安装过程中出现的问题。 问题一：安装系统时无法识别硬盘问题描述： Lenovo System X3250 M5 该服务器最初是存在磁盘阵列的，也就是Raid模式，因此使用 U盘安装系统 时，有时会出现无法识别硬盘的状态。 问题解决： 手动加载驱动的方法 centos 6.2进入安装界面时Tab键进入高级选项，追加输入 linux dd，这样安装时会提示加载disk driver。用管理卡挂载驱动镜像即可。 centos 5.8进入安装界面直接在boot:后面输入 linux dd。 PXE安装自动加载驱动 ks文件中在开头附近增加driverdisk选项 driverdisk --source=http://$ip/driverimg.iso 问题二：使用U盘安装系统，安装过程中说找不到ISO文件问题描述： 该问题是使用U盘安装系统时会出现的，使用U盘安装的步骤： 使用UltraISO（软碟通）将linux系统镜像写入U盘 ，并且将ISO文件放入U盘 设置U盘启动 安装 问题解决： 方法一：该问题是因为第一步中，U盘格式为FAT32格式，因此镜像大小需小于4G才可以放入U盘，一般系统64位的都会大于4G，选择32位的即可解决。 方法二： 采用外接光驱，使用UltraISO（软碟通）将镜像写入一张白盘 设置光盘启动 安装，亲测，成功！]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[实际项目中的代码规范]]></title>
    <url>%2F2016%2F04%2F05%2Fcoding-standards.html</url>
    <content type="text"><![CDATA[前言最近在准备软件杯的比赛项目，因为是担任的是项目组长，所以要求组员之间的项目代码必须要有规范，方便组员之间的团队合作，以及后期代码的维护。而且，我相信，如果我们代码规范能够做好的话，对于我们的开发水平也会提高多少。 代码的规范化好处多多 规范的代码可以促进团队合作 规范的代码可以减少bug处理 规范的代码可以降低维护成本 规范的代码有助于代码审查 养成代码规范的习惯，有助于程序员自身的成长 开发前的准备Eclipse中设置代码样式在 Window --&gt;Preferences 中设置 设置工作空间编码为UTF-8 设置文件编码为UTF-8 方法变量名转化成成员变量名称时，变量名称前加m以示区分 配置文档注释 Window --&gt;Preferences --&gt;Java --&gt;Code Style --&gt;Code Templates CommentsFiles修改成如下内容/** * @Title: ${file_name} * @Package ${package_name} * @Description: ${todo}(用一句话描述该文件做什么) * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的） * @date ${date} ${time} * @version V1.0 */ Types修改成如下内容/** * @ClassName: ${type_name} * @Description: ${todo}(这里用一句话描述这个类的作用) * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的） * @date ${date} ${time} * ${tags} */ Fields修改成如下内容/** * @Fields ${field} : ${todo}(用一句话描述这个变量表示什么) */ Constructors修改成如下内容/** * &lt;p&gt;Title: &lt;/p&gt; * &lt;p&gt;Description: &lt;/p&gt; * ${tags} */ Methods修改成如下内容/** * @Title: ${enclosing_method} * @Description: ${todo}(这里用一句话描述这个方法的作用) * ${tags} 参数说明 * ${return_type} 返回类型 * @throws */ Overriding methods修改成如下内容/* * Title: ${enclosing_method} * Description: * ${tags} * ${see_to_overridden} */ Delegate methods修改成如下内容/** * ${tags} * ${see_to_target} */ Getters修改成如下内容/** * @return the ${bare_field_name} */ Setters修改成如下内容/** * @param ${param} the ${bare_field_name} to set */ Codes中只修改New Java filesNew Java files修改成如下内容/** * @Title: ${file_name} * @Package ${package_name} * @Description: ${todo}(用一句话描述该文件做什么) * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的） * @date ${date} ${time} * @version V1.0 */ 开发时的规范 每个方法前添加文档注释（快捷方式：选中需要添加的方法名，再按alt+shift+j） SVN提交代码时，必须注明提交代码时所作的修改 尽可能少的使用全局的静态变量，以免常驻内存 方法变量名转化成成员变量名称时，变量名称前加m以示区分（可以在eclipse中已经设置，自动化解决）]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android中svn不需要进行版本控制的部分]]></title>
    <url>%2F2016%2F04%2F03%2Fandroid-svn-attention.html</url>
    <content type="text"><![CDATA[前言SVN是Subversion的简称，是一个开放源代码的版本控制系统，说得简单一点SVN就是用于多个人共同开发同一个项目，共用资源的目的。但是SVN对于Android项目来说并不是所有文件都需要进行版本控制的。 bin，gen 两个文件夹不用提交，因为这两个文件夹是自动生成的，如果提交可能会产生编译异常。 .settings也是自动生成，也不用提交。 .git文件夹也不需要提交，这是存放git的配置信息 .svn同.git一样，是存放svn的配置信息的，同样不需要提交 bin目录 gen目录 .svn目录 .settings目录 .git目录 屏蔽上传的方式：window–&gt;preferences–&gt;team–&gt;Ignored Resources–&gt;Add Pattern最后添加完成点击Apply具体需要添加的部分见下图]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>svn</tag>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蓝桥杯感想]]></title>
    <url>%2F2016%2F03%2F28%2Flanqiao-exam.html</url>
    <content type="text"><![CDATA[前言今年是我第一次参加蓝桥杯。3月20号。大一、大二的时候，我就对蓝桥杯有所耳闻，今年如愿以偿的报名了。曾经憧憬着可以在蓝桥杯轻松获得二等奖，兴许运气来了，一等也是有机会的。However，今晚（3月28号）成绩出来了，三等奖，GG了。大学从未有过的信心摧残。好了，炮灰就是炮灰，我也不会一直自怨自艾，我是个有态度的炮灰，总结一下失败的原因吧！ 总结 自信心爆棚（自负）比赛前一个月，室友和我说，蓝桥杯还有一个月了，不做做模拟？当时我正在做一个Android项目，再加上一直对自己实力的自信，就没有在意；比赛前2周，室友说紧张不，我说小case。。终于我成功的裸考了（在进考场之前未做甚至未看一题模拟题) 学艺不精(对简单的算法不够熟练，对复杂的算法没有深究) 想到再补（不是想不到，而是实在太多了） 展望蓝桥杯，如果大四还可以参战的话，明年我还想再战，那时我必将全力以赴，毕竟大学不想留有遗憾。大学剩下的一年，我会尽自己最大的努力提升自己，以最好的姿态迎接毕业。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[android 在eclipse中把局部变量变成成员变量前自动加m]]></title>
    <url>%2F2016%2F03%2F27%2Feclipse-tips-variable.html</url>
    <content type="text"><![CDATA[前言在开发过程中,开发规范很重要,这样有利于后期维护,而且如果离职后,新同事接收你项目时也方便阅读代码,比如我们命名一个成员变量,一般在都是m子母开头。比如我们在一个方法中写一个变量,后来发现在其他地方也要用到此变量,这时我们就需要把这变量做成成员变量,我们只要按下ctrl+1,就会提示是否需要变成成员变量,如果要它自动在变量前加m，其实这也是可以配置的,如图:]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>eclipse小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[volley开源框架的初体验]]></title>
    <url>%2F2016%2F03%2F26%2Ffirst-use-volley-demo.html</url>
    <content type="text"><![CDATA[前言Http网络数据交互请求是极其重要并且使用很频繁的一个模块，也是最基本的网络编程所需要学习的。网络请求方式的效率和性能直接影响到APP的整体用户体验流畅性，所以学习并掌握一款好的Http请求框架对我们的网络开发非常重要。Http请求在移动网络编程中主要是Get和Post请求接口数据的使用。所以，在学习好基础的Http请求知识后，为了提升开发效率，选择学习使用一款好的Http网络请求框架变得非常的重要。 什么是Volley？汉语译过来就是：齐射; 迸发的意思。可以看出来，Volley特别适合数据量不大但是通信频繁的场景。Volley是Google I/O 2013上Google官方发布的一款Android平台上的网络通信库。以前的网络请求，要考虑开启线程、内存泄漏、性能等等复杂的问题。但是Volley框架已经帮我们把这些问题处理好了，对外提供了相应的完善的请求API ，我们只需要按照要求使用即可 Volley框架的特点 能使网络通信更快，更简单，更健壮 Get、Post网络请求及网络图像的高效率异步处理请求 可以对网络请求进行排序优先级管理 网络请求的缓存 多级别取消请求 和Activity生命周期的联动（Activity结束时同时取消所有网络请求）使用Volley可以简化一些网络通信的开发，当然Volley不适合大数据（largepayloads）和流媒体的网络请求。例如上百兆的文件、视频下载。 Volley开源，可以进行定制修改也可以直接使用Jar包的形式。 Volley的用法 Volley的Get和Post请求方式的使用 Volley的网络请求队列建立和取消队列请求 Volley的Get和Post请求方式的使用Get和Post用于与服务器间请求和发送数据。建立请求首先建立队列，将请求添加到请求队列里。然后进行相应的Get和Post请求，请求结果在回调里获取解析。 Volley的网络请求队列建立和取消队列请求Volley有自己的请求队列管理机制，可以控制每个请求的建立与取消。非常方便和安全。这样也就可以做到随时控制某个请求在什么时候结束，Activity生命周期关联，防止无谓的请求。 Volley的简单测试demo1.新建一个MyApplication类，继承自Application ，用于返回一个全局的Volley网络请求队列1234567891011121314151617181920212223242526272829303132333435package com.xkcoding.volley;import android.app.Application;import com.android.volley.RequestQueue;import com.android.volley.toolbox.Volley;/** * @ClassName: MyApplication * @Description: 用于生成一个全局的请求队列 * @author Yangkai.Shen * @date 2016-3-26 上午1:09:10 * */public class MyApplication extends Application &#123; public static RequestQueue queue; @Override public void onCreate() &#123; super.onCreate(); queue = Volley.newRequestQueue(getApplicationContext()); &#125; /** * @Title: getRequestQueue * @Description: 获取一个全局的请求队列 * @param @return 参数说明 * @return RequestQueue 返回类型 * @throws */ public static RequestQueue getRequestQueue() &#123; return queue; &#125;&#125; 2.在MainActivity中编写测试GET与POST请求的代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113package com.xkcoding.volley;import java.util.HashMap;import java.util.Map;import android.app.Activity;import android.os.Bundle;import android.util.Log;import android.view.Menu;import android.widget.Toast;import com.android.volley.Request.Method;import com.android.volley.AuthFailureError;import com.android.volley.Response;import com.android.volley.Response.Listener;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;/** * @ClassName: MainActivity * @Description: 1. Volley的Get和Post请求方式的使用 2. Volley的网络请求队列建立和取消队列请求 * @author Yangkai.Shen * @date 2016-3-26 上午1:08:27 * */public class MainActivity extends Activity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); volley_Get(); volley_Post(); &#125; /** * @Title: volley_Get * @Description: 测试GET方法 * @param 参数说明 * @return void 返回类型 * @throws */ private void volley_Get() &#123; //测试url为聚合数据的手机归属地查询 String url = "http://apis.juhe.cn/mobile/get?phone=13429667914&amp;key=ebe4429a46cb136bc7fcee57806fe952"; StringRequest request = new StringRequest(Method.GET, url, new Listener&lt;String&gt;() &#123; // 成功时回调 @Override public void onResponse(String arg0) &#123; Log.i("volley_Get", arg0); Toast.makeText(getApplicationContext(), arg0, Toast.LENGTH_SHORT).show(); &#125; &#125;, new Response.ErrorListener() &#123; // 失败时回调 @Override public void onErrorResponse(VolleyError arg0) &#123; Toast.makeText(getApplicationContext(), "网络请求失败", Toast.LENGTH_SHORT).show(); &#125; &#125;); // 加标签，便于在Activity销毁时，断开网络请求 request.setTag("testGet"); // 将请求放入请求队列 MyApplication.getRequestQueue().add(request); &#125; private void volley_Post() &#123; //测试url为聚合数据的手机归属地查询 String url = "http://apis.juhe.cn/mobile/get?"; StringRequest request = new StringRequest(Method.POST, url, new Listener&lt;String&gt;() &#123; // 成功时回调 @Override public void onResponse(String arg0) &#123; Log.i("volley_Post", arg0); Toast.makeText(getApplicationContext(), arg0, Toast.LENGTH_SHORT).show(); &#125; &#125;, new Response.ErrorListener() &#123; // 失败时回调 @Override public void onErrorResponse(VolleyError arg0) &#123; Toast.makeText(getApplicationContext(), "网络请求失败", Toast.LENGTH_SHORT).show(); &#125; &#125;) &#123; // POST请求所附带的请求参数 @Override protected Map&lt;String, String&gt; getParams() throws AuthFailureError &#123; HashMap&lt;String, String&gt; map = new HashMap&lt;String, String&gt;(); map.put("phone", "13429667914"); map.put("key", "ebe4429a46cb136bc7fcee57806fe952"); return map; &#125; &#125;; // 加标签，便于在Activity销毁时，断开网络请求 request.setTag("testPost"); // 将请求放入请求队列 MyApplication.getRequestQueue().add(request); &#125; @Override protected void onStop() &#123; // Activity销毁时取消请求队列列的所有请求，通过Tags找到所有请求 MyApplication.getRequestQueue().cancelAll("testGet"); MyApplication.getRequestQueue().cancelAll("testPost"); super.onStop(); &#125;&#125; 3.在清单文件AndroidManifest.xml中注册刚刚的MyApplication并添加网络权限1&lt;uses-permission android:name="android.permission.INTERNET"/&gt; 4.Ctrl+F11 成功在LogCat中打印出号码信息]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>volley</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android 开源项目分类汇总]]></title>
    <url>%2F2016%2F03%2F25%2Fandroid-open-project.html</url>
    <content type="text"><![CDATA[目前包括： Android 开源项目第一篇——个性化控件(View)篇包括：ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style、其他 Android 开源项目第二篇——工具库篇包括：依赖注入、图片缓存、网络请求、数据库 ORM 工具包、Android 公共库、高版本向低版本兼容库、多媒体、事件总线、传感器、安全、插件化、文件、其他 Android 开源项目第三篇——优秀项目篇比较有意思的完整的 Android 项目 Android 开源项目第四篇——开发及测试工具篇包括：开发效率工具、开发自测相关、测试工具、开发及编译环境、其他 Android 开源项目第五篇——优秀个人和团体篇乐于分享并且有一些很不错的开源项目的个人和组织，包括 JakeWharton、Chris Banes、Koushik Dutta 等大牛 提示以下链接网址若存在不能访问，请自行尝试翻墙，推荐使用GreenVPN 第一部分 个性化控件(View)主要介绍那些不错个性化的 View，包括 ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style 等等。 一、ListView android-pulltorefresh一个强大的拉动刷新开源项目，支持各种控件下拉刷新，ListView、ViewPager、WebView、ExpandableListView、GridView、ScrollView、Horizontal ScrollView、Fragment 上下左右拉动刷新，比下面 johannilsson 那个只支持 ListView 的强大的多。并且它实现的下拉刷新 ListView 在 item 不足一屏情况下也不会显示刷新提示，体验更好。项目地址：https://github.com/chrisbanes/Android-PullToRefreshDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refreshview-demo.apk?raw=trueAPP 示例：新浪微博各个页面 android-pulltorefresh-listview下拉刷新 ListView，这个被很多人使用的项目实际有不少 bug，推荐使用 android-Ultra-Pull-to-Refresh项目地址：https://github.com/johannilsson/android-pulltorefreshDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refresh-listview-demo.apk?raw=true android-Ultra-Pull-to-Refresh下拉刷新，第一个项目已经停止维护了，并且使用起来相对复杂，定制性也差。这个是替代和改良方案。这个继承于 ViewGroup 可以包含任何 View。功能甚至比 SwipeRefreshLayout 强大。使用起来非常简单。良好的设计，如果你想定制自己的 UI 样式，非常简单，就像给 ListView 加一个 Header View 那么简单。支持 API LEVEL &gt;= 8项目地址：https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh原理剖析文档：android-Ultra-Pull-to-RefreshDemo 地址：https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh/blob/master/ptr-demo/target/ultra-ptr-demo.apk?raw=true Android-PullToRefreshRecyclerView支持下拉刷新的RecyclerView，同时支持滑动到底部自动加载数据、给RecyclerView添加Header。并且不更改原有RecyclerView的逻辑。项目地址：https://github.com/HomHomLin/Android-PullToRefreshRecyclerView。Demo地址：https://github.com/HomHomLin/Android-PullToRefreshRecyclerView/blob/master/sample.apk DragSortListView拖动排序的 ListView，同时支持 ListView 滑动 item 删除，各个 Item 高度不一、单选、复选、CursorAdapter 做为适配器、拖动背景变化等项目地址：https://github.com/bauerca/drag-sort-listviewDemo 地址：https://play.google.com/store/apps/details?id=com.mobeta.android.demodslvAPP 示例：Wordpress Android SwipeListView支持定义 ListView 左右滑动事件，支持左右滑动位移，支持定义动画时间项目地址：https://github.com/47deg/android-swipelistviewDemo 地址：https://play.google.com/store/apps/details?id=com.fortysevendeg.android.swipelistviewAPP 示例：微信 SlideAndDragListView支持ListView的Item的拖动排序、左右滑动事件，可自定义左右滑动显示文字、图标、位移，同时支持onItemClick、onItemLongClick等监听器，提供丰富的回调接口。项目地址：https://github.com/yydcdut/SlideAndDragListViewDemo 地址：https://github.com/yydcdut/SlideAndDragListView/blob/master/apk/sdlv.apk?raw=trueAPP 示例：Android 手机QQ 5.0 Android-SwipeToDismiss滑动 Item 消失 ListView，支持 3.0 以下版本见：https://github.com/JakeWharton/SwipeToDismissNOA项目地址：https://github.com/romannurik/Android-SwipeToDismissDemo 地址：https://github.com/JakeWharton/SwipeToDismissNOA/SwipeToDismissNOA.apk/qr_code RecyclerViewSwipeDismiss轻量级支持 support-v7 中的 RecyclerView 的滑动删除(Swipe to dismiss)行为，不需要修改源代码，只要简单的绑定onTouchListener项目地址：https://github.com/CodeFalling/RecyclerViewSwipeDismiss PinnedHeaderExpandableListView首先它是一个 ExpandableListView，但是它的头部可以固定，其次，在它的上面还有一个头部可以来回伸缩项目地址：https://github.com/singwhatiwanna/PinnedHeaderExpandableListViewAPP 示例：百度手机卫士垃圾清理界面 StickyListHeadersGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView，支持快速滑动，支持 Android2.3 及以上项目地址：https://github.com/emilsjolander/StickyListHeadersAPP 示例：Android 4.0 联系人 pinned-section-listviewGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView项目地址：https://github.com/beworker/pinned-section-listview PinnedHeaderListViewGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView项目地址：https://github.com/JimiSmith/PinnedHeaderListView QuickReturnListView/ScrollView 的 header 或 footer，当向下滚动时消失，向上滚动时出现项目地址：https://github.com/lawloretienne/QuickReturnDemo 地址：https://play.google.com/store/apps/details?id=com.etiennelawlor.quickreturn QuickReturnHeaderListView/ScrollView 的 header 或 footer，当向下滚动时消失，向上滚动时出现项目地址：https://github.com/ManuelPeinado/QuickReturnHeaderDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/quick-return-header-demo.apk?raw=trueAPP 示例：google plus IndexableListViewListView 右侧会显示 item 首字母快捷索引，点击可快速滑动到某个 item项目地址：https://github.com/woozzu/IndexableListViewDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/indexable-listview.apk?raw=trueAPP 示例：微信通讯录、小米联系人 CustomFastScrollViewListView 快速滑动，同时屏幕中间 PopupWindows 显示滑动到的 item 内容或首字母项目地址：https://github.com/nolanlawson/CustomFastScrollViewDemo Android-ScrollBarPanelListView 滑动时固定的 Panel 指示显示在 scrollbar 旁边项目地址：https://github.com/rno/Android-ScrollBarPanel SlideExpandableListView用户点击 listView item 滑出固定区域，其他 item 的区域收缩项目地址：https://github.com/tjerkw/Android-SlideExpandableListViewDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/slide-expandable-listView-demo.apk?raw=true JazzyListViewListView 及 GridView item 以特殊动画效果进入屏幕，效果包括 grow、cards、curl、wave、flip、fly 等等项目地址：https://github.com/twotoasters/JazzyListViewDemo 地址：https://play.google.com/store/apps/details?id=com.twotoasters.jazzylistview.sample在线演示：http://lab.hakim.se/scroll-effects/ ListViewAnimations带 Item 显示动画的 ListView，动画包括底部飞入、其他方向斜飞入、下层飞入、渐变消失、滑动删除等项目地址：https://github.com/nhaarman/ListViewAnimationsDemo 地址：https://play.google.com/store/apps/details?id=com.haarman.listviewanimationsAPP 示例：Google plus、Google Now 卡片式进入、小米系统中应用商店、联系人、游戏中心、音乐、文件管理器的 ListView、Ultimate、Light Flow Lite、TreinVerkeer、Running Coach、Pearl Jam Lyrics、Calorie Chart、Car Hire、Super BART、DK FlashCards、Counter Plus、Voorlees Verhaaltjes 2.0 DevsmartLib-Android横向 ListView项目地址：https://github.com/dinocore1/DevsmartLib-AndroidDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/horizontal-listview-demo.apk?raw=true TwoWayView横向 ListView 的效果，继承自 AdapterView项目地址：https://github.com/lucasr/twoway-view HorizontalVariableListView支持 Item 宽度不一致的 ListView项目地址：https://github.com/sephiroth74/HorizontalVariableListView LinearListView用 LinearLayout 实现的 ListView，可解决多个 ListView 并存等问题。目前自己也有需要，等亲自尝试过后会再具体介绍项目地址：https://github.com/frankiesardo/LinearListView MultiChoiceAdapter支持多选的 ListView Adapter项目地址：https://github.com/ManuelPeinado/MultiChoiceAdapterDemo 地址：https://play.google.com/store/apps/details?id=com.manuelpeinado.multichoiceadapter.demo EnhancedListView支持横向滑动删除列表项以及撤销删除的 ListView，该项目的前身是SwipeToDismissUndoList项目地址：https://github.com/timroes/EnhancedListViewDemo 地址：https://play.google.com/store/apps/details?id=de.timroes.android.listviewdemo&amp;rdid=de.timroes.android.listviewdemo ListBuddies自动滚动的双列 ListView ，两个 ListView 滚动速度不一致，有视差效果项目地址：https://github.com/jpardogo/ListBuddiesDemo 地址：https://play.google.com/store/apps/details?id=com.jpardogo.android.listbuddies SwipeMenuListView针对 ListView item 的侧滑菜单项目地址：https://github.com/baoyongzhang/SwipeMenuListViewAPP 示例：手机 QQV5.0 PagingListView分页加载的 ListView。当滑动到 ListView 底部最后一个元素时，显示一个进度行，然后加载下一页数据，并显示。项目地址：https://github.com/nicolasjafelle/PagingListView PullZoomView支持下拉时 HeaderView 缩放的 ListView、ScrollView项目地址：https://github.com/Frank-Zhu/PullZoomView PullToZoomInListView滑动 ListView 时使其 HeaderView 跟随滑动缩放项目地址：https://github.com/matrixxun/PullToZoomInListView CalendarListview实现每个月一行日历效果的 ListView项目地址：https://github.com/traex/CalendarListview原理剖析文档：CalendarListview sticky-headers-recyclerviewGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ListView，采用 support-v7 中的 RecyclerView 实现项目地址：https://github.com/timehop/sticky-headers-recyclerview PullSeparateListView到达顶部或底部继续拉动时，实现 Item 间的相互分离，两种模式：(1) 全部分离的模式，即屏幕内所有 Item 都会分离 (2)部分分离模式，以点击位置为分界点，部分 item 分离项目地址：https://github.com/chiemy/PullSeparateListView ExpandableLayoutHeader 和 Content Item 都可以展开的 ExpandableListview项目地址：https://github.com/traex/ExpandableLayout PagedHeadListView支持 paginated header 以及 material page indicator 的 ListView.项目地址：https://github.com/JorgeCastilloPrz/PagedHeadListView CustomSwipeListView支持左滑弹出自定义菜单，右滑删除且允许撤销，同时可以自定义滑动动画时间和滑动触发事件的时机等。项目地址：https://github.com/xyczero/Android-CustomSwipeListViewDemo 地址：Download here Pull-to-Refresh.Rentals-Android提供一个简单可以自定义的下拉刷新实现，Yalantis 出品。项目地址：https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android ScrollerCalendar实现每行显示一年的 12 个月份的 RecyclerView 年历项目地址：https://github.com/guanchao/ScrollerCalendar ExtractWordView一个可以提取单词的 ListView,支持”放大镜”效果。项目地址：https://github.com/jcodeing/ExtractWordViewDemo 地址：Download here FlyRefresh支持 ListView, GridView, RecyclerView, ScrollView 的下拉刷新项目地址：https://github.com/race604/FlyRefresh MVCHelper实现下拉刷新，滚动底部自动加载更多，分页加载，自动切换显示网络失败布局，暂无数据布局，支持任意 view，真正的 MVC 架构支持切换主流下拉刷新框架 Android-PullToRefresh-Library,android-Ultra-Pull-To-Refresh-library，SwipeRefreshLayout项目地址：https://github.com/LuckyJayce/MVCHelperDemo 地址：https://github.com/LuckyJayce/MVCHelper/blob/master/raw/MVCHelper_Demo.apk?raw=true RecyclerViewSwipeDismiss支持滑动 Item 操作、点击展开、拖动排序、展开后拖动排序等特性的 RecyclerView项目地址：https://play.google.com/store/apps/details?id=com.h6ah4i.android.example.advrecyclerview视频：http://www.youtube.com/watch?feature=player_embedded&amp;v=S7cSwMArjUQ WaterDropListView模仿 iOS 下拉刷新“水滴”效果，支持下拉刷新和上拉加载项目地址：https://github.com/THEONE10211024/WaterDropListView PopupListView實現ListItem 點擊後置頂並可顯示客製化添加的item的內部View 的ListView项目地址：https://github.com/s8871404/PopupListViewDemo 地址：https://play.google.com/store/apps/details?id=com.baobomb.popuplistview_sample CircleRefreshLayout一个包含有趣的动画的自定义下拉刷新布局项目地址：https://github.com/tuesda/CircleRefreshLayout EasyRecyclerView一款简单易用的EasyRecyclerView1.提供EasyRecyclerView，不需要写太多RecyclerView的配置代码2.提供好一个可以适配单布局和多布局的RecyclerViewAdapter3.提供了分割线的实现类，只需要传入一个DrawableId项目地址：https://github.com/CaMnter/EasyRecyclerView CanRefresh可适配所有视图的下拉刷新上拉加载，并支持各种风格项目地址：https://github.com/canyinghao/CanRefresh 二、ActionBar ActionBarSherlock为 Android 所有版本提供统一的 ActionBar，解决 4.0 以下 ActionBar 的适配问题项目地址：https://github.com/JakeWharton/ActionBarSherlockDemo 地址：https://play.google.com/store/apps/details?id=com.actionbarsherlock.sample.demos标签：兼容库, ActionBar ActionBar-PullToRefresh下拉刷新，ActionBar 出现加载中提示项目地址：https://github.com/chrisbanes/ActionBar-PullToRefreshDemo 地址：https://play.google.com/store/apps/details?id=uk.co.senab.actionbarpulltorefresh.samples.stockAPP 示例：Gmail，Google Plus，知乎等 FadingActionBarListView 向下滚动逐渐显现的 ActionBar项目地址：https://github.com/ManuelPeinado/FadingActionBarDemo 地址：https://play.google.com/store/apps/details?id=com.manuelpeinado.fadingactionbar.demoAPP 示例：google music，知乎 NotBoringActionBargoogle music 下拉收缩的 ActionBar项目地址：https://github.com/flavienlaurent/NotBoringActionBarDemo 地址：http://flavienlaurent.com/blog/2013/11/20/making-your-action-bar-not-boring/APP 示例：Google 音乐 RefreshActionItem带进度显示和刷新按钮的 ActionBar项目地址：https://github.com/ManuelPeinado/RefreshActionItemDemo 地址：https://play.google.com/store/apps/details?id=com.manuelpeinado.refreshactionitem.demoAPP 示例：The New York Times，DevAppsDirect GlassActionBar类似玻璃的有一定透明度的 ActionBar项目地址：https://github.com/ManuelPeinado/GlassActionBarDemo 地址：https://play.google.com/store/apps/details?id=com.manuelpeinado.glassactionbardemoAPP 示例：google music 三、Menu MenuDrawer滑出式菜单，通过拖动屏幕边缘滑出菜单，支持屏幕上下左右划出，支持当前 View 处于上下层，支持 Windows 边缘、ListView 边缘、ViewPager 变化划出菜单等。项目地址：https://github.com/SimonVT/android-menudrawerDemo 地址：http://simonvt.github.io/android-menudrawer/APP 示例：Gmail、Google Music 等大部分 google app SlidingMenu滑出式菜单，通过拖动屏幕边缘滑出菜单，支持屏幕左右划出，支持菜单 zoom、scale、slide up 三种动画样式出现。与 MenuDrawer 相比而言，SlidingMenu 支持菜单动画样式出现，MenuDrawer 支持菜单 view 处于内容的上下层项目地址：https://github.com/jfeinstein10/SlidingMenu原理剖析文档：SlidingMenuDemo 地址：https://play.google.com/store/apps/details?id=com.slidingmenu.exampleAPP 示例：Foursquare, LinkedIn, Zappos, Rdio, Evernote Food, Plume, VLC for Android, ESPN ScoreCenter, MLS MatchDay, 9GAG, Wunderlist 2, The Verge, MTG Familiar, Mantano Reader, Falcon Pro (BETA), MW3 Barracks ArcMenu支持类似 Path 的左下角动画旋转菜单及横向划出菜单、圆心弹出菜单项目地址：https://github.com/daCapricorn/ArcMenuhttps://dl.dropboxusercontent.com/u/11369687/preview1.pnghttps://dl.dropboxusercontent.com/u/11369687/raymenu.pngAPP 示例：Path android-satellite-menu类似 Path 的左下角动画旋转菜单项目地址：https://github.com/siyamed/android-satellite-menuDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/satellite-menu-demo.apk?raw=trueAPP 示例：Path radial-menu-widget圆形菜单，支持二级菜单项目地址：https://code.google.com/p/radial-menu-widget/ Android Wheel Menu圆形旋转选取菜单项目地址：https://github.com/anupcowkur/Android-Wheel-Menu FoldingNavigationDrawer滑动并以折叠方式打开菜单项目地址：https://github.com/tibi1712/FoldingNavigationDrawer-AndroidDemo 地址：https://play.google.com/store/apps/details?id=com.ptr.folding.sample AndroidResideMenu仿 Dribbble 的边栏菜单项目地址：https://github.com/SpecialCyCi/AndroidResideMenu CircularFloatingActionMenu一个可定制的圆形的浮动菜单控件，类似于 Path 的圆形菜单。这个控件的可定制性更强，可以很容易的定制菜单出现消失时的动画，起始角度和半径。项目地址：https://github.com/oguzbilgener/CircularFloatingActionMenu原理剖析文档：CircularFloatingActionMenuDemo 地址：https://github.com/oguzbilgener/CircularFloatingActionMenu/tree/master/samples NavigationDrawerSINavigation Drawer 的一个简单实现，滑动并以折叠方式打开菜单项目地址：https://github.com/mmBs/NavigationDrawerSIDemo 地址：https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersiAPP 示例：https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi DragLayout使用 support.v4 包下的 ViewDragHelper 实现 QQ5.0 侧滑项目地址：https://github.com/BlueMor/DragLayout LDrawerMaterial Design 形式的展开折叠 Icon项目地址：https://github.com/ikimuhendis/LDrawer Floating Action Button悬浮的圆形菜单栏，支持组建滚动时自动隐藏及其他设置项目地址：https://github.com/shamanland/floating-action-button Side-Menu.Android分类侧滑菜单，Yalantis 出品。项目地址：https://github.com/Yalantis/Side-Menu.Android原理剖析文档：Side-Menu.Android Context-Menu.Android可以方便快速集成漂亮带有动画效果的上下文菜单，Yalantis出品。项目地址：https://github.com/Yalantis/Context-Menu.Android Droppy支持多种样式的下拉菜单项目地址：https://github.com/shehabic/Droppy MaterialDrawerMaterial Design 风格的导航抽屉，提供简便且强大的定制功能项目地址：https://github.com/mikepenz/MaterialDrawerDemo 地址：https://play.google.com/store/apps/details？id=com.mikepenz.materialdrawer.app SlideBottomPanel底部划出菜单，滑动时背景图透明度渐变，支持嵌套 LiewView 或 ScrollView项目地址：https://github.com/kingideayou/SlideBottomPanelDemo 地址：SlideBottomPanelDemo 下载 FlowingDrawer带手势流动效果侧滑菜单项目地址：https://github.com/mxn21/FlowingDrawer 四、ViewPager 、Gallery AdvancedPagerSlidingTabStrip一个完美兼容ViewPager的导航栏组件；可以自定义TabView；能动态加载Tab上的Icon图片； 能显示Tab的消息数量和提示小圆点。项目地址：https://github.com/HomHomLin/AdvancedPagerSlidingTabStrip ConvenientBanner通用的广告栏控件，让你轻松实现广告头效果。支持无限循环，可以设置自动翻页和时间(而且非常智能，手指触碰则暂停翻页，离开自动开始翻页。你也可以设置在界面onPause的时候不进行自动翻页，onResume之后继续自动翻页)，并且提供多种翻页特效。 对比其他广告栏控件，大多都需要对源码进行改动才能加载网络图片，或者帮你集成不是你所需要的图片缓存库。而这个库能让有代码洁癖的你欢喜，不需要对库源码进行修改你就可以使用任何你喜欢的网络图片库进行配合。项目地址：https://github.com/saiwu-bigkoo/Android-ConvenientBanner Android-ViewPagerIndicator配合 ViewPager 使用的 Indicator，支持各种位置和样式项目地址：https://github.com/JakeWharton/Android-ViewPagerIndicatorDemo 地址：https://play.google.com/store/apps/details?id=com.viewpagerindicator.sampleAPP 示例：太多了。。 JazzyViewPager支持 Fragment 切换动画的 ViewPager，动画包括转盘、淡入淡出、翻页、层叠、旋转、方块、翻转、放大缩小等，效果类似桌面左右切换的各种效果，不过桌面并非用 ViewPager 实现而已项目地址：https://github.com/jfeinstein10/JazzyViewPagerDemo 地址：https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true JellyViewPager特殊切换动画的 ViewPager项目地址：https://github.com/chiemy/JellyViewPager Android-DirectionalViewPager支持横向和纵向(垂直)的 ViewPager项目地址：https://github.com/JakeWharton/Android-DirectionalViewPagerDemo 地址：https://market.android.com/details?id=com.directionalviewpager.sample FancyCoverFlow支持 Item 切换动画效果的类似 Gallery View项目地址：https://github.com/davidschreiber/FancyCoverFlowDemo 地址：https://play.google.com/store/apps/details?id=at.technikum.mti.fancycoverflow.samples AndroidTouchGallery支持双击或双指缩放的 Gallery(用 ViewPager 实现)，相比下面的 PhotoView，在被放大后依然能滑到下一个 item，并且支持直接从 url 和文件中获取图片，项目地址：https://github.com/Dreddik/AndroidTouchGalleryDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/touch-gallery-demo.apk?raw=trueAPP 示例：类似微信中查看聊天记录图片时可双击放大，并且放大情况下能正常左右滑动到前后图片 Android Auto Scroll ViewPagerAndroid 自动滚动 轮播循环的 ViewPager项目地址：https://github.com/Trinea/android-auto-scroll-view-pagerDemo 地址：https://play.google.com/store/apps/details?id=cn.trinea.android.demo文档介绍：http://www.trinea.cn/android/auto-scroll-view-pager/ Android PagerSlidingTabStrip配合 ViewPager 使用的 Indicator，支持 ViewPager Scroll 时 Indicator 联动项目地址：https://github.com/astuetz/PagerSlidingTabStrip原理剖析文档：Android PagerSlidingTabStripDemo 地址：https://play.google.com/store/apps/details?id=com.astuetz.viewpager.extensions.sample ViewPager3DViewPager3D 效果项目地址：https://github.com/inovex/ViewPager3D AnimaTabsview仿网易云音乐标签切换的动画,带透明小三角项目地址：https://github.com/wuyexiong/transparent-over-animtabsview在线演示：http://v.youku.com/v_show/id_XNzA4MjY5NjA0.html LoopingViewPager无限循环的 ViewPager项目地址：https://github.com/imbryk/LoopingViewPager android_page_curl翻书卷曲效果项目地址：https://github.com/harism/android_page_curl在线演示：https://www.youtube.com/watch?v=iwu7P5PCpswAPP 示例：iReader ViewPagerIndicator简化并实现 android 的 TabHost 效果，顶部滑动 tab，引导页，支持自定义 tab 样式,自定义滑动块样式和位置,自定义切换 tab 的过渡动画,子界面的预加载和界面缓存,设置界面是否可滑动项目地址：https://github.com/LuckyJayce/ViewPagerIndicator ScreenSlideIndicator轻量级的圆形 Indicadtor，位置可以自由调整，不会对 ViewPager 产生任何影响。项目地址：ScreenSlidePager SmartTabLayout自定义的 Tab title strip，基于 Google Samples 中的 android-SlidingTabBasic 项目，滑动时 Indicator 可平滑过渡。项目地址：https://github.com/ogaclejapan/SmartTabLayoutDemo 地址：https://play.google.com/store/apps/details?id=com.ogaclejapan.smarttablayout.demo AndroidImageSliderAndroid 图片滑动项目地址：https://github.com/daimajia/AndroidImageSliderApp示例：https://github.com/daimajia/AndroidImageSlider/releases/download/v1.0.8/demo-1.0.8.apk RecyclerViewPager完全继承自 RecyclerView，可以自定义触发翻页的距离，可自定义翻页速度，支持垂直方向的 ViewPager，支持 Fragment。项目地址：RecyclerViewPager CircleIndicator轻量级ViewPager指示器,支持三种不同的模式项目地址：CircleIndicator EasySlidingTabs一款简单、易用的滑动标签页项目地址： https://github.com/CaMnter/EasySlidingTabs 五、GridView StaggeredGridView允许非对齐行的 GridView，类似 Pinterest 的瀑布流，并且跟 ListView 一样自带 View 缓存，继承自 ViewGroup项目地址：https://github.com/maurycyw/StaggeredGridViewDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/staggered-gridview-demo.apk?raw=trueAPP 示例：Pinterest 等 AndroidStaggeredGrid允许非对齐行的 GridView，类似 Pinterest 的瀑布流，继承自 AbsListView项目地址：https://github.com/etsy/AndroidStaggeredGridAPP 示例：Pinterest 等 PinterestLikeAdapterView允许非对齐行的 GridView，类似 Pinterest 的瀑布流，允许下拉刷新项目地址：https://github.com/GDG-Korea/PinterestLikeAdapterViewAPP 示例：Pinterest 等 DraggableGridViewItem 可拖动交换位置的 GridView，实际是自己继承 ViewGroup 实现，类似桌面的单屏效果，可屏幕自动上下滚动进行 Item 移动交换，多屏效果见下面 PagedDragDropGrid项目地址：https://github.com/thquinn/DraggableGridViewDemo 地址：https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true也可以自定义item的宽高和每行的个数，并且修改交换逻辑，当移动到另一个item时就进行交换，删除滚动逻辑。项目地址：DraggableGridView StickyGridHeadersGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 GridView项目地址：https://github.com/TonicArtos/StickyGridHeaders PagedDragDropGridItem 可拖动交换位置、拖动删除的自定义控件，实际是自己继承 ViewGroup 实现，类似桌面的多屏效果，可拖动到屏幕边缘，屏幕自动左右滚动进行 Item 移动交换，可拖动进行删除，单屏效果见上面 DraggableGridView项目地址：https://github.com/mrKlar/PagedDragDropGrid在线演示：http://youtu.be/FYTSRfthSuQ Android-DraggableGridViewPagerItem 可拖动交换位置的 GridView，实际是自己继承 ViewGroup 实现，类似桌面的多屏效果，可屏幕自动左右滚动进行 Item 移动交换，单屏效果见上面 DraggableGridView项目地址：https://github.com/zzhouj/Android-DraggableGridViewPagerDemo 地址：https://github.com/Trinea/trinea-download/blob/master/draggable-grid-viewpager-demo.apk?raw=true TwoWayGridView可横向滚动的 GridView项目地址：https://github.com/jess-anders/two-way-gridview PagingGridView分页加载的 GridView。当滑动到 GridView 底部最后一个行时，显示一个进度行，然后加载下一页数据，并显示。项目地址：https://github.com/nicolasjafelle/PagingGridView AsymmetricGridView一个支持跨行和跨列可变 Item 大小的 GridView项目地址：https://github.com/felipecsl/AsymmetricGridViewDemo 地址：https://play.google.com/store/apps/details?id=com.felipecsl.asymmetricgridview.app GridView with Header and Footer和ListView一样带头部和底部的GridView，用法和ListView一样项目地址：https://github.com/liaohuqiu/android-GridViewWithHeaderAndFooter 六、ImageView PhotoView支持双击或双指缩放的 ImageView，在 ViewPager 等 Scrolling view 中正常使用，相比上面的 AndroidTouchGallery，不仅支持 ViewPager，同时支持单个 ImageView项目地址：https://github.com/chrisbanes/PhotoView原理剖析文档：PhotoViewDemo 地址：https://play.google.com/store/apps/details?id=uk.co.senab.photoview.sampleAPP 示例：photup Fresco-ImageViewFresco-ImageView是一种Android平台的图像控件，底层是对Fresco的封装，可以异步加载网络图片、项目资源和本地图片，并且支持双指缩放、图片的基本处理以及Fresco的所有特性。项目地址：https://github.com/HomHomLin/FrescoImageView。 android-gif-drawable支持 gif 显示的 view，用 jni 实现的，编译生成 so 库后直接 xml 定义 view 即可，而且本身不依赖于其他开源项目所以相对下面的 ImageViewEx 简单的多项目地址：https://github.com/koral--/android-gif-drawable ImageViewEx支持 Gif 显示的 ImageView，依赖很多，编译过程很繁琐项目地址：https://github.com/frapontillo/ImageViewExDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/imageviewex-demo.apk?raw=true RoundedImageView带圆角的 ImageView项目地址：https://github.com/vinc3m1/RoundedImageView SelectableRoundedImageViewImageView 允许四个角的每一个有不同的半径值。也允许椭圆形、圆形的形状或者边项目地址：https://github.com/pungrue26/SelectableRoundedImageViewDemo 地址：https://play.google.com/store/apps/details?id=com.joooonho ColorArt根据图片的均色设置背景色显示文字和图片，类似 itune11 中效果项目地址：https://github.com/MichaelEvans/ColorArtDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/color-art-demo.apk?raw=true CircleImageView圆形的 ImageView项目地址：https://github.com/hdodenhof/CircleImageView ImageViewZoom支持放大和平移的 ImageView项目地址：https://github.com/sephiroth74/ImageViewZoomAPP 示例：https://play.google.com/store/apps/details?id=com.aviary.android.feather KenBurnsView实现 Ken Burns effect 效果，达到身临其境效果的 ImageView项目地址：https://github.com/flavioarfaria/KenBurnsView CustomShapeImageView各种形状的 ImageView, 相比上面的圆形 ImageView，多了更多形状项目地址：https://github.com/MostafaGazar/CustomShapeImageView Shape Image View可以自定义各种形状的 ImageView, 并且支持边框项目地址：https://github.com/siyamed/android-shape-imageview TextDrawable一个用于生成带有文本或者字母的图片的轻量级库。扩展自 Drawable，因此可用于现有/自定义/网络等 ImageView 类，并且包含一个流接口用于创建 drawables 以及一个定制的 ColorGenerator项目地址：https://github.com/amulyakhare/TextDrawable android-smart-image-view可从 URL 或 contact address book 加载图片的 ImageView，支持缓存项目地址：https://github.com/loopj/android-smart-image-view PhotoView支持双指/双击缩放的ImageView,支持从一个PhotoView缩放到另外一个PhotoView(点击图片放大预览),相对于其他PhototView有更加平滑的缩放,平移的动画,并且支持所有的ScaleType,可以作为普通的ImageView使用项目地址：https://github.com/bm-x/PhotoView 七、ProgressBar SmoothProgressBar水平进度条项目地址：https://github.com/castorflex/SmoothProgressBarDemo 地址：https://play.google.com/store/apps/details?id=fr.castorflex.android.smoothprogressbar.sample MaterialProgessBarMaterial Design 的进度条，支持 Android 4.0项目地址：https://github.com/DreaminginCodeZH/MaterialProgressBarDemo 地址：https://github.com/DreaminginCodeZH/MaterialProgressBar/blob/master/dist/sample.apk ProgressWheel支持进度显示的圆形 ProgressBar项目地址：https://github.com/Todd-Davies/ProgressWheelDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/progress-wheel-demo.apk?raw=true android-square-progressbar在图片周围显示进度项目地址：https://github.com/mrwonderman/android-square-progressbarDemo 地址：https://play.google.com/store/apps/details?id=net.yscs.android.square_progressbar_exampleAPP 示例：square HoloCircularProgressBarAndroid4.1 时钟 App 样式项目地址：https://github.com/passsy/android-HoloCircularProgressBarAPP 示例：Android4.1 时钟 App ProgressButton通过图钉的不同状态显示进度项目地址：https://github.com/f2prateek/progressbutton文档介绍：http://f2prateek.com/progressbutton/ GoogleProgressBar类似 google 多个圆形卡片翻转的 progressBar项目地址：https://github.com/jpardogo/GoogleProgressBar TH-ProgressButton带圆形进度显示的按钮项目地址：https://github.com/torryharris/TH-ProgressButton NumberProgressBar带数字进度的进度条项目地址：https://github.com/daimajia/NumberProgressBar CircularProgressDrawable带圆形进度显示的进度条项目地址：https://github.com/Sefford/CircularProgressDrawable Android-RoundCornerProgressBarAndroid 圆角 ProgressBar，可自定义圆角颜色和半径，包括带 Icon 和不带 Icon 两种类型。项目地址：https://github.com/akexorcist/Android-RoundCornerProgressBar circular-progress-button带进度显示的 Button项目地址：https://github.com/dmytrodanylyk/circular-progress-button WaveView一个波纹效果的 View，可用来做 ProgressBar项目地址：https://github.com/john990/WaveViewDemo 地址：https://raw.github.com/john990/WaveView/master/screenshot%26apk/demo.unaligned.apk MaterialLoadingProgressBar抽取自 SwipeRefreshLayout 的 Material Design 进度指示器项目地址：https://github.com/lsjwzh/MaterialLoadingProgressBar MetaballLoadingA 2d metaball loading项目地址：https://github.com/dodola/MetaballLoading SectorProgressView一个圆形或环形的进度显示控件，用圆中扇形的角度大小来表示进度信息项目地址：https://github.com/timqi/SectorProgressViewDemo：apk download CircularFillableLoaders一个可以用于闪屏或者其他地方加载的控件项目地址：https://github.com/lopspower/CircularFillableLoadersDemo地址：(https://play.google.com/store/apps/details?id=com.mikhaellopez.circularfillableloaderssample) PinWheel一个旋转的大风车Dialog项目地址：https://github.com/codingWang/PinWheel ColorArcProgressBar一个可定制的圆形进度条，通过xml参数配置可实现QQ健康中步数的弧形进度显示、仪盘表显示速度、最常见的下载进度条等功能。项目地址：https://github.com/Shinelw/ColorArcProgressBar 八、TextView包括 TextView 及所有继承自 TextView 控件，如 EditText、Button、RadioButton android-flowtextview文字自动环绕其他 View 的 Layout项目地址：https://github.com/deano2390/FlowTextView Android Form EditText验证输入合法性的编辑框，支持输入、英文、ip、url 等多种正则验证项目地址：https://github.com/vekexasia/android-edittext-validatorDemo 地址：https://play.google.com/store/apps/details?id=com.andreabaccega.edittextformexample Emojicon支持 emojis 的 TextView 和 EditText项目地址：https://github.com/rockerhieu/emojicon文档介绍：http://rockerhieu.com/emojicon/ android-circlebuttonAndroid 圆形按钮，实际实现是继承自 ImageView项目地址：https://github.com/markushi/android-circlebuttonDemo 地址：https://github.com/markushi/android-circlebutton/blob/master/example/example.apk Segmented Radio Buttons for AndroidiOS’s segmented controls 的实现项目地址：https://github.com/vinc3m1/android-segmentedradiobuttonDemo 地址：https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true Chips EditText Library支持国家名字联想从而选择显示该国国旗的 EditText，实际就是通过 SpannableStringBuilder 实现项目地址：https://github.com/kpbird/chips-edittext-libraryDemo 地址：https://github.com/kpbird/chips-edittext-library/tree/master/ChipsEditTextDemo/bin AutoFitTextView可固定边界内容字体大小自适应的 TextView项目地址：https://github.com/grantland/android-autofittextview Shimmer for Android文字发淡光的 TextView项目地址：https://github.com/RomainPiel/Shimmer-android Titanic可以显示水位上升下降(不知道该怎么描述 囧)的 TextView项目地址：https://github.com/RomainPiel/Titanic android-iconify提供带 Icon 的 TextView,Menu,Button 等项目地址：https://github.com/JoanZapata/android-iconify Calligraphy让我们在 android 开发中使用自定义字体变得更加简单项目地址：https://github.com/chrisjenx/Calligraphy CreditsRoll类似星球大战字幕效果的 TextView项目地址：https://github.com/frakbot/CreditsRoll android-process-buton带加载或提交进度的 Button项目地址：https://github.com/dmytrodanylyk/android-process-buton FButton扁平化的 Button项目地址：https://github.com/hoang8f/android-flat-buttonDemo 地址：https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo FloatingActionButton一个类似 Android 版 Google+浮动功能按钮的控件，可以响应 ListView 的滚动事件。当列表向上滚动的时候会自动显示，向下滚动的时候自动隐藏。项目地址：https://github.com/makovkastar/FloatingActionButtonDemo 地址：https://github.com/makovkastar/FloatingActionButton/tree/master/ Android SaripaarAndroid 表单验证项目地址：https://github.com/ragunathjawahar/android-saripaar/ JumpingBeans文字像 Mexican beans 一样跳动项目地址：https://github.com/frakbot/JumpingBeansDemo 地址：http://play.google.com/store/apps/details?id=net.frakbot.jumpingbeans.demo FancyButtons一个不用图片就可以帮助我们创建出漂亮按钮的库。项目地址：https://github.com/medyo/fancybuttonsDemo 地址：https://github.com/medyo/fancybuttons/tree/master/samples Android-RobotoTextView一个实现了所有 Roboto 字体的 TextView，包括新出的 Roboto Slab 字体。项目地址：https://github.com/johnkil/Android-RobotoTextViewDemo 地址：http://play.google.com/store/apps/details?id=com.devspark.robototextviewDemo 项目：https://github.com/johnkil/Android-RobotoTextView/tree/master/robototextview-sample Android-WizardPager一个表单向导库项目地址：https://github.com/romannurik/android-wizardpagerDemo 项目：https://github.com/str4d/android-wizardpager/tree/textfield RippleView一个实现了 Android L 上才引入的点击按钮后出现水波纹效果的按钮项目地址：https://github.com/siriscac/RippleViewDemo 项目：https://github.com/siriscac/RippleView/tree/master/RippleViewExample RippleEffect一个实现 Material Design Ripple 效果的库，支持 Android API 9+以上版本。项目地址：https://github.com/traex/RippleEffectDemo 项目：https://github.com/traex/RippleEffect/tree/master/sample RippleCompat使用易于移植的方式为UI控件实现波纹效应，可以适配控件原背景及Palette支持。api简单，可自定义效果，兼容至Android API 7+。项目地址：https://github.com/desmond1121/RippleCompatDemo 项目：https://github.com/desmond1121/RippleCompat/tree/master/app Android Floating Label Widgets包含一系列控件，这些控件特点是：有默认值，当值不为空时默认值浮动到上面变为提示项目地址：https://github.com/marvinlabs/android-floatinglabel-widgetsDemo 地址：https://play.google.com/store/apps/details?id=com.marvinlabs.widget.floatinglabel.demo在线演示：http://www.youtube.com/watch?v=hpZD9gJcRg0&amp;feature=youtu.be MaterialEditTextEditText 的 Material Design 实现。包含 Google Material Design Spec中的 UI 效果和一些新增特性。项目地址：https://github.com/rengwuxian/MaterialEditText MaterialEditText实现 Material Design 中 Ripple 效果线条背景的 EditText。直接替换原生 EditText 即可集成。项目地址：https://github.com/DreamingInCodeZH/MaterialEditText MultiActionTextView可以分别给 TextView 中的某几个字设置点击事件的 TextView项目地址：https://github.com/ajaysahani/MultiActionTextView ToggleButton状态切换的 Button，类似 iOS，用 View 实现项目地址：https://github.com/zcweng/ToggleButton SwitchButton状态切换的 Button，类似 iOS，拥有良好的用户界面项目地址：https://github.com/kyleduo/SwitchButton SlideSwitch状态切换的开关，可以设置为类似 IOS 的圆形，也可以设置为矩形，用 View 实现项目地址：https://github.com/Leaking/SlideSwitch ExpandableTextView可展开和收缩内容的 TextView。项目地址：https://github.com/Manabu-GT/ExpandableTextView TagCloudView(支持 SingleLine 模式的标签云)标签云效果，只需要一行代码即可设置为 SingleLine 模式，轻松实现知乎问题话题列表效果。SingleLine 模式时末尾文字及图片可自定义。项目地址：https://github.com/kingideayou/TagCloudView示例APK地址：https://github.com/kingideayou/TagCloudView/raw/master/apk/Demo.apkAPP示例：知乎 BubbleTextViewAndroid Bubble View项目地址：https://github.com/dupengtao/BubbleTextView shadow-layoutAndroid Shadow Layout解决了CardView：1.不能画圆的阴影。2.设置阴影的位置。3.设置阴影颜色。项目地址：https://github.com/dmytrodanylyk/shadow-layout 九、ScrollView Discrollview支持滚动时 Item 淡入淡出，平移，缩放效果的 ScrollView项目地址：https://github.com/flavienlaurent/discrollviewDemo 地址：https://github.com/flavienlaurent/discrollview/raw/master/sample.apk PullScrollView仿照新浪微博 Android 客户端个人中心的 ScrollView，下拉背景伸缩回弹效果。项目地址：https://github.com/MarkMjw/PullScrollView ArcLayout一个非常简单的弧布局库项目地址：https://github.com/ogaclejapan/ArcLayoutDemo 地址：https://play.google.com/store/apps/details?id=com.ogaclejapan.arclayout.demo ParallaxScrollView支持视差滚动的 ScrollView ，背景图片的滚动速度小于 ScrollView 中子控件的滚动速度项目地址：https://github.com/chrisjenx/ParallaxScrollViewDemo 地址：http://cloud.github.com/downloads/chrisjenx/ParallaxScrollView/ParallaxScrollViewDemo-v1.0.5.apk AKParallax-Android支持视差滚动的 ScrollView项目地址：https://github.com/ideaismobile/AKParallax-AndroidDemo 地址：https://play.google.com/store/apps/details?id=com.appkraft.parallax_sample Android-ObservableScrollView监听滚动视图滚动事件的库，帮助与 Toolbar 的交互动效处理与 Material Design 的实现项目地址：https://github.com/ksoichiro/Android-ObservableScrollViewDemo 地址：https://play.google.com/store/apps/details?id=com.github.ksoichiro.android.observablescrollview.samples2 OverScrollView有弹性的 ScrollView，实现了当手指滑动到 ScrollView 的顶部、底部时，可以继续的向上、向下拉伸。当释放手指的时候，向上、下回弹项目地址：https://github.com/EverythingMe/OverScrollView 十、TimeView包括 TimePicker、DatePicker、CalendarView、Clock 等时间相关控件 android-times-squareAndroid 日历时间部件，支持选取单个日期，多个日期，及日期区间段和对话框形式显示项目地址：https://github.com/square/android-times-squareDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/times-square-demo.apk?raw=true android-calendar-card日历项目地址：https://github.com/kenumir/android-calendar-cardDemo 地址：https://play.google.com/store/apps/details?id=com.wt.calendarcardsample AndroidWheelAndroid Wheel 支持城市、多种日期时间、密码、图片项目地址：https://code.google.com/p/android-wheel/ GoogleDateTimePickers时间选择部件项目地址：https://github.com/Mirkoddd/GoogleDateTimePickers文档介绍：https://play.google.com/store/apps/details?id=com.mirko.sample&amp;hl=it DateTimePicker日期选择部件(Google Agenda 的样式风格)项目地址：https://github.com/flavienlaurent/datetimepickerDemo 地址：https://raw.github.com/biboune/datetimepicker/master/datetimepicker-sample.apk android-betterpickers提供日期、数字、时间（数字方式和钟表方式）、重复周期（闹钟的周期重复）、HMS（时、分、秒）的选择，支持以 DialogFragment 的弹窗选择项目地址：https://github.com/derekbrameyer/android-betterpickersDemo 地址：https://play.google.com/store/apps/details?id=com.doomonafireball.betterpickers.sample Android Week View日期控件，支持周，天视图，支持自定义样式项目地址：https://github.com/alamkanak/Android-Week-View PickerView仿 iOS 的 PickerView 控件，有时间选择和选项选择并支持一二三级联动效果，TimePopupWindow 时间选择器，支持年月日时分，年月日，时分等格式；OptionsPopupWindow 选项选择器，支持一，二，三级选项选择，并且可以设置是否联动项目地址：https://github.com/saiwu-bigkoo/Android-PickerView CountdownViewAndroid 倒计时控件，使用Canvas绘制，支持多种样式项目地址：https://github.com/iwgang/CountdownView 十一、TipView包括 Toast、角标、UndoBar 等提示性控件 SVProgressHUDSVProgressHUD For Android 精仿iOS的提示库 SVProgressHUD，api也几乎一样。项目地址：https://github.com/saiwu-bigkoo/Android-SVProgressHUD Crouton丰富样式的 Toast，允许 alert、comfirm、info 样式及点击消失样式，允许设置 Toast 显示时间，允许自定义 View。 本文 32. SuperToasts 为其扩展版项目地址：https://github.com/keyboardsurfer/CroutonDemo 地址：http://play.google.com/store/apps/details?id=de.keyboardsurfer.app.demo.crouton supertooltips带动画效果的 Tips 显示项目地址：https://github.com/nhaarman/supertooltipsDemo 地址：https://play.google.com/store/apps/details?id=com.haarman.supertooltips Android ViewBadger为其他 View 添加角标（消息圆点）等项目地址：https://github.com/jgilfelt/android-viewbadgerDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/android-viewbadger.apk?raw=true SuperToasts更丰富样式的 toast，支持 Button、Progress、Horizontal Progress 样式、支持进入动画、支持撤销及其动画设置项目地址：https://github.com/JohnPersano/SuperToastsDemo 地址：https://play.google.com/store/apps/details?id=com.supertoastsdemo UndoBar屏幕底部显示取消或是确认的 PopupWindows项目地址：https://github.com/soarcn/UndoBar UndoBar屏幕底部显示取消或是确认某操作项目地址：https://github.com/jenzz/Android-UndoBar Android-ActionItemBadge可以在 ActionBar 的 MenuItem 上显示一个小角标项目地址：https://github.com/mikepenz/Android-ActionItemBadge SnackBarMaterial Design 风格的 Toast，类似 Google inbox 中的提示项目地址：https://github.com/MrEngineer13/SnackBarDemo 地址：https://play.google.com/store/apps/details?id=com.mrengineer13.snackbar.sample HeadsUp在 2.3 上使用 android 5.0 的 HeadsUp 效果项目地址：https://github.com/zzz40500/HeadsUp 十二、FlipView android-flip类似 Flipboard 翻转动画的实现项目地址：https://github.com/openaphid/android-flipDemo 地址：https://github.com/openaphid/android-flip/blob/master/FlipView/Demo/APK/Aphid-FlipView-Demo.apk?raw=trueAPP 示例：flipboard FlipImageView支持 x、y、z 及动画选择的翻转动画的实现项目地址：https://github.com/castorflex/FlipImageViewDemo 地址：https://play.google.com/store/apps/details?id=fr.castorflex.android.flipimageview FoldableLayoutFlip 翻转效果的 ListView，目前还不支持 ListView 缓存项目地址：https://github.com/alexvasilkov/FoldableLayoutDemo 地址：http://play.google.com/store/apps/details?id=com.alexvasilkov.foldablelayout.sample FlipViewPager.DracoFlip 翻转效果的 ViewPager项目地址：https://github.com/Yalantis/FlipViewPager.Draco 十三、ColorPickView ColorPickerView颜色选择器，支持 PopupWindows 或新的 Activity 中打开项目地址：https://code.google.com/p/color-picker-view/ HoloColorPicker颜色选择器项目地址：https://github.com/LarsWerkman/HoloColorPickerDemo 地址：https://docs.google.com/file/d/0BwclyDTlLrdXRzVnTGJvTlRfU2s/edit ColorPickerPreference颜色选择器项目地址：https://github.com/attenzione/android-ColorPickerPreference ColorPicker颜色选择器（Google Agenda 中的样式风格）项目地址：https://github.com/flavienlaurent/colorpickerDemo 地址：https://raw.github.com/biboune/colorpicker/master/colorpicker-sample.apk 十四、GraphView MPAndroidChart强大的图表绘制工具，支持折线图、面积图、散点图、时间图、柱状图、条图、饼图、气泡图、圆环图、范围（高至低）条形图、网状图等；支持图的拖拽缩放；支持 Android 2.2 以上，支持横纵轴缩放，多指缩放，展现动画、高亮、保存到 sdcard、从文件读取图表项目地址：https://github.com/PhilJay/MPAndroidChartDemo 地址：https://play.google.com/store/apps/details?id=com.xxmassdeveloper.mpchartexampleDemo 项目：https://github.com/PhilJay/MPAndroidChart/tree/master/MPChartExample在线演示：https://www.youtube.com/watch?v=ufaK_Hd6BpI achartengine强大的图表绘制工具，支持折线图、面积图、散点图、时间图、柱状图、条图、饼图、气泡图、圆环图、范围（高至低）条形图、拨号图/表、立方线图及各种图的结合项目地址：https://code.google.com/p/achartengine/官网网址：http://www.achartengine.org/APP 示例：Wordpress Android，Google Analytics GraphView绘制图表和曲线图的 View，可用于 Android 上的曲形图、柱状图、波浪图展示项目地址：https://github.com/jjoe64/GraphViewDemo 项目：https://github.com/jjoe64/GraphView-DemosAPP 示例：Wordpress Android，Google Analytics HoloGraphLibrary绘制现状图、柱状图、饼状图项目地址：https://bitbucket.org/danielnadeau/holographlibrary/src文档介绍：https://bitbucket.org/danielnadeau/holographlibrary/wiki/Home XCL-ChartsXCL-Charts 基于原生的 Canvas 来绘制各种图表,在设计时，尽量在保证开发效率的同时，给使用者提供足够多的定制化能力。因此使用简便,同时具有相当灵活的定制能力。目前支持 3D/非 3D 柱形图(Bar Chart)、3D/非 3D 饼图(Pie Chart)、堆积图(Stacked Bar Chart)、面积图(Area Chart)、 折线图(Line Chart)、曲线图(Spline Chart)、环形图(Dount Chart)、南丁格尔玫瑰图(Rose Chart)、仪表盘(Dial Chart)、刻度盘(Gauge Chart)、雷达图(Radar Chart)、圆形图(Circle Chart)等图表。其它特性还包括支持图表缩放、手势移动、动画显示效果、高密度柱形显示、图表分界定制线、多图表的混合显示及同数据源不同类型图表切换等。项目地址：https://github.com/xcltapestry/XCL-ChartsDemo 地址：https://github.com/xcltapestry/XCL-Charts/blob/master/XCL-Charts-demo/bin/XCL-Charts-demo.apk?raw=true EazeGraphAndroid 图表库，支持柱状图、分层柱状图、饼状图、线性图项目地址：https://github.com/blackfizz/EazeGraphDemo 地址：https://play.google.com/store/apps/details?id=org.eazegraph.app WilliamChart绘制图表的库，支持 LineChartView、BarChartView 和 StackBarChartView 三中图表类型，并且支持 Android 2.2 及以上的系统。项目地址：https://github.com/diogobernardino/WilliamChartDemo 地址：https://play.google.com/store/apps/details?id=com.db.williamchartdemoDemo 项目：https://github.com/diogobernardino/WilliamChart/tree/master/sample HelloCharts for Android支持折线图、柱状图、饼图、气泡图、组合图；支持预览、放大缩小，滚动，部分图表支持动画；支持 Android 2.2 以上项目地址：https://github.com/lecho/hellocharts-androidDemo 地址：https://play.google.com/store/apps/details?id=lecho.lib.hellocharts.samples在线演示：https://www.youtube.com/watch?v=xbSBjyjH2SY PieChartView比较简单直接的饼状统计报表图，使用方便，设置相应的属性参数即可项目地址：https://github.com/wuseal/PieChartViewDemo 地址：https://github.com/wuseal/PieChartView 十五、UI Style不同样式的系统 UI 风格，如 IOS、Bootstrap 风格 UITableViewios 风格控件，包括 Button、ListView、TableView项目地址：https://github.com/thiagolocatelli/android-uitableviewDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/ui-tableview-demo.apk?raw=true ATableViewios 风格控件项目地址：https://github.com/dmacosta/ATableViewDemo 地址：https://play.google.com/store/apps/details?id=com.nakardo.atableview.demo Cards-UI卡片式 View，支持单个卡片，item 为卡片的 ListView项目地址：https://github.com/afollestad/Cards-UIDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/cards-ui-demo.apk?raw=true cardslib卡片式 View，支持单个卡片，item 为卡片的 ListView 和 GridView项目地址：https://github.com/gabrielemariotti/cardslibDemo 地址：https://play.google.com/store/apps/details?id=it.gmariotti.cardslib.demo Android-BootstrapBootstrap 风格的按钮项目地址：https://github.com/Bearded-Hen/Android-Bootstrap Material Design Android LibraryAndroid L 中 Material Design 风格的组件适配到 Android 2.2+项目地址：https://github.com/navasmdc/MaterialDesignLibrary Android FlatUIAndroid 扁平化风格的组件，支持一些自定义样式项目地址：https://github.com/eluleci/FlatUI cheesesquare全新 Android 设计库演示 Demo，包括 Collapsing Toolbar、FloatingActionButton、View anchoring、NavigationView、Snackbar项目地址：https://github.com/chrisbanes/cheesesquare 十六、其他 SnappingStepper一种漂亮的UI控件，能更灵活的控制数字的增减。可用于购物车商品数量控制。项目地址：https://github.com/saiwu-bigkoo/Android-SnappingStepper SwipeBackLayout左右或向上滑动返回的 Activity项目地址：https://github.com/Issacw0ng/SwipeBackLayoutDemo 地址：https://play.google.com/store/apps/details?id=me.imid.swipebacklayout.demoAPP 示例：知乎 android-styled-dialogs可自定义样式的 dialog，默认与 Holo 主题样式一致，在 Android2.2 以上同一样式项目地址：https://github.com/inmite/android-styled-dialogsDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/styled-dialogs-demo.apk?raw=true Android Sliding Up Panel可拖动的 View，能在当前 Activity 上扶起一个可拖动的 Panel项目地址：https://github.com/umano/AndroidSlidingUpPanelDemo 地址：https://play.google.com/store/apps/details?id=com.sothree.umanoAPP 示例：Google Music 精简播放栏 TableFixHeaders第一列固定的 Table项目地址：https://github.com/InQBarna/TableFixHeadersDemo 地址：http://bit.ly/13buAIq Inscription可用于展示应用 change 和 new feature 信息项目地址：https://github.com/MartinvanZ/Inscription ActivityTransitionActivity 切换动画，包括渐变、flip、某个位置进入等等项目地址：https://github.com/ophilbert/ActivityTransition文档介绍：https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true EasyAndroidAnimations针对 View 的各种动画项目地址：https://github.com/2359media/EasyAndroidAnimations ViewAnimation对android view 动画进行封装,实现起更简单，自带三种常见运动路径，其他的可自定义项目地址：https://github.com/guohuanwen/ViewAniamtionAPP 示例：QQ名片圈圈效果 AndroidLoadingAnimation多种android加载动画项目地址：https://github.com/guohuanwen/AndroidLoadingAnimation android-lockpatternAndroid 的图案密码解锁项目地址：https://code.google.com/p/android-lockpattern/原理剖析文档：android-lockpatternDemo 地址：https://play.google.com/store/apps/details?id=group.pals.android.lib.ui.lockpattern.demo文档介绍：https://code.google.com/p/android-lockpattern/wiki/QuickUseAPP 示例：Android 开机的图案密码解锁，支付宝的密码解锁 PatternLock另一个 Android 图案解锁库项目地址：https://github.com/DreaminginCodeZH/PatternLockDemo 地址：https://github.com/DreaminginCodeZH/PatternLock/raw/master/dist/sample.apkAPP 示例：Android 开机的图案密码解锁，支付宝的密码解锁 RangeBar类似于 SeekBar，不同的是可以选择一个范围内的值而不是单个值项目地址：https://github.com/edmodo/range-barDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/range-bar-demo.apk?raw=true ChromeView利用 Chromium 实现的 WebView，解决各个 Android 版本 WebView 不同的问题，同时利用最新 Chrome 代码项目地址：https://github.com/pwnall/chromeview android-phased-seek-bar支持预先定义状态的 SeekBar项目地址：https://github.com/ademar111190/android-phased-seek-bar Android Slider Preference Library可添加到设置中的基于对话框的 RankBar 小部件项目地址：https://github.com/jayschwa/AndroidSliderPreference ShowcaseView library用于高亮显示应用程序的特定部分，从而突出突出重点项目地址：https://github.com/amlcurran/ShowcaseView android-segmented-controlAndroid 上的 Segmented Controls，相当于 RadioButton 组项目地址：https://github.com/hoang8f/android-segmented-control Swipeable Cards类似 Tinder 的卡片效果，可以加载图片并动画效果展示，向左滑动表示喜欢，向右表示不喜欢项目地址：https://github.com/kikoso/Swipeable-CardsDemo 地址：https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo EdgeEffectOverride改变 ScrollView, ListView, ExpandableListView, GridView, ViewPager 等滚动控件滚动到边缘的颜色效果项目地址：https://github.com/AndroidAlliance/EdgeEffectOverride android-pinned-header-listviews使 ExpandListView 的 Group 滑动到顶端时会固定不动直到另外一个 Group 到达顶端项目地址：https://github.com/rtyley/android-pinned-header-listviews AndroidSwipeLayout滑动 Layout，支持单个 View，ListView，GridView项目地址：https://github.com/daimajia/AndroidSwipeLayoutDemo 地址：Download Demo DynamicCardLayout在 Android 中实现的类似 Windows8 的瓷片布局项目地址：https://github.com/dodola/DynamicCardLayout Emoticons-Keyboard带表情情符号的自定义键盘项目地址：https://github.com/chiragjain/Emoticons-Keyboard Android Typeface Helper可以帮你轻松实现自定义字体的库项目地址：https://github.com/norbsoft/android-typeface-helper Android-Anim-Playground几个动画效果，其中第二个基于 android-svg 的绘制效果非常好项目地址：https://github.com/Tibolte/Android-Anim-Playground AlertView仿iOS的AlertViewController 几乎完美还原iOS 的 AlertViewController ，同时支持Alert和ActionSheet模式，每一个细节都是精雕细琢，并把api封装成懒到极致模式，一行代码就可以进行弹窗.项目地址：https://github.com/saiwu-bigkoo/Android-AlertView NiftyDialogEffects支持自定义飞入动画样式的 Dialog项目地址：https://github.com/sd6352051/NiftyDialogEffects在线演示：http://tympanus.net/Development/ModalWindowEffects/ PostOffice创建 Holo 及 Material Design 样式的 Dialog项目地址：https://github.com/r0adkll/PostOffice Swipecards类似 Tinder 的卡片效果，可以加载图片并动画效果展示，向左滑动表示喜欢，向右表示不喜欢，根据 Kikoso’s Swipeable-Cards 改造而来项目地址：https://github.com/Diolor/Swipecards SeekArc圆形的 SeekBar项目地址：https://github.com/TriggerTrap/SeekArc BlurDialogFragment显示 DialogFragment 时背景模糊效果项目地址：https://github.com/tvbarthel/BlurDialogFragmentDemo 地址：https://play.google.com/store/apps/details?id=fr.tvbarthel.lib.blurdialogfragment.sample range-seek-bar随机值选取的 SeekBar项目地址：https://github.com/yahoo/android-range-seek-bar MaterialRangeBar可以选择一个范围内的值而不是单个值的 SeekBar，RangeBar 的 Material Design 风格适配项目地址：https://github.com/oli107/material-range-bar MaterialListMaterial Design 风格的 CardView项目地址：https://github.com/dexafree/MaterialListDemo 地址：https://play.google.com/store/apps/details?id=com.dexafree.materiallistviewexample road-trip设置 path 的各种动画效果，以及如何实现复杂路径动画，类似于 ios 中的指纹注册界面的指纹动画效果项目地址：https://github.com/romainguy/road-trip dialogplus一个简单的 Android 对话框，支持不同的弹出模式项目地址：https://github.com/orhanobut/dialogplus FlowLayout一个简单的流式布局，用法类似 LinearLayout，但是能够让子元素根据宽度自动换行项目地址：FLowLayout CircleSeekbar一个环形Seekbar组件,支持叠加复合使用项目地址：CircleSeekbar FinestWebView美麗的和可定制的Android的活動，顯示在一個應用程序的網頁。项目地址: https://github.com/TheFinestArtist/FinestWebView-AndroidSample 地址: https://play.google.com/store/apps/details?id=com.thefinestartist.finestwebview.sample YouTubePlayerActivity只需通過一個URL來在新的活動播放YouTube視頻。它支持屏幕方向，媒體音量控制等。项目地址: https://github.com/TheFinestArtist/YouTubePlayerActivitySample 地址: https://play.google.com/store/apps/details?id=com.thefinestartist.ytpa.sample material-cameramaterial风格的camera。能使camera使用起来更简单的库。项目地址：https://github.com/afollestad/material-camera material-dialogs各种material风格的dialog。漂亮的的、易于使用的和可定制的Dialog API，你能够使用Material designed风格的Dialog到API 8。项目地址：https://github.com/afollestad/material-dialogsSample地址：https://github.com/afollestad/material-dialogs/blob/master/sample/sample.apk NotifyUtil最常见的通知样式库项目地址:https://github.com/wenmingvs/NotifyUtildemo地址：https://github.com/wenmingvs/NotifyUtil#notifydemo CanPhotos使用fresco选取多张图片并可预览图片项目地址：https://github.com/canyinghao/CanPhotos CanDialog仿照系统Dialog所写，继承于FrameLayout，添加一些动画，一些显示类型。项目地址：https://github.com/canyinghao/CanDialog 第二部分 工具库主要包括那些不错的开发库，包括依赖注入框架、图片缓存、网络请求、数据库 ORM 建模、Android 公共库、Android 高版本向低版本兼容、多媒体相关及其他。 一、依赖注入 DI通过依赖注入减少 View、服务、资源简化初始化，事件绑定等重复繁琐工作 AndroidAnnotations(Code Diet)android 快速开发框架项目地址：https://github.com/excilys/androidannotations文档介绍：https://github.com/excilys/androidannotations/wiki官网网址：http://androidannotations.org/特点：(1) 依赖注入：包括 view，extras，系统服务，资源等等(2) 简单的线程模型，通过 annotation 表示方法运行在 ui 线程还是后台线程(3) 事件绑定：通过 annotation 表示 view 的响应事件，不用在写内部类(4) REST 客户端：定义客户端接口，自动生成 REST 请求的实现(5) 没有你想象的复杂：AndroidAnnotations 只是在在编译时生成相应子类(6) 不影响应用性能：仅 50kb，在编译时完成，不会对运行时有性能影响。其他：与 roboguice 的比较：roboguice 通过运行时读取 annotations 进行反射，所以可能影响应用性能，而 AndroidAnnotations 在编译时生成子类，所以对性能没有影响 roboguice帮你处理了很多代码异常，利用 annotation 使得更少的代码完成项目项目地址：https://github.com/roboguice/roboguice文档介绍：https://github.com/roboguice/roboguice/wiki butterknife利用 annotation 帮你快速完成 View 的初始化，减少代码项目地址：https://github.com/JakeWharton/butterknife文档介绍：http://jakewharton.github.io/butterknife/ Dagger依赖注入，适用于 Android 和 Java项目地址：https://github.com/square/dagger原理剖析文档：Dagger文档介绍：http://square.github.io/dagger/ AutoParcel注解自动生成Parcelable实现代码的库项目地址：https://github.com/frankiesardo/auto-parcel这篇文章详细介绍了它的使用方法：AutoParcel作者认为使用AutoParcel的好处是，可以简化构造函数，方便IDE代码自动完成，方便测试，前向兼容，生成不可变的对象。文档介绍：https://github.com/frankiesardo/auto-parcel 二、图片缓存 Android-Universal-Image-Loader图片缓存，目前使用最广泛的图片缓存，支持主流图片缓存的绝大多数特性。项目地址：https://github.com/nostra13/Android-Universal-Image-Loader原理剖析文档：Android-Universal-Image-LoaderDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/universal-imageloader-demo.apk?raw=true文档介绍：http://www.intexsoft.com/blog/item/74-universal-image-loader-part-3.html picassosquare 开源的图片缓存项目地址：https://github.com/square/picasso文档介绍：http://square.github.io/picasso/特点：(1)可以自动检测 adapter 的重用并取消之前的下载(2)图片变换(3)可以加载本地资源(4)可以设置占位资源(5)支持 debug 模式 Cube ImageLoader阿里巴巴一淘使用的图片加载，综合了 Android-Universal-Image-Loader 和 square 等组件优点，简单易用，良好的中文文档支持项目地址：https://github.com/etao-open-source/cube-sdkDemo 地址：https://github.com/liaohuqiu/cube-sdk/raw/master/cube-sdk-sample.apk文档介绍：http://cube-sdk.liaohuqiu.net/ fresco一款强大的图片缓存工具，由 Facebook 开发项目地址：https://github.com/facebook/fresco文档介绍：http://frescolib.org/特点：(1) 两个内存缓存加上磁盘缓存构成了三级缓存(2) 支持流式，可以类似网页上模糊渐进式显示图片(3) 对多帧动画图片支持更好，如 Gif、WebP(4) 更多样的显示，如圆角、进度条、点击重试、自定义对焦点(5) 更多样的加载，如支持 EXIF、全面支持 WebP(6) 支持 Android 2.3+ GlideGlide 是一个 android 平台上的快速和高效的开源的多媒体资源管理库,提供 多媒体文件的压缩,内存和磁盘缓存, 资源池的接口。它可以最大性能地在 Android 设备上读取、解码、显示图片和视频。Glide 可以将远程的图片、视频、动画图片等缓存在设备本地便于提高用户浏览图片的流畅体验。项目地址：https://github.com/bumptech/glide特点：(1) GIF 动画的解码(2) 本地视频剧照的解码(3) 支持缩略图(4) Activity 生命周期的集成(5) 转码的支持(6) 动画的支持(7) OkHttp 和 Volley 的支持 三、网络请求 VolleyGoogle 提供的网络通信库，使得网络请求更简单、更快速项目地址：https://android.googlesource.com/platform/frameworks/volley文档介绍：http://commondatastorage.googleapis.com/io-2013/presentations/110%20-%20Volley-%20Easy,%20Fast%20Networking%20for%20Android.pdf Asynchronous Http Client for AndroidAndroid 异步 Http 请求项目地址：https://github.com/loopj/android-async-http文档介绍：http://loopj.com/android-async-http/特点：(1) 在匿名回调中处理请求结果(2) 在 UI 线程外进行 http 请求(3) 文件断点上传(4) 智能重试(5) 默认 gzip 压缩(6) 支持解析成 Json 格式(7) 可将 Cookies 持久化到 SharedPreferences android-query异步加载，更少代码完成 Android 加载项目地址：https://github.com/androidquery/androidquery 或 https://code.google.com/p/android-query/Demo 地址：https://play.google.com/store/apps/details?id=com.androidquery文档介绍：https://code.google.com/p/android-query/#Why_AQuery?特点：https://code.google.com/p/android-query/#Why_AQuery? Async Http ClientJava 异步 Http 请求项目地址：https://github.com/AsyncHttpClient/async-http-client文档介绍：http://sonatype.github.io/async-http-client/ Ion支持图片、json、http post 等异步请求项目地址：https://github.com/koush/ion文档介绍：https://github.com/koush/ion#more-examples Http Request项目地址：https://github.com/kevinsawicki/http-request文档介绍：https://github.com/kevinsawicki/http-request#examples okhttpsquare 开源的 http 工具类项目地址：https://github.com/square/okhttp文档介绍：http://square.github.io/okhttp/特点：(1) 支持 SPDY( http://zh.wikipedia.org/wiki/SPDY )协议。SPDY 协议是 Google 开发的基于传输控制协议的应用层协议，通过压缩，多路复用(一个 TCP 链接传送网页和图片等资源)和优先级来缩短加载时间。(2) 如果 SPDY 不可用，利用连接池减少请求延迟(3) Gzip 压缩(4) Response 缓存减少不必要的请求 RetrofitRESTFUL API 设计项目地址：https://github.com/square/retrofit文档介绍：http://square.github.io/retrofit/ RoboSpiceAndroid 异步网络请求工具，支持缓存、REST 等等项目地址：https://github.com/stephanenicolas/robospiceDemo 地址：https://github.com/stephanenicolas/RoboDemo/downloads TwistVolleyTwistVolley 是对 Volley 的一个封装库。提供类似 Picasso 一样的串联式 API。使得使用 Volley 更加方便。项目地址：https://github.com/TwistedEquations/TwistVolley 四、数据库 orm 工具包orm 的 db 工具类，简化建表、查询、更新、插入、事务、索引的操作 greenDAOAndroid Sqlite orm 的 db 工具类项目地址：https://github.com/greenrobot/greenDAO文档介绍：http://greendao-orm.com/documentation/官网网址：http://greendao-orm.com/特点：(1) 性能佳(2) 简单易用的 API(3) 内存小好小(4) 库大小小 GreenDaoUpgradeHelpergreenDAO的数据库升级帮助类，只需一行代码解决数据库升级项目地址：https://github.com/yuweiguocn/GreenDaoUpgradeHelper ActiveAndroidAndroid Sqlite orm 的 db 工具类项目地址：https://github.com/pardom/ActiveAndroid文档介绍：https://github.com/pardom/ActiveAndroid/wiki/_pages SprinklesAndroid Sqlite orm 的 db 工具类，比较显著的特点就是配合 https://github.com/square/retrofit 能保存从服务器获取的数据项目地址：https://github.com/emilsjolander/sprinkles文档介绍：http://emilsjolander.github.io/blog/2013/12/18/android-with-sprinkles/ Realm移动端的数据库，适用于 Phone、Tablet、Wearable，支持 ORM，线程安全、支持连表及数据库加密，比 SQLite 性能更好项目地址：https://github.com/realm/realm-java文档介绍：http://realm.io/docs/java/0.72.0/ ormlite-android项目地址：https://github.com/j256/ormlite-android文档介绍：http://ormlite.com/sqlite_java_android_orm.shtml Schematic根据 SQLite 生成 ContentProvider项目地址：https://github.com/SimonVT/schematic DBFlowAndroid SQLite ORM 工具库。综合了 Active Android, Schematic, Ollie,Sprinkles 等库的优点；通过注解实现，性能好；能生成 ContentProvider。项目地址：https://github.com/Raizlabs/DBFlow文档介绍：https://github.com/Raizlabs/DBFlow#usage-docs SnappyDBSnappyDB是一个key-value数据库，非常流行的NoSQL数据库。项目地址：https://github.com/nhachicha/SnappyDB演示Demo：https://play.google.com/store/apps/details?id=com.snappydb.snippets.app 五、Android 公共库 GuavaGoogle 的基于 java1.6 的类库集合的扩展项目，包括 collections, caching, primitives support, concurrency libraries, common annotations, string processing, I/O 等等. 这些高质量的 API 可以使你的 JAVa 代码更加优雅，更加简洁项目地址：https://code.google.com/p/guava-libraries/文档介绍：https://code.google.com/p/guava-libraries/wiki/GuavaExplained AndroidCommonAndroid 公共库项目地址：https://github.com/Trinea/AndroidCommonDemo 地址：https://play.google.com/store/apps/details?id=cn.trinea.android.demo文档介绍：http://www.trinea.cn/android/android-common-lib/包括：a. ImageCache 图片缓存，包含内存和 Sdcard 缓存http://www.trinea.cn/android/android-imagecache/特点：(1)支持预取新图片，支持等待队列(2)包含二级缓存，可自定义文件名保存规则(3)可选择多种缓存算法(FIFO、LIFO、LRU、MRU、LFU、MFU 等 13 种)或自定义缓存算法(4)可方便的保存及初始化恢复数据(5)支持不同类型网络处理(6)可根据系统配置初始化缓存等 HttpCache Http 缓存文档介绍：http://www.trinea.cn/android/android-http-cache特点是：(1) 根据 cache-control、expires 缓存 http 请求(2) 支持同步、异步 Http 请求(3) 在匿名回调中处理请求结果(4) 在 UI 线程外进行 http 请求(5) 默认 gzip 压缩(2) 公共 View(下拉及底部加载更多 ListView、底部加载更多 ScrollView、滑动一页 Gallery)(3) Android 常用工具类(网络、下载、Android 资源操作、shell、文件、Json、随机数、Collection 等等) DropDownListView 下拉刷新及滑动到底部加载更多 ListView文档介绍：http://www.trinea.cn/android/dropdown-to-refresh-and-bottom-load-more-listview/ shipfaster整合了 Dagger Otto Retrofit Robolectric Picasso OkHttp，方便快速开发项目地址：https://github.com/pyricau/shipfaster CleanAndroidCode整合了 Dagger Otto AndroidAnnotations，方便快速开发项目地址：https://github.com/pyricau/CleanAndroidCode xUtils基于 Afinal，包含 DbUtils、ViewUtils、HttpUtils、BitmapUtils 四大模块，可用于快速开发项目地址：https://github.com/wyouflf/xUtils原理剖析文档：xUtils AfinalAfinal 是一个 android 的 ioc，orm 框架，内置了四大模块功能：FinalAcitivity,FinalBitmap,FinalDb,FinalHttp。通过 finalActivity，我们可以通过注解的方式进行绑定 ui 和事件。通过 finalBitmap，我们可以方便的加载 bitmap 图片，而无需考虑 oom 等问题。通过 finalDB 模块，我们一行代码就可以对 android 的 sqlite 数据库进行增删改查。通过 FinalHttp 模块，我们可以以 ajax 形式请求 http 数据项目地址：https://github.com/yangfuhai/afinal官网网址：http://www.afinal.org UltimateAndroidUltimateAndroid 是一个快速开发 Android 应用的框架，框架目前主要包含的功能有 View Injection,ORM,异步网络请求和图片加载，自动化脚本测试,磁盘 LRU 等功能.同时提供了类似于 TripleDes、Webview 快速设置、Md5 处理、String 处理,Https 处理等常用工具类，还有超过 100 多种 UI 控件效果。项目地址：https://github.com/cymcsg/UltimateAndroid官网网址：http://blog.marshalchen.com/UltimateAndroid/ SAFSAF(Simple Android Framework)是一个简单的 android 框架，它为开发 Android app 提供了基础性组件。项目地址：https://github.com/fengzhizi715/SAF官网网址：http://www.salesuite.cn/包括：(1)Event Bus(事件总线)(2) Rest Client(http 的框架)(3) Image Cache(图片缓存)(4) Dependency Injection(依赖注入)(5) Sqlite ORM(sqlite 的 orm)(6) Router(Activity、Fragment 的 Router)(7) Utils(各种常用的工具类) BarberCustom View 神器。通过简单的注解帮助你大大减少 Custom View 中的代码量。由于和 ButterKnife 一样使用了 Annotation Proccessor ，所以对程序性能没有影响。项目地址：https://github.com/hzsweers/barber device-year-classA library that analyzes an Android device’s specifications and calculates which year the device would be considered “high end”.(facebook 开发的检测手机主流配置工具)项目地址：https://github.com/facebook/device-year-class RxAndroid对RxJava在Android上的扩展，使得Android上也很容易实现reactive components，简化线程操作，从而写出很漂亮的代码。项目地址：https://github.com/ReactiveX/RxAndroid文档介绍：给Android 开发者的 RxJava 详解 MultiImageSelector一个本地图片选择器，支持图片的单选和多选，直接返回所选图片的路径。项目地址：https://github.com/lovetuzitong/MultiImageSelector.git 六、Android 高版本向低版本兼容 Nine Old Androids将 Android 3.0(Honeycomb)所有动画 API(ObjectAnimator ValueAnimator 等)兼容到 Android1.0项目地址：https://github.com/JakeWharton/NineOldAndroids原理剖析文档：Nine Old AndroidsDemo 地址：https://play.google.com/store/apps/details?id=com.jakewharton.nineoldandroids.sample文档介绍：http://nineoldandroids.com/ HoloEverywhere将 Android 3.0 的 Holo 主题兼容到 Android2.1++项目地址：https://github.com/Prototik/HoloEverywhereDemo 地址：https://raw.github.com/Prototik/HoloEverywhere/repo/org/holoeverywhere/demo/2.1.0/demo-2.1.0.apk文档介绍：http://android-developers.blogspot.com/2012/01/holo-everywhere.html SherlockNavigationDrawer将 Android NavigationDrawer 和 ActionbarSherlock 结合，解决 4.0 以下 NavigationDrawer 的适配问题项目地址：https://github.com/tobykurien/SherlockNavigationDrawer文档介绍：http://developer.android.com/training/implementing-navigation/nav-drawer.html Notifications4EveryWhere将 Android 4.1 的 Notification 兼容到 Android2.2++项目地址：https://github.com/youxiachai/Notifications4EveryWhere Android Switch Widget Backport将 Android Switch 和 SwitchPreference 的兼容到 Android2.1++项目地址：https://github.com/BoD/android-switch-backportDemo 地址：https://play.google.com/store/apps/details?id=org.jraf.android.backport.switchwidget.sample文档介绍：https://github.com/BoD/android-switch-backport#using-the-switch android-datepicker将 Android 4.0 的 datepicker 兼容到 Android2.2++项目地址：https://github.com/SimonVT/android-datepicker Transitions EverywhereAndroid 4.4 的 Transitions API 兼容到 Android 2.2 以上项目地址：https://github.com/andkulikov/transitions-everywhere KShareViewActivityManager一个兼容Android 5.0 以下Shared Element Transition （页面间共享元素位移动画）库项目地址：https://github.com/kot32go/KShareViewActivityManager 七、多媒体相关 cocos2d-x跨平台的 2d 游戏框架，支持 Android、IOS、Linux、Windows 等众多平台项目地址：https://github.com/cocos2d/cocos2d-x文档介绍：http://www.cocos2d-x.org/wiki官网网址：http://www.cocos2d-x.org/ JustWeEngineAndroid的轻量级游戏框架，能大大缩减编写原生游戏的代码量和难度，仍在持续更新中。项目地址: https://github.com/lfkdsk/JustWeEngineDemo地址: https://github.com/lfkdsk/EngineDemo Vitamio是一款 Android 与 iOS 平台上的全能多媒体开发框架项目地址：https://github.com/yixia/VitamioBundle网站介绍：http://www.vitamio.org/docs/特点：(1) 全面支持硬件解码与 GPU 渲染(2) 能够流畅播放 720P 甚至 1080P 高清 MKV，FLV，MP4，MOV，TS，RMVB 等常见格式的视频(3) 在 Android 与 iOS 上跨平台支持 MMS, RTSP, RTMP, HLS(m3u8)等常见的多种视频流媒体协议，包括点播与直播。 VDPlayerSDK最容易集成的开源播放器组件，支持直播，支持软硬解切换，支持清晰度切换项目地址：https://github.com/SinaVDDeveloper/Demo 地址：https://github.com/SinaVDDeveloper/demo文档介绍：https://github.com/SinaVDDeveloper/sinavideo_playersdk特点：(1) 使用自定义控件方式提供播放器UI，不需要视频相关知识，能编写android应用就能使用(2) 软硬解切换、点播直播支持(3) 解码内核小于4M，更方便集成到非专业视频app中(4) 修正一些vitaimio的问题，比如m3u8可以拖动等等 VideoPlayerManager帮助实现VideoPlayer控制，使得它更容易使用ListView和recyclerview。它还可以跟踪滚动列表中可见的项。当列表中的新项可见域最大时，该库给出了接口来跟踪它。项目地址：https://github.com/danylovolokh/VideoPlayerManager文档介绍：https://medium.com/@v.danylo/implementing-video-playback-in-a-scrolled-list-listview-recyclerview-d04bc2148429#.hs5n0geqn UniversalVideoViewAndroid上定义播放器控件,支持自定义控制UI, 全屏播放, 重力感应自动切换横竖屏.项目地址：https://github.com/linsea/UniversalVideoView PhotoProcessing利用 ndk 处理图片库，支持 Instafix、Ansel、Testino、XPro、Retro、BW、Sepia、Cyano、Georgia、Sahara、HDR、Rotate(旋转)、Flip(翻转)等各种特效项目地址：https://github.com/lightbox/PhotoProcessingDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/photo-processing.apk?raw=true Android StackBlur图片模糊效果工具类项目地址：https://github.com/kikoso/android-stackblurDemo 地址：https://github.com/kikoso/android-stackblur/blob/master/StackBlurDemo/bin/StackBlurDemo.apk?raw=true文档介绍：https://github.com/kikoso/android-stackblur#usage Bitmap Smart Clipping using OpenCV图片智能裁剪保留重要部分显示项目地址：https://github.com/beartung/tclip-android利用淘宝的 http://code.taobao.org/p/tclip/ 库完成一淘玩客正在使用的图片裁剪，自动识别图片中的重要区域，并且在图片裁剪时保留重要区域特点：(1). 能进行人脸识别。图片中有人脸，将自动视为人脸区域为重要区域，将不会被裁剪掉(2).自动其它重要区域。如果图片中未识别出人脸，则会根据特征分布计算出重区域 Cropper图片局部剪切工具，可触摸控制选择区域或旋转项目地址：https://github.com/edmodo/cropper文档介绍：https://github.com/edmodo/cropper/wiki uCropYalantis 出品的强大的图片裁剪库 ，支持缩放，旋转图片，支持各种比例的裁剪框项目地址：https://github.com/Yalantis/uCrop android-crop图片裁剪 Activity项目地址：https://github.com/jdamcd/android-crop TileView可分块显示大图，支持 2D 拖动、双击、双指放大、双指捏合项目地址：https://github.com/moagrius/TileViewDemo 地址：http://moagrius.github.io/TileView/TileViewDemo.apk BlurEffectForAndroidDesign图片模糊效果项目地址：https://github.com/PomepuyN/BlurEffectForAndroidDesign android-eyePC 端网页查看同一局域网内的手机摄像头内容，可以用来监控哦项目地址：https://github.com/Teaonly/android-eyeDemo 地址：https://play.google.com/store/apps/details?id=teaonly.droideye libpng for AndroidPNG 图片的 jni 库，支持几乎 png 的所有特性项目地址：https://github.com/julienr/libpng-android文档介绍：http://www.libpng.org/pub/png/libpng.html android-gpuimage基于 GPU 的图片滤镜项目地址：https://github.com/CyberAgent/android-gpuimage AndroidFaceCropper图片脸部自动识别，将识别后的局部图片返回项目地址：https://github.com/lafosca/AndroidFaceCropper Android Video Crop利用 TextureView 播放和剪切视频，类似 ImageView.setScaleType项目地址：https://github.com/dmytrodanylyk/android-video-cropDemo 地址：https://github.com/lafosca/AndroidFaceCropper/releases/download/1.0/FaceCropper-sample-debug-unaligned.apk svg-androidAndroid Svg 矢量图形支持项目地址：https://github.com/japgolly/svg-android https://github.com/japgolly/svg-android Android Visualizer从 Android MediaPlayer 获得音频，然后像 iTunes 及 WinAmp 一样展示音轨项目地址：https://github.com/felixpalmer/android-visualizer ExoPlayer包括仪表板和 SmoothStreaming 自适应回放，缓存持久化和自定义渲染器，方便自定义和扩展，并且可以通过应用商店更新项目地址：https://github.com/google/ExoPlayer DanmakuFlameMasterandroid 上开源弹幕解析绘制引擎项目项目地址：https://github.com/ctiao/DanmakuFlameMaster OpenDanmakuandroid 上一个轻量级的更简单的开源弹幕控件项目地址：https://github.com/linsea/OpenDanmaku 八、事件总线(订阅者模式)通过发布/订阅事件解耦事件发送和接受，从而简化应用程序组件(Activities, Fragments 及后台线程)之间的通信 EventBusgreenrobot 的开源项目项目地址：https://github.com/greenrobot/EventBus原理剖析文档：EventBus文档介绍：https://github.com/greenrobot/EventBus#general-usage-and-api特点：(1) 支持在不同类型的线程中处理订阅，包括发布所在线程，UI 线程、单一后台线程、异步线程(2) 支持事件优先级定义，支持优先级高的订阅者取消事件继续传递，支持粘性事件，是不是跟系统的有序广播、粘性广播很像啊(3) 不是基于 annotations(4) 性能更优(5) 体积小(6) 支持单例创建或创建多个对象(7) 支持根据事件类型订阅 OttoSquare 的开源项目，基于 Guava 的 Android 优化项目地址：https://github.com/square/otto文档介绍：http://square.github.io/otto/EventBus 与 Otto 的功能及性能对比文档EventBus 与 Otto 性能对比 Demo Apk 九、传感器 Great Android Sensing ToolkitAndroid 感应器工具包，包含示例及使用过程中可能需要的算法项目地址：https://github.com/gast-lib/gast-libDemo 地址：https://play.google.com/store/apps/details?id=root.gast.playground文档介绍：https://github.com/gast-lib/gast-lib#documentation SensorManagerAndroid 传感器管理项目地址：https://github.com/nlathia/SensorManager文档介绍：https://docs.google.com/document/d/1TqThJULb-4e6TGb1gdkAaPCfyuXStjJpbnt7a0OZ9OE/edit GPSLogger记录 GPS 信息项目地址：https://github.com/mendhak/gpsloggerDemo 地址：https://play.google.com/store/apps/details?id=com.mendhak.gpslogger文档介绍：http://code.mendhak.com/gpslogger/ Pedometer计步器，使用硬件计步感应器项目地址：https://github.com/j4velin/Pedometer leapcastChromeCast 模拟器的 App项目地址：https://github.com/dz0ny/leapcast Arduino-Communicator与 Arduino 通信的 App项目地址：https://github.com/jeppsson/Arduino-Communicator android-pedometerAndroid 计步器项目地址：https://github.com/bagilevi/android-pedometerDemo 地址：http://pedometer.googlecode.com/files/Pedometer-1.4.apk OwnTracks for Android自己的轨迹记录项目地址：https://github.com/owntracks/android Shake Detector library for AndroidAndroid 手机震动摇晃检测库，提供供 UI 线程调用的回调接口项目地址：https://github.com/tbouron/ShakeDetectorDemo 地址：https://play.google.com/store/apps/details?id=com.github.tbouron.shakedetector.example Android heart rate monitorAndroid 心跳检测项目地址：https://github.com/phishman3579/android-heart-rate-monitor Bluetooth LE Library for Android蓝牙源信息，包括宝库 Mac、更新时间、RSSI、UUID、信号源距离、影响范围等信息项目地址：https://github.com/alt236/Bluetooth-LE-Library---AndroidDemo 地址：https://play.google.com/store/apps/details?id=uk.co.alt236.btlescan farebot通过 NFC 从公交卡中读取数据的一个应用项目地址：https://github.com/codebutler/farebot 十、安全 SQLCipherSqlite 加密工具项目地址：https://github.com/sqlcipher/sqlcipher文档介绍：http://sqlcipher.net/sqlcipher-for-android/ Conceal快速高效的进行文件加密解密项目地址：https://github.com/facebook/conceal文档介绍：https://github.com/facebook/conceal#usage Android-PasscodeLock应用锁，每次启动或从任何 Activity 启动应用都需要输入四位数字的密码方可进入项目地址：https://github.com/wordpress-mobile/Android-PasscodeLockDemo 地址：https://play.google.com/store/apps/details?id=org.wordpress.androidAPP 示例：Wordpress Android，支付宝，挖财 GlowPadBackport将 Android4.2 的锁屏界面解锁扩展到 Android1.6 及 1.6+项目地址：https://github.com/rock3r/GlowPadBackportDemo 地址：https://play.google.com/store/apps/details?id=net.sebastianopoggi.samples.ui.GlowPadSample GlowPadViewAndroid 4 锁屏界面解锁项目地址：https://github.com/nadavfima/GlowPadView Android-InsecureBank关于 Android 不安全性的示例项目地址：https://github.com/dineshshetty/Android-InsecureBankv2 十一、插件化更多见：Android 插件化作用、概念以及不错的资料(包括开源项目)和解决方案 dynamic-load-apkAndroid 动态加载 Apk，热部署，利用 ClassLoader 以及 Activity 代理的方式解决项目地址：https://github.com/singwhatiwanna/dynamic-load-apk原理剖析文档：dynamic-load-apk文档介绍：http://blog.csdn.net/singwhatiwanna/article/details/22597587 Android Dynamic Loader点评的实现方式，和上面不同的是：他不是用代理 Activity 的方式实现而是用 Fragment 以及 Schema 的方式实现项目地址：https://github.com/mmin18/AndroidDynamicLoaderDemo 地址：https://github.com/mmin18/AndroidDynamicLoader/raw/master/host.apk xCombineAndroid App 插件式插件开发，插件必须先安装，更推荐看上面两个开源项目项目地址：https://github.com/wyouflf/xCombine文档介绍：http://my.oschina.net/u/1171837/blog/155377 Android Plugin FrameworkAndroid 插件式开发，开放的源码目前不完整项目地址：https://github.com/umeng/apf Android OpenAtlasAndroid插件框架，基于OSGI，非代理方式，组件需要在宿主中声明项目地址：https://github.com/bunnyblue/OpenAtlasDemo 地址：https://github.com/bunnyblue/OpenAtlasExtension/blob/master/Dist/OpenAtlasLauncher.apk multidex安装多 dex 的 classloader项目地址：https://github.com/casidiablo/multidex ANR-WatchDogAndroid ANR 监听，通过监听自己的 UI Thread 是否被执行确定是否发生了 ANR，并可以设置相关事件项目地址：https://github.com/SalomonBrys/ANR-WatchDog 十二、文件对不同文档类型的处理，包括 PDF、Word、EPub、Html、Zip 等 purePDF允许从任何运行的 SWF 文件读取和创建 PDF 文档项目地址：https://github.com/sephiroth74/purePDF android-pdfview快速解析 pdf 的 view，默认支持手势缩放和相关动画项目地址：https://github.com/JoanZapata/android-pdfview Office 365 SDK for Android Preview可支持 Microsoft SharePoint Lists, Microsoft SharePoint Files, Microsoft Exchange Calendar, Microsoft Exchange Contacts, Microsoft Exchange Mail项目地址：https://github.com/OfficeDev/Office-365-SDK-for-Android OpenSpritz-AndroidEPub 阅读器项目地址：https://github.com/OnlyInAmerica/OpenSpritz-Android jsoup一个解析 html 的 java 库，可方便的提取和操作数据项目地址：https://github.com/jhy/jsoup官网网址：http://jsoup.org/作用：(1) 从一个 url、文件或 string 获得 html 并解析(2) 利用 dom 遍历或 css 选择器查找、提取数据(3) 操作 html 元素(4) 根据白名单去除用于提交的非法数据防止 xss 攻击(5) 输出整齐的 html ZIPjava 压缩和解压库项目地址：https://github.com/zeroturnaround/zt-zip文档介绍：https://github.com/zeroturnaround/zt-zip#examples作用：(1) 解压和压缩，并支持文件夹内递归操作(2) 支持包含和排除某些元素(3) 支持重命名元素(4) 支持遍历 zip 包内容(5) 比较两个 zip 包等功能 Image File Selector轻量级的图片文件选择器，用系统api选取，压缩和裁切图片，可以方便的得要指定尺寸的图片项目地址：https://github.com/sw926/ImageFileSelector 十三、其他 FragmentStack一个封装了启动模式的Fragment便捷使用库,方便构建单Activity+多Fragment轻量级框架项目地址：https://github.com/Mr-wangyong/FragmentStackApp示例：南瓜电影 CustomTabsHelper快速集成 CustomTabs 的工具类项目地址：https://github.com/DreaminginCodeZH/CustomTabsHelper Salvage view带 View 缓存的 Viewpager PagerAdapter，很方便使用项目地址：https://github.com/JakeWharton/salvage Android Priority Job QueueAndroid 后台任务队列项目地址：https://github.com/path/android-priority-jobqueue文档介绍：https://github.com/path/android-priority-jobqueue#getting-started Cobub Razor开源的 mobile 行为分析系统，包括 web 端、android 端，支持 ios 和 window phone项目地址：https://github.com/cobub/razorDemo 地址：http://demo.cobub.com/razor官网网址：http://dev.cobub.com/ CountlyAndroid 移动端数据采集分析系统项目地址：https://github.com/Countly/countly-sdk-android官网网址：https://count.ly/ aFileChooser文件选择器，可内嵌到程序中，而无需使用系统或三方文件选择器。项目地址：https://github.com/iPaulPro/aFileChooser androidpn基于 xmpp 协议的消息推送解决方案，包括服务器端和 android 端。项目地址：https://github.com/dannytiehui/androidpn BoltsAndroid 的异步编程模式项目地址：https://github.com/BoltsFramework/Bolts-Android/与 AsyncTask 比较：(1) 使用的是无大小限制的线程池(2) 任务可组合可级联，防止了代码耦合 CastCompanionLibrary-android使 Android 程序中更快的接入 Google Cast项目地址：https://github.com/googlecast/CastCompanionLibrary-android文档介绍：https://developers.google.com/cast/ CastVideos-android从 Android 设备分享 Video 通过 Google Cast项目地址：https://github.com/googlecast/CastVideos-android文档介绍：https://developers.google.com/cast/ Uninstall_StaticsAndroid 应用自身被卸载监听及打开浏览器等反馈功能实现项目地址：https://github.com/sevenler/Uninstall_Statics文档介绍：http://www.cnblogs.com/zealotrouge/p/3157126.html http://www.cnblogs.com/zealotrouge/p/3159772.html Memento保证在系统配置改变时，Activity 中的某些数据可以简单安全的保持不变项目地址：https://github.com/mttkay/memento文档介绍：https://github.com/mttkay/memento#usage FreeFlow布局引擎，更简单的创建自定义布局，并且当数据和布局改变时更美观的过渡动画项目地址：https://github.com/Comcast/FreeFlowDemo 地址：https://github.com/Comcast/FreeFlow/releases Android Gesture Detectors FrameworkAndroid 手势框架，支持双指旋转、移动、平移、缩放等项目地址：https://github.com/Almeros/android-gesture-detectors Mapbox Android SDKAndroid Map 的替代版项目地址：https://github.com/mapbox/mapbox-android-sdk Activity animationActivity 跳转动画，支持各个方向波浪的效果项目地址：https://github.com/flavienlaurent/activityanimation在线演示：https://www.youtube.com/watch?v=-E0sc6w_Jck KryoNet通过 NIO 提供客户端和服务器端 TCP/UDP 网络传输的 Java 库项目地址：https://github.com/EsotericSoftware/kryonet Rebound一个模仿弹簧反弹的 Java 库，可用于创建动画项目地址：https://github.com/facebook/rebound Android Social Networks社交网络接入统一管理器，可方便的从 Twitter, LinkedIn, Facebook, Google Plus 登陆、获得个人信息、发送消息、发送专篇、添加或删除好友项目地址：https://github.com/antonkrasov/AndroidSocialNetworksDemo 地址：https://play.google.com/store/apps/details?id=com.github.androidsocialnetworks.apidemos SmartAppUpdatesAndroid App 增量升级，包含前后端方案、Demo、以及 so 库，可用于商店或大体积 App 差分升级项目地址：https://github.com/cundong/SmartAppUpdates Magnet创建类似 Facebook 聊天桌面悬浮窗的效果项目地址：https://github.com/premnirmal/Magnet AcDisplay将 Android 的通知都集中到锁屏显示项目地址：https://github.com/AChep/AcDisplayDemo 地址：https://play.google.com/store/apps/details?id=com.achep.acdisplay QrCodeScanZXing 和 ZBar 结合的二维码扫描项目，提高了扫描效率项目地址：https://github.com/SkillCollege/QrCodeScan Android-ScreenShot实现 android 系统截屏功能项目地址：https://github.com/Android-ScreenShot/AndroidScreenShotService文档介绍：http://blog.csdn.net/buptgshengod/article/details/39155979 card.io SDK for Android信用卡扫描 Android SDK项目地址：https://github.com/card-io/card.io-Android-SDKDemo 项目：https://github.com/card-io/card.io-Android-SDK/tree/master/SampleApp ASNETwitter, Facebook, Google Plus, LinkedIn, Instagram, Vkontakte, Odnoklassniki 的集成库，包括他们的大多数功能项目地址：https://github.com/gorbin/ASNEDemo 地址：https://play.google.com/store/apps/details?id=com.gorbin.androidsocialnetworksextended.asne Android Signature PadAndroid 自定义的签名 View，可自定义笔颜色和大小项目地址：https://github.com/gcacace/android-signaturepadDemo 项目：https://github.com/gcacace/android-signaturepad/tree/master/SignaturePad-Example TeleportAndroid Wear 数据同步和消息传送库项目地址：https://github.com/Mariuxtheone/Teleport DebugLog可以帮你创建更简单和更容易理解的调试日志，能够友好的显示调试信息所在类和函数。项目地址：https://github.com/MustafaFerhan/DebugLog Logger简单、美观而且十分强大的 Android 日志工具项目地址：https://github.com/orhanobut/loggerDemo 地址：https://github.com/orhanobut/logger/tree/master/app jlog可以灵活配置的日志工具，支持JSON打印，日志保存到指定文件，日志显示调用位置（混淆模式下依然有效）项目地址：https://github.com/JiongBull/jlogDemo 地址：apk地址 Phrasesquare 组开源大牛写的字符串替换类项目地址：https://github.com/square/phrase ColorPhrase模仿 phrase 写的对字符串个别字符颜色改变的类，高效强大！项目地址：https://github.com/THEONE10211024/ColorPhrase PinyinSearch一个为 T9 搜索和 Qwerty 搜索,提供数据解析与匹配等方法的拼音搜索 java 库。项目地址： https://github.com/handsomezhou/PinyinSearchLibraryDemo 地址： ContactsSearch AppSearchAPP 示例： 通讯录应用，微信电话本 PrainViewPaintView 是一个画图工具:可直接使用设定按钮来实现已拥有的方法，且拓展性强基础功能：更换颜色、更换橡皮、以及更换橡皮和笔的粗细、清屏、倒入图片特殊功能：保存画笔轨迹帧动画、帧动画导入导出、ReDo和UnDo项目地址：Paintviewdemo地址：apk地址原理解析：PaintView 绘图控件解析 CodeViewCodeView代码查看／修改工具: 基于WebView制作的代码编辑器,实现代码高亮，暗色主题项目地址：CodeViewdemo地址：apk地址 ExplorerView文件浏览器：继承自ListView，可拓展性强，可进行文件类型分析项目地址：CodeViewdemo地址：apk地址 ReadView小说阅读器，支持文字字体、颜色、背景、进度等多种调整，支持一键设置。项目地址：ReadViewdemo地址：apk地址 MarkDownView支持MarkDown语法的渲染器,基于WebView的MarkDown渲染器,支持标准化的MarkDown语法,调用接口和CodeView保持一致使用简便项目地址：ReadViewdemo地址：apk地址 VerTextView竖行排版的TextView:支持竖行排版，添加了下划线功能，开启简便，下划线粗细、颜色、间距均可自定义，接口调用方式与TextView相似，使用简便。项目地址：ReadViewdemo地址：apk地址 GHDownload下载框架支持单线程和多线程断点下载，简单易用。项目地址：GHDownload 第三部分 优秀项目主要介绍那些 Android 还不错的完整项目，目前包含的项目主要依据是项目有意思或项目分层规范比较好。 一、系统及平台 Linux项目地址：https://github.com/torvalds/linux Android项目地址：https://android.googlesource.com/ 二、项目 ZXing二维码扫描工具项目地址：https://github.com/zxing/zxing 或 https://code.google.com/p/zxing/APK 地址：https://play.google.com/store/apps/details?id=com.google.zxing.client.android其他：现在市面上很多应用的二维码扫描功能都是从这个修改而来 photup编辑机批量上传照片到 facebook 上项目地址：https://github.com/chrisbanes/photupAPK 地址：https://play.google.com/store/apps/details?id=uk.co.senab.photup其他：代码分包合理，很棒。不过这个项目依赖的开源项目比较多，比较难编译 github-androidGithub 的 Android 客户端项目项目地址：https://github.com/github/androidAPK 地址：https://play.google.com/store/apps/details?id=com.github.mobile NotesMIUI 便签项目地址：https://github.com/MiCode/NotesAPK 地址：https://github.com/Trinea/TrineaDownload/blob/master/miui-note-demo.apk?raw=true其他：项目分包比较合理，相比较 miui 的文件管理器 https://github.com/MiCode/FileExplorer 代码规范较好得多 weicuiyuan四次元-新浪微博客户端项目地址：https://github.com/qii/weiciyuanAPK 地址：https://play.google.com/store/apps/details?id=org.qii.weiciyuan Douya豆芽——Material Design 的豆瓣客户端项目地址：https://github.com/DreaminginCodeZH/Douya gnucash-android一个记账理财软件项目地址：https://github.com/codinguser/gnucash-androidAPK 地址：http://play.google.com/store/apps/details?id=org.gnucash.android AntennaPod支持 rss 订阅、音乐订阅项目地址：https://github.com/danieloeh/AntennaPodAPK 地址：https://play.google.com/store/apps/details?id=de.danoeh.antennapod ChaseWhisplyProject打鬼游戏项目地址：https://github.com/tvbarthel/ChaseWhisplyProjectAPK 地址：https://play.google.com/store/apps/details?id=fr.tvbarthel.games.chasewhisply Tweet Lanes功能完整的 Twitter 客户端项目地址：https://github.com/chrislacy/TweetLanesAPK 地址：https://play.google.com/store/apps/details?id=com.tweetlanes.android Financius简单易用的记账程序项目地址：https://github.com/mvarnagiris/FinanciusAPK 地址：https://play.google.com/store/apps/details?id=com.code44.finance todo.txt-androidtodo.txt 的官方 Android 应用项目地址：https://github.com/ginatrapani/todo.txt-androidAPK 地址：https://play.google.com/store/apps/details?id=com.todotxt.todotxttouch simpletask基于 todo.txt 官方应用的另一个客户端项目地址：https://github.com/mpcjanssen/simpletask-androidAPK 地址：https://play.google.com/store/apps/details?id=nl.mpcjanssen.todotxtholo Muzei Live Wallpaper定时更换桌面精美壁纸项目地址：https://github.com/romannurik/muzeiAPK 地址：https://play.google.com/store/apps/details?id=net.nurik.roman.muzei Scanbook扫描搜索查询图书信息项目地址：https://github.com/JayFang1993/ScanBookAPK 地址：http://www.wandoujia.com/apps/com.scanbook ioschedThe Google I/O 2014 Android App项目地址：https://github.com/google/ioschedAPK 地址：https://play.google.com/store/apps/details?id=com.google.samples.apps.iosched 第四部分 开发工具及测试工具主要介绍和 Android 开发工具和测试工具相关的开源项目。 一、开发效率工具 Parceler通过注解及工具类自动完成实体类 Parcelable 及值传递项目地址：https://github.com/johncarl81/parceler Json2Java根据 JSon 数据自动生成对应的 Java 实体类，还支持 Parcel、Gson Annotations 对应代码自动生成。期待后续的提取父类以及多 url 构建整个工程的功能项目地址：https://github.com/jonfhancock/JsonToJava在线演示：http://jsontojava.appspot.com/ IntelliJ Plugin for Android Parcelable boilerplate code generationAndroid studio 插件，生成 Parcelable 代码项目地址：https://github.com/mcharmas/android-parcelable-intellij-plugin Android Holo Colors IntelliJ PluginAndroid studio 插件，生成 holo 样式 9 patch 图片项目地址：https://github.com/jeromevdl/android-holo-colors-idea-plugin Android Drawable Factory用于生成各个分辨率的图片项目地址：https://github.com/tizionario/AndroidDrawableFactory SelectorChapek for AndroidAndroid Studio 插件，可根据固定文件名格式资源自动生成 drawable selectors xml 文件。项目地址：https://github.com/inmite/android-selector-chapek Android Action Bar Style GeneratorAndroid ActionBar 样式生成器，可在线选择 ActionBar 样式自动生成所需要的图片资源及 xml 文件项目地址：https://github.com/jgilfelt/android-actionbarstylegenerator在线演示：http://jgilfelt.github.io/android-actionbarstylegenerator/ ButterKnifeZelezny用于快速生成ButterKnifeView 注入代码的 Android Studio/IDEA 插件项目地址：https://github.com/inmite/android-butterknife-zelezny RoboCoP利用 Gradle task 根据固定格式的 json 文件生成 ContentProvider项目地址：https://github.com/mediarain/RoboCoP appiconsizes用于生成各个分辨率的图片项目地址：http://www.appiconsizes.com/ AndroidUtiles集合了所有常用的安卓工具类项目地址：https://github.com/l123456789jy/Lazy Gradle Retrolambda PluginRetrolambda是将 Java8 的 Lambdas 应用于 Java7 的工具，本项目是 Gradle 插件，通过 Retrolambda 从而使 Java 或 Android 项目用 Java8 的 Lambdas 编写，将编译后的字节码转换为 Java6 和 7 的字节码从而正常运行项目地址：https://github.com/evant/gradle-retrolambda Dagger IntelliJ Plugindagger 的 intellij 插件项目地址：https://github.com/square/dagger-intellij-plugin Android Gen Drawable Maven plugin在编译时根据 SVG 描述文件生成不同分辨率的 jpg、png 或点 9 图片项目地址：https://github.com/avianey/androidgendrawable-maven-plugin Android Asset Studio各种 Android 资源自动生成器，包括启动图标、ActionBar 图标、通知栏图标、点 9 等项目地址：https://github.com/romannurik/AndroidAssetStudio在线演示：http://romannurik.github.io/AndroidAssetStudio/ jsonschema2pojo根据 Json 内容生成 java 对象，支持 jackjson 和 gson项目地址：https://github.com/joelittlejohn/jsonschema2pojo在线演示：http://www.jsonschema2pojo.org/ GsonFormat根据 JSONObject 格式的字符串,自动生成实体类参数的 Android Studio/IntelliJ IDEA 插件项目地址：https://github.com/zzz40500/GsonFormat 9-Patch-Resizer自动生成 png 及点 9 图片的不同分辨率版本项目地址：https://github.com/redwarp/9-Patch-Resizer AndroidLocalizationer可用于将项目中的 string 资源自动翻译为其他语言的 Android Studio/IntelliJ IDEA 插件项目地址：https://github.com/westlinkin/AndroidLocalizationer Material Palette一个将现有的色彩方案组合成材料设计的调色板方案，提供下载。选取两个主要色彩后便可以提供下载，提供下载的格式可以是 android 的资源 xml 文件，以色彩的方式提供，也可以是 CSS、SVG、PNG 等常见格式文件。项目地址：http://www.materialpalette.com/ 二、开发自测相关 Quality Tools for AndroidAndroid 测试及自测工具集合和示例项目地址：https://github.com/stephanenicolas/Quality-Tools-for-Android android-test-kitGoogle 的 Android 测试工具包括 GoogleInstrumentationTestRunner(增强版的 InstrumentationTestRunner)和 Espresso(用于快速写出可靠测试用例的 API)项目地址：https://code.google.com/p/android-test-kit/文档介绍：https://code.google.com/p/android-test-kit/w/list robolectric测试用例编写框架项目地址：https://github.com/robolectric/robolectricDemo 地址：https://github.com/robolectric/robolectricsample文档介绍：http://robolectric.org/特点：(1). 不需要模拟器在一般 JVM 就可以运行测试用例(2). 能完成在真机上的大部分测试包括感应器其他的测试用例及相关模块 Mock 可见：android-mock, mockito, easy-mock Android FEST提供一些列方便的断言，可用于提高编写 Android 自测代码效率项目地址：https://github.com/square/fest-android BoundBox可用于测试类各种访问权限的属性、方法。实际是通过 BoundBox 这个 annotation 生成一个属性和方法都是 public 权限的中间类并对此类进行测试完成的项目地址：https://github.com/stephanenicolas/boundbox Hugo用于打印函数信息及执行时间的工具，仅在 debug 模式生效项目地址：https://github.com/JakeWharton/hugo scalpel在应用下面添加一层用于界面调试项目地址：https://github.com/JakeWharton/scalpel Android Screenshot libraryAndroid 截图工具类，用于在持续集成时截图项目地址：https://github.com/rtyley/android-screenshot-lib sonar-android-lint-plugin将 android lint 的错误在 sonar 中展现项目地址：https://github.com/SonarCommunity/sonar-android 三、测试工具 Spoon可用于 android 不同机型设备自动化测试，能将应用 apk 和测试 apk 运行在不同机器上并生成相应测试报告。项目地址：https://github.com/square/spoon Tencent APTAPT 是腾讯开源的一个 Android 平台高效性能测试组件，提供丰富实用的功能，适用于开发自测、定位性能瓶颈；测试人员完成性能基准测试、竞品对比测试项目地址：https://github.com/stormzhang/APT Emmagee网易开源的性能测试工具，包括 CPU、内存、网络流量、启动时间、电池状态等项目地址：https://github.com/NetEase/Emmagee Android py-uiautomatorpy-uiautomator 是一个对 Android uiautomator 用 python 进行封装的测试框架.项目地址：https://github.com/xiaocong/uiautomator Augmented Traffic Control模拟网络状况，包括带宽、时延抖动、丢包率、错包率、包重排率项目地址：https://github.com/facebook/augmented-traffic-control stetho强大的 Android Debug 工具。支持网络请求监控以及数据库查看，可以和 Chrome DevTools 结合或者命令行模式。项目地址：https://github.com/facebook/stetho 四、开发及编译环境 Buckfacebook 开源的 Android 编译工具，效率是 ant 的两倍。主要优点在于：(1) 加快编译速度，通过并行利用多核 cpu 和跟踪不变资源减少增量编译时间实现(2) 可以在编译系统中生成编译规则而无须另外的系统生成编译规则文件(3) 编译同时可生成单元测试结果(4) 既可用于 IDE 编译也可用于持续集成编译(5) facebook 持续优化中项目地址：https://github.com/facebook/buck Android Maven PluginAndroid Maven 插件，可用于对 android 三方依赖进行管理。在 J2EE 开发中，maven 是非常成熟的依赖库管理工具，可统一管理依赖库。项目地址：https://github.com/jayway/maven-android-plugin umeng-muti-channel-build-tool渠道打包工具项目地址：https://github.com/umeng/umeng-muti-channel-build-tool另可参见 Google 的构建系统 Gradle：http://tools.android.com/tech-docs/new-build-system/user-guide Genymotion目前最好用最快的 android 模拟器项目地址：http://www.genymotion.com/Android studio 集成控件： http://plugins.jetbrains.com/plugin/7269?pr=ideaCyril Mottier 推荐：http://cyrilmottier.com/2013/06/27/a-productive-android-development-environment/ gradle-mvn-push方便的将 Gradle 的 Artifacts 上传到 Maven 仓库项目地址：https://github.com/chrisbanes/gradle-mvn-push文档介绍：https://github.com/chrisbanes/gradle-mvn-push#usage Android Emulator Plugin for JenkinsAndroid 模拟器 jenkins 插件，用于 Jenkins 做持续集成时跑模拟器测试项目地址：https://github.com/jenkinsci/android-emulator-plugin Android Maven Plugin管理应用所需要的依赖库。包括的构建工具有 Maven、Gradle、ant、sbt项目地址：https://github.com/mosabua/maven-android-sdk-deployer SDK Manager Plugin下载和管理 Android SDK 的 Gradle 插件项目地址：https://github.com/JakeWharton/sdk-manager-plugin Gradle Protobuf Plugin将.proto 文件转换成 Java 文件的 gradle 插件项目地址：https://github.com/andrewkroh/gradle-protobuf-plugin ChromeADBChrome 的 Adb 插件，当登录后，能看到所有连接的设备并操作，可以看应用、进程、内存及磁盘使用情况等项目地址：https://github.com/importre/chromeadb 五、其他 GTAPP的随身调试平台，它是直接运行在手机上的“集成调试环境”(IDTE, Integrated Debug Environment)。项目地址：https://github.com/TencentOpen/GT文档介绍：http://gt.qq.com/docs.html ViewServer允许 app 运行在任何手机上都可以用 HierarchyViewer 查看项目地址：https://github.com/romainguy/ViewServer GridWichterle for Android在整个系统上显示一个 grid，用来帮助查看应用布局及使得布局更美观，可设置 grid 网格大小和颜色，android 推荐 48dp 和 8dp，可见 Android Design Guidelines – Metrics and Grids，比起 hierarchyviewer 相差甚远，不过偶尔可用来作为布局查看工具。项目地址：https://github.com/inmite/android-grid-wichterleDemo 地址：https://play.google.com/store/apps/details?id=eu.inmite.android.gridwichterle Catlog手机端 log 查看工具，支持不同颜色显示、关键字过滤、级别过滤、进程 id 过滤、录制功能等项目地址：https://github.com/nolanlawson/Catlog在线演示：https://play.google.com/store/apps/details?id=com.nolanlawson.logcat PID Cat根据 package 查看 logcat 日志项目地址：https://github.com/JakeWharton/pidcat ACRA应用崩溃信息日志上报到 GoogleDoc 工具，网页版展现结果三方开源地址 https://github.com/BenoitDuffez/crashreportsviewer项目地址：https://github.com/ACRA/acra文档介绍：https://github.com/ACRA/acra/wiki/BasicSetup Crashlytics提供丰富的应用崩溃信息日志收集轻量级，丰富，可自定义应用崩溃信息收集器，附有邮件通知项目地址：http://www.crashlytics.com/集成插件：Android Studio, Eclipse and IntelliJ Android Resource Navigatorchrome 插件，可以方便的查看 github 上 android 源码工程的 styles.xml 和 themes.xml。主要功能：(1) 快速打开 android styles.xml themes.xml(2) 方便在资源间跳转。styles.xml themes.xml 文件中资源链接跳转，可以方便跳转到某个资源(3) 方便查找某个 style 和 theme。chrome 地址栏输入 arn+tab+搜索内容回车即可(4) 自动下载不同分辨率下的 drawable(5) 通过映射查找那些不是按照固定命名规则命名的 style 和 theme项目地址：https://github.com/jgilfelt/android-resource-navigator在线演示：https://chrome.google.com/webstore/detail/android-resource-navigato/agoomkionjjbejegcejiefodgbckeebo?hl=en&amp;gl=GB android-resource-remover根据 lint 的提示删除项目中无用的资源，减少包的大小项目地址：https://github.com/KeepSafe/android-resource-remover Telescope通过手势截图以特定主题发送到特定邮箱地址报告 Bug项目地址：https://github.com/mattprecious/telescope Complete Android Fragment &amp; Activity Lifecycle完整的 Android Fragment/Activity 生命周期图项目地址：https://github.com/xxv/android-lifecycle Bugsnag Notifier for Android通过Thread.UncaughtExceptionHandler捕获应用未处理的异常崩溃 Bug 并用 Notification 展示同时上传到后台服务器项目地址：https://github.com/bugsnag/bugsnag-android文档介绍：https://github.com/bugsnag/bugsnag-android#installation--setup Material Design IconsGoogle Material Design 规范中的 Icon项目地址：https://github.com/google/material-design-icons scrollscreenshotAndroid 滚动屏幕自动截图 jar 包，支持纵向、横向滚动截屏拼接项目地址：https://github.com/PGSSoft/scrollscreenshot droidicon1600+的海量 Icon，包括 750+的 Material Design icons项目地址：https://github.com/theDazzler/droidicon leakcanaryAndroid 内存泄露检测工具，集成方便，出现泄露后报告直观项目地址：https://github.com/square/leakcanary CacheUtilsLibrary将任何Java Object类型的数据序列化后写入缓存文件，将来使用时读取缓存文件并反序列化成对应Java Object的库项目地址：https://github.com/westlinkin/CacheUtilsLibrary BlockCanaryBlockCanary是一个Android平台的一个非侵入式的性能监控组件，应用只需要实现一个抽象类，提供一些该组件需要的上下文环境，就可以在平时使用应用的时候检测主线程上的各种卡慢问题，并通过组件提供的各种信息分析出原因并进行修复。项目地址: https://github.com/moduth/blockcanary 第五部分主要介绍那些乐于分享并且有一些很不错的开源项目的个人和组织。Follow 大神，深挖大神的项目和 following，你会发现很多。 一、个人 JakeWharton就职于 Square，绝对牛逼的大神，项目主要集中在 Android 版本兼容，ViewPager 及开发工具上Github 地址：https://github.com/JakeWharton代表作：ActionBarSherlock，Android-ViewPagerIndicator，Nine Old Androids，SwipeToDismissNOA，hugo，butterknife，Android-DirectionalViewPager, scalpelpidcat 另外对 square 及其他开源项目有很多贡献主页：http://jakewharton.com/ Chris BanesGithub 地址：https://github.com/chrisbanes代表作：ActionBar-PullToRefresh，PhotoView，Android-BitmapCache，Android-PullToRefresh主页：http://chris.banes.me/ Koushik Dutta就职于 ClockworkModGithub 地址：https://github.com/koush代表作：Superuser，AndroidAsync，UrlImageViewHelper，ion, 另外对 https://github.com/CyanogenMod 的开源项目有很多贡献主页：http://koush.com/ Simon VigGithub 地址：https://github.com/SimonVT代表作：android-menudrawer，MessageBar主页：http://simonvt.net/ Manuel PeinadoGithub 地址：https://github.com/ManuelPeinado代表作：FadingActionBar，GlassActionBar，RefreshActionItem，QuickReturnHeader Emil Sj?landerGithub 地址：https://github.com/emilsjolander代表作：StickyListHeaders，sprinkles，android-FlipView主页：http://emilsjolander.se/ greenrobotGithub 地址：https://github.com/greenrobot代表作：greenDAO，EventBus主页：http://greenrobot.de/ Jeff GilfeltGithub 地址：https://github.com/jgilfelt代表作：android-mapviewballoons，android-viewbadger，android-actionbarstylegenerator，android-sqlite-asset-helper主页：http://jeffgilfelt.com Romain GuyAndroid team 成员(2013.10 已离开 Android team，仍在 Google)Github 地址：https://github.com/romainguy代表作：ViewServer主页：http://www.curious-creature.org/category/android/個人攝影作品：http://www.flickr.com/photos/romainguy sephiroth74就职于 Aviary.comGithub 地址：https://github.com/sephiroth74代表作：ImageViewZoom，HorizontalVariableListView，AndroidWheel，purePDF主页：http://www.sephiroth.it/ Cyril MottierGoogle 开发者专家认证，发布一些 Android 技巧及文章Github 地址：https://github.com/cyrilmottier代表作：GreenDroid，Polaris主页：http://cyrilmottier.com/ 二、组织 Square有态度有良心的企业，很多不错的分享Github 地址：https://github.com/square代表作：okhttp、fest-android，android-times-square、picasso、dagger、spoon 等等主页：http://square.github.io/ Inmite s.r.o.Github 地址：https://github.com/inmite代表作：android-styled-dialogs，android-grid-wichterle，android-selector-chapek主页：http://www.inmite.eu/ 三、博客部分国外著名 Android 开发者信息 注意 本文转自——Trinea 汇总的开源项目欢迎大家关注他的微信公众号：codekk。二维码如下： 专注于 Android 开源分享、源码解析、框架设计、Android 内推。 他的网站：www.codekk.com 关于trinea，欢迎关注 微博：Trinea&nbsp;&nbsp;&nbsp;&nbsp;主页：trinea.cn 推荐 Android 开源项目源码解析(Volley、UIL、Dagger、EventBus、插件化库等分析) Android 职位内部推荐(阿里、腾讯、百度、京东、滴滴、美团、58、华为、网易、魅族等)]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开源项目汇总</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu-15.04安装jdk]]></title>
    <url>%2F2016%2F03%2F24%2Fubuntu-15.04-install-jdk.html</url>
    <content type="text"><![CDATA[前言最近在Linux上学习Python，而PyCharm需要java环境的支持，本文记录了在Ubuntu-15.04上安装jdk1.8版本的步骤与遇到的问题。 方式一 Ubuntu安装JDK 系统版本：Ubuntu 15.04 x64 JDK版本：jdk-8u60-linux-x64 步骤详解 查看系统位数，输入以下命令即可 getconf LONG_BIT 下载对应的JDK文件，我这里下载的是jdk-8u60-linux-64.tar.gz 创建目录作为JDK的安装目录，这里选择安装位置为:/usr/java/ sudo mkdir /usr/java 解压文件带/usr/java/目录下，文件下载的位置是在download目录下的 cd download sudo tar zxvf jdk-8u60-linux-x64.tar.gz -C /usr/java/ 进入到/usr/java/目录，给文件夹改名（这一步并非必须，但是为了配置环境变量方便，建议这样做） cd /usr/java/ sudo mv jdk1.8.0_60 jdk_8u60 配置系统环境变量 sudo gedit /etc/environment 加入以下的内容 PATH=&quot;:$JAVA_HOME/bin&quot; export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib export JAVA_HOME=/usr/java/jdk_8u60 修改完成后保存并关闭，输入以下命令使环境变量生效 source /etc/environment 使用echo命令检查环境变量的配置情况 echo $JAVA_HOME 输出 /usr/java/jdk_8u60 echo $CLASSPATH 输出 .:/usr/java/jdk_8u60/lib:/usr/java/jdk_8u60/jre/lib echo $PATH 输出 /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/java/jdk_8u60/bin 查看安装版本: java -versionPicked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jarjava version “1.8.0_60”Java(TM) SE Runtime Environment (build 1.8.0_60-b27)Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode) 设置所有用户的环境变量，不然重启之后依然找不到java命令 sudo gedit /etc/profile 添加以下内容即可(注意替换路径): #set Java environment JAVA_HOME=/usr/java/jdk_8u60 export JRE_HOME=/usr/java/jdk_8u60/jre export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 重启电脑，使配置生效。 结束了？没有！！！ 如果使用Myeclipse等IDE的或者安装了多个jdk版本的请继续向下看↓↓↓ 修改默认的JDK(注意替换路径)sudo update-alternatives --install &quot;/usr/bin/java&quot; &quot;java&quot; &quot;/usr/java/jdk_8u60/bin/java&quot; 300sudo update-alternatives --install &quot;/usr/bin/javac&quot; &quot;javac&quot; &quot;/usr/java/jdk_8u60/bin/javac&quot; 300sudo update-alternatives --install &quot;/usr/bin/javaws&quot; &quot;javaws&quot; &quot;/usr/java/jdk_8u60/bin/javaws&quot; 300 以上是为不同的命令建立链接，如果存在多个JDK只需要替换路径重新执行一遍即可建立链接，执行以下命令选择链接，如果每个选项只建立了一个链接，系统不会提供选项，如果存在多个链接，请根据需要选择不同选项 sudo update-alternatives --config javasudo update-alternatives --config javacsudo update-alternatives --config javaws 方式二 如果在 Ubuntu 软件中心安装过 OpenJDK，使用如下命令将其删除：sudo apt-get purge openjdk* 添加源和更新sudo add-apt-repository ppa:webupd8team/javasudo apt-get update 安装java 8sudo apt-get install Oracle-java8-installer 安装时常见错误处理 安装时VirtualBox异常退出，重进时报如下错误： dpkg 被中断,您必须手工运行 sudo dpkg –configure -a 解决此问题。 解决方法： sudo rm /var/lib/dpkg/updates/* sudo apt-get update sudo apt-get upgrade 运行java -version出现如下错误: Picked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jar。 解决方法： sudo rm /usr/share/upstart/sessions/jayatana.conf sudo add-apt-repository ppa:danjaredg/jayatana sudo apt-get update sudo apt-get install jayatana 再正常运行正常： xkcoding@Yangkai:~$ ~/workspace$ java -version java version &quot;1.8.0_60&quot; Java(TM) SE Runtime Environment (build 1.8.0_60-b27) Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>JDK</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[helloworld]]></title>
    <url>%2F2016%2F03%2F21%2Fhelloworld.html</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>HelloWorld</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>HelloWorld</tag>
      </tags>
  </entry>
</search>