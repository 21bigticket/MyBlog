{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/RecentPlaces.lnk","path":"RecentPlaces.lnk","modified":0,"renderable":0},{"_id":"source/favicon.png","path":"favicon.png","modified":0,"renderable":0},{"_id":"source/resources/alipay-reward-image.png","path":"resources/alipay-reward-image.png","modified":0,"renderable":0},{"_id":"source/resources/android-svn-attention-20160403130946.png","path":"resources/android-svn-attention-20160403130946.png","modified":0,"renderable":0},{"_id":"source/resources/greenvpn.gif","path":"resources/greenvpn.gif","modified":0,"renderable":0},{"_id":"source/resources/volley-demo-20160326012642.png","path":"resources/volley-demo-20160326012642.png","modified":0,"renderable":0},{"_id":"source/resources/wechat-reward-image.png","path":"resources/wechat-reward-image.png","modified":0,"renderable":0},{"_id":"source/resources/coding-standards-1.png","path":"resources/coding-standards-1.png","modified":0,"renderable":0},{"_id":"source/resources/coding-standards-2.2.png","path":"resources/coding-standards-2.2.png","modified":0,"renderable":0},{"_id":"source/resources/coding-standards-2.1.png","path":"resources/coding-standards-2.1.png","modified":0,"renderable":0},{"_id":"source/resources/coding-standards-3.png","path":"resources/coding-standards-3.png","modified":0,"renderable":0},{"_id":"source/resources/eclipse-tips-20151107221921217.png","path":"resources/eclipse-tips-20151107221921217.png","modified":0,"renderable":0},{"_id":"source/resources/iov-1.png","path":"resources/iov-1.png","modified":0,"renderable":0},{"_id":"source/resources/iov-3.png","path":"resources/iov-3.png","modified":0,"renderable":0},{"_id":"source/resources/iov-4.png","path":"resources/iov-4.png","modified":0,"renderable":0},{"_id":"source/resources/iov-5.png","path":"resources/iov-5.png","modified":0,"renderable":0},{"_id":"source/resources/iov-2.png","path":"resources/iov-2.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"70122cc4eb4240eca5414fa90c22ca48e297f409","modified":1481767521071},{"_id":"source/RecentPlaces.lnk","hash":"dd6573fab586cdd35010f43fa5570efc7c9fc854","modified":1473126900608},{"_id":"source/favicon.png","hash":"c92b43e2292f6f98c200628d1fa1ff2522f24864","modified":1473126900787},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1481766348053},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1481766348055},{"_id":"themes/next/.gitignore","hash":"de5b9b9e5b313b4a86e805b02f334d35c87bfe56","modified":1481766348069},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1481766348072},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1481766348075},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1481766348079},{"_id":"themes/next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1481766348081},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1481766348083},{"_id":"themes/next/_config.yml","hash":"8f42b9424ab18ebb92c5579e457a5195983426c5","modified":1481622472995},{"_id":"themes/next/bower.json","hash":"bd70cf5988bbfc8cbcf13adae659151a55466524","modified":1481766348090},{"_id":"themes/next/gulpfile.coffee","hash":"e549561461642051d195550ec49d793e44ee22a0","modified":1481766348093},{"_id":"themes/next/package.json","hash":"48e2352f8e41f2b6bbf55254d10f3192ee206d5a","modified":1481766348345},{"_id":"source/404/index.md","hash":"66c9ba188efe422bcea0a6f1daab71953f473ccd","modified":1473126900607},{"_id":"source/_posts/2016-03-21.helloworld.md","hash":"a3531a3a75bfd9b97af9e5c4d4bd73dcafb438db","modified":1473126900609},{"_id":"source/_posts/2016-03-24.ubuntu-15.04-install-jdk.md","hash":"6500b39aa7fa4f8f375ff98c12d9f25f55c14eb1","modified":1473126900610},{"_id":"source/_posts/2016-03-26.first-use-volley-demo.md","hash":"4dfe969e1497d1624541885a2ab68456ace80274","modified":1473126900612},{"_id":"source/_posts/2016-03-27.eclipse-tips-variable.md","hash":"7c36925e9fc87b5a1adec4823acf0d71be73bf02","modified":1473126900613},{"_id":"source/_posts/2016-03-28.lanqiao-exam.md","hash":"71799fd52a75a50f9e77077f3051266663c16596","modified":1473126900613},{"_id":"source/_posts/2016-04-03.android-svn-attention.md","hash":"50a879c49617bbbb1731caa665dd7c74a86a38ec","modified":1473126900614},{"_id":"source/_posts/2016-04-05.coding-standards.md","hash":"a024ff25aae16e334be14074209eceb8f7dcc53b","modified":1473126900614},{"_id":"source/_posts/2016-08-31.server-install-centos6.md","hash":"9409173779ceae7e1829092b67213fd1dc31210d","modified":1473404532720},{"_id":"source/_posts/2016-12-13.elasticsearch-get-start.md","hash":"dabe7122f77c6d51b62bb097108529e3b65089a1","modified":1481685151966},{"_id":"source/about/index.md","hash":"8533a1b23e2f4e69c25975e8da1b28de6651325a","modified":1473126900618},{"_id":"source/categories/index.md","hash":"e24e174f7a4d065243732368d969f5cf9b42fc79","modified":1481769033367},{"_id":"source/resources/alipay-reward-image.png","hash":"69804a3cab7198c09c8e08564bf6abc43f606a25","modified":1481791685727},{"_id":"source/resources/android-svn-attention-20160403130946.png","hash":"418f523a2f12955fe0f3e27ea80f655a28a6f88a","modified":1481767521412},{"_id":"source/resources/greenvpn.gif","hash":"bab361440f0c5c019c0e6e96c6415860101e2ec2","modified":1481767521436},{"_id":"source/resources/volley-demo-20160326012642.png","hash":"771756eaf6a88b547cde29ce18bf09c04912471d","modified":1481767521465},{"_id":"source/resources/wechat-reward-image.png","hash":"9f04dffed817d26b6a877eb66316e91061b3370f","modified":1481791714687},{"_id":"source/tags/index.md","hash":"71b27beb07dcbf14030101ac7f37ae22dfee0177","modified":1481768880579},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1481766348004},{"_id":"themes/next/.git/config","hash":"340cff4364d9733a32042fdb93097c334a781c93","modified":1481766348030},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1481765819811},{"_id":"themes/next/.git/index","hash":"66268e7919a425a00adfca108078dc6b2cdb5c01","modified":1481766421932},{"_id":"themes/next/.git/packed-refs","hash":"80908fda4226cdf164a41c85c7fbea49cb816125","modified":1481766347951},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"2692e36cc35b1594530981e7727771f601720a43","modified":1481766348065},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1481766348061},{"_id":"themes/next/languages/de.yml","hash":"db6a9d669f4b6282cda6c0a2d4e03d3e308a4846","modified":1481766348096},{"_id":"themes/next/languages/default.yml","hash":"fe00529a94bb2550194a31d178f5810b45014ab6","modified":1481766348100},{"_id":"themes/next/languages/en.yml","hash":"d02acdce503c86fbb01920ad22d31ec56fc285f1","modified":1481766348104},{"_id":"themes/next/languages/fr-FR.yml","hash":"91cf55b9d75879e72c8008d2659fe2ea993a4cca","modified":1481766348107},{"_id":"themes/next/languages/id.yml","hash":"d8b9dc017da0be7f71fda1cacd8064cbc38963b9","modified":1481766348107},{"_id":"themes/next/languages/ja.yml","hash":"bc89436a2a015ef72f43f265e56e37d94e73c0cd","modified":1481766348112},{"_id":"themes/next/languages/ko.yml","hash":"c59676f2af80c3c594c34c4a0fcbf65fd8864ff3","modified":1481766348116},{"_id":"themes/next/languages/pt-BR.yml","hash":"4b91f96b07e05705b28964df7460466c9b522e2c","modified":1481766348124},{"_id":"themes/next/languages/pt.yml","hash":"f364905121a816c9797acce07c0a4f248965b29a","modified":1481766348127},{"_id":"themes/next/languages/ru.yml","hash":"402e676252ab1fc4522257a578738cb9536eb077","modified":1481766348142},{"_id":"themes/next/languages/zh-Hans.yml","hash":"439c16c744b1596f24d9e0b4e230c4d3c93b7d85","modified":1481766348146},{"_id":"themes/next/languages/zh-hk.yml","hash":"a59f3f3114f5eb4d170a76da4359307e8f5159a7","modified":1481766348151},{"_id":"themes/next/languages/zh-tw.yml","hash":"18da1324d2212faca9a6e5e6ce98b419c86d4b0c","modified":1481766348155},{"_id":"themes/next/layout/_layout.swig","hash":"b4ef30f7da073bf2a9052186f76e0e080de1c794","modified":1481766348184},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1481766348336},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1481766348336},{"_id":"themes/next/layout/page.swig","hash":"2a13804aa186f6062738d136e430870c53789bf4","modified":1481766348337},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1481766348337},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1481766348341},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1481766348345},{"_id":"themes/next/layout/schedule.swig","hash":"595013860078799d455af4965b3a7c5c4fd3923c","modified":1481766348344},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1481766348346},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1481766348680},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1481766348679},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1481766348680},{"_id":"source/resources/coding-standards-1.png","hash":"3c177f7731ee427046e4945050243c2602211b5e","modified":1481767521416},{"_id":"source/resources/coding-standards-2.2.png","hash":"7c4116dab84985f42b21b89d86290490661a85b7","modified":1481767521426},{"_id":"source/resources/coding-standards-2.1.png","hash":"a07a4a5b6526459aa46e3258e63748f8c329dd50","modified":1481767521421},{"_id":"source/resources/coding-standards-3.png","hash":"2e88043e2b1589bfdcc797984c64af9ccbd48670","modified":1481767521431},{"_id":"source/resources/eclipse-tips-20151107221921217.png","hash":"ea374fb4a25ccc451d62cd5f2833415574ed34b8","modified":1481767521436},{"_id":"source/resources/iov-1.png","hash":"2bd45837b8ca10f00f16bc44f3a1a45d1ae2494f","modified":1481767521441},{"_id":"source/resources/iov-3.png","hash":"9f70c52de5a52d8ede5d69a8dcdd75c0a08c6715","modified":1481767521450},{"_id":"source/resources/iov-4.png","hash":"81de480993f1cc268e037294b9686b37010b2720","modified":1481767521456},{"_id":"source/resources/iov-5.png","hash":"b3a1349c2dccd31f518c432bf2b51f645dc82b75","modified":1481767521462},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481766348575},{"_id":"source/_posts/2016-03-25.android-open-project.md","hash":"1947babaab2ad49f6f2aa1e6d4c3aabb18447ff1","modified":1473401414373},{"_id":"source/resources/iov-2.png","hash":"24df15a48ab9f3ea61945870dec8c0ad892c4d65","modified":1481767521445},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1481765819837},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1481765819840},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1481765819844},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1481765819847},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1481765819851},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1481765819852},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1481765819904},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1481765819853},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1481765819906},{"_id":"themes/next/.git/logs/HEAD","hash":"df5897760f4a0fc8f5bc1452858a99b2c1bd3d04","modified":1481766348017},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1481765819911},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1481766348180},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1481766348189},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1481766348180},{"_id":"themes/next/layout/_macro/post.swig","hash":"abfc88f34f2c0ae52229c4ffa577b00ad7cecdc6","modified":1481766348194},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1481766348198},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"3b261c758a7673d91c116367be1bb5223403f9e0","modified":1481766348202},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1481766348207},{"_id":"themes/next/layout/_partials/comments.swig","hash":"a5ffadb516522f85c052b290b94c0e4af3002644","modified":1481766348212},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1481766348216},{"_id":"themes/next/layout/_partials/footer.swig","hash":"683616f4a80796051e2346d80acf838a589450b0","modified":1481766348220},{"_id":"themes/next/layout/_partials/head.swig","hash":"740684ef2b6e56183529387882042612e904bc8d","modified":1481766348220},{"_id":"themes/next/layout/_partials/header.swig","hash":"d9b10a92fdccd57a0c0d6773831f9c1b0f1bb449","modified":1481766348234},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"dfbb6e9692333166aa78231ad12b2a40c153cbcb","modified":1481766348239},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1481766348241},{"_id":"themes/next/layout/_partials/search.swig","hash":"952b7b8d9ce2c81d4002a9dc2331f1e710f99616","modified":1481766348245},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1481766348281},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1481766348284},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1481766348284},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"c9d45628330ce8bf5fbe71c9f131c7d75334c1c4","modified":1481766348335},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1481766348574},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1481766348347},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1481766348348},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1481766348351},{"_id":"themes/next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1481766348352},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1481766348576},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1481766348578},{"_id":"themes/next/source/images/avatar.png","hash":"3eb50b625afd10829ee715e65f5b194d3743e5cc","modified":1473126900786},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1481766348578},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1481766348581},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1481766348586},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1481766348586},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1481766348587},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1481766348587},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1481766348588},{"_id":"themes/next/source/images/favicon.png","hash":"c92b43e2292f6f98c200628d1fa1ff2522f24864","modified":1473126900787},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1481766348588},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1481766348588},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1481766348589},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1481766348589},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1481766348589},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481766348295},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481766348295},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481766348571},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481766348573},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481766348522},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481766348522},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481766348523},{"_id":"themes/next/.git/refs/heads/master","hash":"93d0f27eb58dcc033accd3711a6d88c269c8e1e8","modified":1481766348010},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1481766348170},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"bb2c3a926bb7f8fea54d424882b25d93dfde7ae6","modified":1481766348175},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1481766348226},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1481766348252},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1481766348230},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1481766348256},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1481766348257},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1481766348260},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1481766348264},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1481766348267},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1481766348271},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1481766348290},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"188423f7df0eb8c99a03cb6741384415651c4665","modified":1481766348307},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"9c8f4b2a29741d96adf0b8fef52ae7f4396f27f5","modified":1481766348320},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1481766348329},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1481766348331},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"f592adff22628b271ec9657b080cf6b9cc200615","modified":1481766348329},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1481766348334},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1481766348335},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1481766348303},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1481766348521},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1481766348571},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"d7826b48a20162835450495db534d353ac52e476","modified":1481766348572},{"_id":"themes/next/source/css/_variables/base.styl","hash":"4c4298a7011841d9ee2aec5bd192df5730b08517","modified":1481766348573},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1481766348522},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1481766348523},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1481766348590},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"84bdc8a4fe127849a5c99bdefe1d0b65ee1a4a0a","modified":1481766348591},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1481766348591},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1481766348592},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1481766348593},{"_id":"themes/next/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1481766348595},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1481766348597},{"_id":"themes/next/source/js/src/utils.js","hash":"e34f83848883732ddd7a34a3e3ed2a293f0f76a7","modified":1481766348597},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1481766348598},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1481766348620},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1481766348620},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1481766348621},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1481766348622},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1481766348625},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"8868275e8b6340c87a81c69a54ed138d11fb3c3e","modified":1481766348624},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1481766348626},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1481766348626},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1481766348626},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1481766348664},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1481766348607},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1481766348607},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1481766348666},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1481766348667},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1481766348667},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1481766348668},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1481766348668},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1481766348669},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1481766348672},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1481766348671},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1481766348677},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1481766348678},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1481766348679},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1481766348666},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"df5897760f4a0fc8f5bc1452858a99b2c1bd3d04","modified":1481766348017},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1481766347964},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1481766348311},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1481766348316},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1481766348312},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1481766348317},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1481766348318},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1481766348318},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"e4a13e8cd19762ef3aea0e59dfae8b3c1f251f11","modified":1481766348321},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1481766348318},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1481766348323},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1481766348324},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1481766348361},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1481766348364},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1481766348361},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1481766348367},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1481766348413},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1481766348505},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1481766348524},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1481766348517},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1481766348525},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1481766348527},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1481766348529},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1481766348525},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1481766348529},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1481766348529},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1481766348533},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1481766348536},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1481766348538},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1481766348542},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1481766348545},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1481766348518},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1481766348520},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1481766348521},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1481766348520},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c9875c010bebd77b4f59d459a10455fceb0a66a1","modified":1481766348557},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1481766348518},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1481766348561},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"338e9475519ce72af29a1bc05610f9f486e0f1c2","modified":1481766348566},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"983c0723e8cfd84b67c2e66da0c26425a8db06e0","modified":1481766348570},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1481766348570},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1481766348569},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1481766348569},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c2390263a298a2b78c5f941e6827c13f02e1ee85","modified":1481766348596},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1481766348623},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1481766348623},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"3c1d63dd1176c77f9f4cdb1616fbb08c31b9822f","modified":1481766348630},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"a02674d823c7b577d38c3cdb91953993b6e4b3a0","modified":1481766348629},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1481766348629},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1481766348608},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1481766348608},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1481766348610},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1481766348612},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1481766348612},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1481766348618},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1481766348617},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1481766348611},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1481766348619},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1481766348670},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1481766348671},{"_id":"themes/next/.git/objects/pack/pack-584c4779d0e5ae85d6252d0b833876f5abcf5d8c.idx","hash":"345bf79d737a23090d853a00fe0daba4d889e5df","modified":1481766347525},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1481766348634},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1481766348635},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1481766348662},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1481766348663},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1481766348676},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"df5897760f4a0fc8f5bc1452858a99b2c1bd3d04","modified":1481766348001},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1481766348372},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1481766348378},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1481766348381},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1481766348385},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1481766348393},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1481766348389},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1481766348396},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"cd2def16d31feb234be27dcdce2a919f70cc6919","modified":1481766348397},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1481766348400},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1481766348414},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1481766348415},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1481766348418},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1481766348417},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"e28c805011f65b54060f03be90ec5a23714c4985","modified":1481766348418},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1481766348420},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"74e9989a10fc682388cbd25ff7df0d7d4025fb8c","modified":1481766348420},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1481766348422},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1481766348423},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1481766348423},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1481766348428},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"681b7c8ce4dc47130a0ca67c1ec62be7c96e4c4f","modified":1481766348430},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1481766348430},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1481766348431},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1481766348455},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1481766348455},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1481766348457},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1481766348456},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1481766348457},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1481766348458},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1481766348402},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1481766348458},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1481766348407},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1481766348407},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1481766348411},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1481766348409},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1481766348510},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1481766348511},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1481766348512},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1481766348512},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"c8a05ce90784db9744c22fab22019eb637df1f2f","modified":1481766348512},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"3b1aabbab57b0b1fafa311feb1212f59e78e7928","modified":1481766348513},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1481766348514},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1481766348515},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1481766348515},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1481766348516},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"eb4ede7d7446d8a2f2ddeef3b17f497a6ad30756","modified":1481766348516},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"4f1e9d96940aa3e42d58fb63a26d4fa260323b0d","modified":1481766348516},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1481766348530},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1481766348530},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1481766348550},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1481766348661},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1481766348614},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1481766348613},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1481766348615},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1481766348615},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1481766348616},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1481766348615},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1481766348606},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1481766348658},{"_id":"themes/next/.git/objects/pack/pack-584c4779d0e5ae85d6252d0b833876f5abcf5d8c.pack","hash":"7d6ba5589af5ef9aa965ea884f42621d9a6a86dd","modified":1481766347601},{"_id":"public/atom.xml","hash":"dd3e4972bfcdfb59d01c26e55c65cfd2c9c91e07","modified":1481617153279},{"_id":"public/404.html","hash":"ac1d1f982d1b44714c60749c79148f2f351e604e","modified":1481622491082},{"_id":"public/about/index.html","hash":"ce82a2a4afb5a6a803f112976802ebf82b17a24a","modified":1481622491082},{"_id":"public/categories/index.html","hash":"e8960c55374c6f0c299cd4368b3abb4c7708f2df","modified":1481622491083},{"_id":"public/tags/index.html","hash":"a134d7f2db6e5ecc636dfbf0b548a8309e8e164a","modified":1481622491083},{"_id":"public/archives/index.html","hash":"b8465f9d5e03ea59b755b61d44dd370389a8a877","modified":1481622491085},{"_id":"public/archives/page/2/index.html","hash":"eedba318f3c674e0243f8ea7f129bf535fe9ad2c","modified":1481622491085},{"_id":"public/archives/2016/index.html","hash":"96ed173bdf203c1279eb66b91adc12a884d0286a","modified":1481622491086},{"_id":"public/archives/2016/page/2/index.html","hash":"48c6bf69e06a28f9966c55da44c423251b615085","modified":1481622491086},{"_id":"public/archives/2016/03/index.html","hash":"216a2eb875fbe03606221aaf7cd31e1ce41fc14f","modified":1481622491086},{"_id":"public/archives/2016/03/page/2/index.html","hash":"6b1c9aa82d3b9ce1a69bf2605a9360ab70a9bd2b","modified":1481622491086},{"_id":"public/archives/2016/04/index.html","hash":"af89d3af92abe6b4f3364fb6c18f01b554e88932","modified":1481622491086},{"_id":"public/archives/2016/08/index.html","hash":"5bfcadee707961a5153e8a0e088893e7e04b28a4","modified":1481622491086},{"_id":"public/archives/2016/12/index.html","hash":"50580fa330a4a0a28f204c7bea71eb4f8671f0a9","modified":1481622491086},{"_id":"public/categories/HelloWorld/index.html","hash":"441e3910b234441b9c6563596692396cd0456d63","modified":1481622491086},{"_id":"public/categories/Android/index.html","hash":"d674f34f2fc05ea8aa86ef3877b0013b362404fa","modified":1481622491086},{"_id":"public/categories/Linux/index.html","hash":"09c3a5af0fc1d64ca238cc4d513d213245028bec","modified":1481622491087},{"_id":"public/categories/随笔/index.html","hash":"4e9266c1cd6c51ba9bbf6eb84c6e543566e9ec7b","modified":1481622491087},{"_id":"public/categories/elasticsearch/index.html","hash":"51f448493ed0c5b276f273e9b7345278d69166ce","modified":1481622491087},{"_id":"public/tags/Hexo/index.html","hash":"c70bbb3602c561a64f06efc49ef225ce5eb9699c","modified":1481622491087},{"_id":"public/tags/HelloWorld/index.html","hash":"923a86c5ac93662832012ae1d43b979f97705c45","modified":1481622491087},{"_id":"public/tags/volley/index.html","hash":"af7c711f504d1ebf867378dcee337f9bbeaf64fc","modified":1481622491087},{"_id":"public/tags/Android/index.html","hash":"8cda7a492ce826a6ece19067749b8cf204cb4488","modified":1481622491087},{"_id":"public/tags/Linux/index.html","hash":"1ead59226eb712b2fe4de3f7d441ba51c4d3d276","modified":1481622491087},{"_id":"public/tags/JDK/index.html","hash":"e7b5ce5593572460de13c49d7adf06a5ce2e869b","modified":1481622491087},{"_id":"public/tags/eclipse小技巧/index.html","hash":"5e0505605151424294b08c3ddfe125bdc5de4c43","modified":1481622491088},{"_id":"public/tags/随笔/index.html","hash":"8ca817b4c19ada5ff2188b76c4a931f4e32e18b4","modified":1481622491088},{"_id":"public/tags/svn/index.html","hash":"08169ce8ba40e6baa7d9b5fd5c103b375531b06e","modified":1481622491088},{"_id":"public/tags/eclipse/index.html","hash":"041547398cf8326f733cd698ab6b97695a97c2b0","modified":1481622491088},{"_id":"public/tags/elasticsearch/index.html","hash":"547f138fde65bf8fa2c19307018312f6b1bb0bb8","modified":1481622491089},{"_id":"public/tags/开源项目汇总/index.html","hash":"521be29dcf651f283764c4c58e8c30efb6e45486","modified":1481622491093},{"_id":"public/2016/12/13/elasticsearch-get-start.html","hash":"e143a4a25b047a161c4482de0746a1e199748570","modified":1481622491083},{"_id":"public/2016/08/31/server-install-centos6.html","hash":"38358c064b9147e47e92460b951839519615c483","modified":1481622491083},{"_id":"public/2016/04/05/coding-standards.html","hash":"2793db88b3fa121d9ebd22f681e74fb1a4ca1281","modified":1481622491083},{"_id":"public/2016/04/03/android-svn-attention.html","hash":"3e89270d368ae1650709ff7da428d7aae0474c7d","modified":1481622491084},{"_id":"public/2016/03/28/lanqiao-exam.html","hash":"453f33819161c25fd6142114f93f783be4a25784","modified":1481622491084},{"_id":"public/2016/03/27/eclipse-tips-variable.html","hash":"1ec9cf6d4083431fdbcd4bf6420e513300bd5199","modified":1481622491084},{"_id":"public/2016/03/26/first-use-volley-demo.html","hash":"6a77dd433ac1911f266e43bed523c62fbbb830e5","modified":1481622491084},{"_id":"public/2016/03/25/android-open-project.html","hash":"2acd370269d724f6e8e2fd45455a9daf4d5251ab","modified":1481622491084},{"_id":"public/2016/03/24/ubuntu-15.04-install-jdk.html","hash":"3d03c00a7f1f3e16a953a532b0a119ddff33d6ab","modified":1481622491084},{"_id":"public/2016/03/21/helloworld.html","hash":"44e9721e8d0e170ca077d726b0e1f54320676b63","modified":1481622491084},{"_id":"public/index.html","hash":"45ac9160dd29fe371ed1dce0a24e5e6cc23be865","modified":1481622491087},{"_id":"public/page/2/index.html","hash":"c1749cd629a046fa37c2fcfd9f18300c9caf0d89","modified":1481622491087},{"_id":"public/CNAME","hash":"70122cc4eb4240eca5414fa90c22ca48e297f409","modified":1481617153410},{"_id":"public/RecentPlaces.lnk","hash":"dd6573fab586cdd35010f43fa5570efc7c9fc854","modified":1481617153410},{"_id":"public/favicon.png","hash":"c92b43e2292f6f98c200628d1fa1ff2522f24864","modified":1481617153410},{"_id":"public/resources/alipay-reward-image.png","hash":"69804a3cab7198c09c8e08564bf6abc43f606a25","modified":1481617153411},{"_id":"public/resources/android-svn-attention-20160403130946.png","hash":"418f523a2f12955fe0f3e27ea80f655a28a6f88a","modified":1481617153411},{"_id":"public/resources/greenvpn.gif","hash":"bab361440f0c5c019c0e6e96c6415860101e2ec2","modified":1481617153411},{"_id":"public/resources/volley-demo-20160326012642.png","hash":"771756eaf6a88b547cde29ce18bf09c04912471d","modified":1481617153411},{"_id":"public/resources/wechat-reward-image.png","hash":"9f04dffed817d26b6a877eb66316e91061b3370f","modified":1481617153411},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1481617153411},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1481617153412},{"_id":"public/images/avatar.png","hash":"3eb50b625afd10829ee715e65f5b194d3743e5cc","modified":1481617153412},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1481617153412},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1481617153412},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1481617153412},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1481617153412},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1481617153412},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1481617153412},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1481617153412},{"_id":"public/images/favicon.png","hash":"c92b43e2292f6f98c200628d1fa1ff2522f24864","modified":1481617153412},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1481617153412},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1481617153412},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1481617153412},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1481617153412},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1481617153413},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1481617153413},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1481617153413},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1481617153413},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1481617153413},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1481617153413},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1481617153413},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1481617153413},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1481617153413},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1481617153413},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1481617153413},{"_id":"public/resources/coding-standards-1.png","hash":"3c177f7731ee427046e4945050243c2602211b5e","modified":1481617154699},{"_id":"public/resources/coding-standards-2.2.png","hash":"7c4116dab84985f42b21b89d86290490661a85b7","modified":1481617154701},{"_id":"public/resources/coding-standards-2.1.png","hash":"a07a4a5b6526459aa46e3258e63748f8c329dd50","modified":1481617154724},{"_id":"public/resources/coding-standards-3.png","hash":"2e88043e2b1589bfdcc797984c64af9ccbd48670","modified":1481617154724},{"_id":"public/resources/eclipse-tips-20151107221921217.png","hash":"ea374fb4a25ccc451d62cd5f2833415574ed34b8","modified":1481617154724},{"_id":"public/resources/iov-1.png","hash":"2bd45837b8ca10f00f16bc44f3a1a45d1ae2494f","modified":1481617154724},{"_id":"public/resources/iov-3.png","hash":"9f70c52de5a52d8ede5d69a8dcdd75c0a08c6715","modified":1481617154724},{"_id":"public/resources/iov-4.png","hash":"81de480993f1cc268e037294b9686b37010b2720","modified":1481617154724},{"_id":"public/resources/iov-5.png","hash":"b3a1349c2dccd31f518c432bf2b51f645dc82b75","modified":1481617154725},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1481617154725},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1481617154725},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1481617154725},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1481617154725},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1481617154734},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1481617154734},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1481617154734},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1481617154734},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1481617154734},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1481617154734},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1481617154734},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1481617154734},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1481617154734},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1481617154735},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1481617154735},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1481617154735},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1481617154735},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1481617154735},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1481617154735},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1481617154735},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1481617154735},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1481617154735},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1481617154735},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1481617154735},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1481617154735},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1481617154735},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1481617154735},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1481617154735},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1481617154735},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1481617154735},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1481617154735},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1481617154735},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1481617154735},{"_id":"public/css/main.css","hash":"54e8665216db7a4c7d62a4304fd29b4c8820679f","modified":1481617154735},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1481617154735},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1481617154736},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1481617154736},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1481617154736},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1481617154736},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1481617154736},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1481617154737},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1481617154737},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1481617154737},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1481617154737},{"_id":"public/resources/iov-2.png","hash":"24df15a48ab9f3ea61945870dec8c0ad892c4d65","modified":1481617154737},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1481617154737},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1481617154756},{"_id":"public/search.xml","hash":"1ae9ad20d86c692312f87146d95697aadd960d56","modified":1481621275556}],"Category":[{"name":"HelloWorld","_id":"ciwn8lgur0005kw1g5aih7kku"},{"name":"Android","_id":"ciwn8lgva000ckw1gdp1tqi3t"},{"name":"Linux","_id":"ciwn8lgvn000hkw1g2i9w9fvu"},{"name":"随笔","_id":"ciwn8lgw2000rkw1ggpb5cltz"},{"name":"elasticsearch","_id":"ciwn8lgw80010kw1gm7o6ls0h"}],"Data":[],"Page":[{"title":"404 Not Found：该页无法显示","toc":false,"comments":0,"_content":"<style type=\"text/css\">\n\t.article-header {\n\t\tpadding: 0;\n\t\tpadding-top: 26px;\n\t\tborder-left: none;\n\t\ttext-align: center;\n\t}\n\t.article-header:hover {\n\t\tborder-left: none;\n\t}\n\t.article-title {\n\t\tfont-size: 2.1em;\n\t}\n\tstrong a {\n\t\tcolor: #747474;\n\t}\n\t.article-meta {\n\t\tdisplay: none;\n\t}\n\t.share {\n\t\tdisplay: none;\n\t}\n\t.ds-meta {\n\t\tdisplay: none;\n\t}\n\t.player {\n\t\tmargin-left: -10px;\n\t}\n\t.sign {\n\t\ttext-align: right;\n\t\tfont-style: italic;\n\t}\n  \t#page-visit {\n\t\tdisplay: none;\n\t}\n\t.center {\n\t\ttext-align: center;\n\t\theight: 2.5em;\n\t\tfont-weight: bold;\n\t}\n\t.article-entry hr {\n\t\tmargin: 0;\n\t}\n\t.pic {\n\t\ttext-align: center;\n\t\tmargin: 0;\n\t}\n\t.pic br {\n  \t\tdisplay: none;\n  \t}\n\t#container .article-info-post.article-info {\n  \tdisplay: none;\n  \t}\n\t#container .article .article-title {\n\tpadding: 0;\n\t}\n</style>\n<p class=\"center\">很抱歉，您所访问的地址并不存在 </p>\n\n<p class=\"center\"><a href=\"/\">回主页</a> · <a href=\"/archives\">所有文章</a> · <a href=\"/about\">留言板</a></p>\n\n<div style=\"text-align: center\"><br>以下是博主喜欢的一些歌曲，可以听听，稍作休息~<br>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=0&id=52458825&auto=1&height=430\"></iframe>\n</div>","source":"404/index.md","raw":"---\ntitle: 404 Not Found：该页无法显示\ntoc: false\ncomments: false\npermalink: /404\n---\n<style type=\"text/css\">\n\t.article-header {\n\t\tpadding: 0;\n\t\tpadding-top: 26px;\n\t\tborder-left: none;\n\t\ttext-align: center;\n\t}\n\t.article-header:hover {\n\t\tborder-left: none;\n\t}\n\t.article-title {\n\t\tfont-size: 2.1em;\n\t}\n\tstrong a {\n\t\tcolor: #747474;\n\t}\n\t.article-meta {\n\t\tdisplay: none;\n\t}\n\t.share {\n\t\tdisplay: none;\n\t}\n\t.ds-meta {\n\t\tdisplay: none;\n\t}\n\t.player {\n\t\tmargin-left: -10px;\n\t}\n\t.sign {\n\t\ttext-align: right;\n\t\tfont-style: italic;\n\t}\n  \t#page-visit {\n\t\tdisplay: none;\n\t}\n\t.center {\n\t\ttext-align: center;\n\t\theight: 2.5em;\n\t\tfont-weight: bold;\n\t}\n\t.article-entry hr {\n\t\tmargin: 0;\n\t}\n\t.pic {\n\t\ttext-align: center;\n\t\tmargin: 0;\n\t}\n\t.pic br {\n  \t\tdisplay: none;\n  \t}\n\t#container .article-info-post.article-info {\n  \tdisplay: none;\n  \t}\n\t#container .article .article-title {\n\tpadding: 0;\n\t}\n</style>\n<p class=\"center\">很抱歉，您所访问的地址并不存在 </p>\n\n<p class=\"center\"><a href=\"/\">回主页</a> · <a href=\"/archives\">所有文章</a> · <a href=\"/about\">留言板</a></p>\n\n<div style=\"text-align: center\"><br>以下是博主喜欢的一些歌曲，可以听听，稍作休息~<br>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=0&id=52458825&auto=1&height=430\"></iframe>\n</div>","date":"2016-09-06T01:55:00.607Z","updated":"2016-09-06T01:55:00.607Z","path":"/404.html","layout":"page","_id":"ciwn8lguf0001kw1g8gdwqyts","content":"<p><style type=\"text/css\"><br>    .article-header {<br>        padding: 0;<br>        padding-top: 26px;<br>        border-left: none;<br>        text-align: center;<br>    }<br>    .article-header:hover {<br>        border-left: none;<br>    }<br>    .article-title {<br>        font-size: 2.1em;<br>    }<br>    strong a {<br>        color: #747474;<br>    }<br>    .article-meta {<br>        display: none;<br>    }<br>    .share {<br>        display: none;<br>    }<br>    .ds-meta {<br>        display: none;<br>    }<br>    .player {<br>        margin-left: -10px;<br>    }<br>    .sign {<br>        text-align: right;<br>        font-style: italic;<br>    }</p>\n<pre><code>  #page-visit {\n    display: none;\n}\n.center {\n    text-align: center;\n    height: 2.5em;\n    font-weight: bold;\n}\n.article-entry hr {\n    margin: 0;\n}\n.pic {\n    text-align: center;\n    margin: 0;\n}\n.pic br {\n      display: none;\n  }\n#container .article-info-post.article-info {\n  display: none;\n  }\n#container .article .article-title {\npadding: 0;\n}\n</code></pre><p></style></p>\n<p class=\"center\">很抱歉，您所访问的地址并不存在 </p>\n\n<p class=\"center\"><a href=\"/\">回主页</a> · <a href=\"/archives\">所有文章</a> · <a href=\"/about\">留言板</a></p>\n\n<div style=\"text-align: center\"><br>以下是博主喜欢的一些歌曲，可以听听，稍作休息~<br><br><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"450\" src=\"http://music.163.com/outchain/player?type=0&id=52458825&auto=1&height=430\"></iframe><br></div>","excerpt":"","more":"<p><style type=\"text/css\"><br>    .article-header {<br>        padding: 0;<br>        padding-top: 26px;<br>        border-left: none;<br>        text-align: center;<br>    }<br>    .article-header:hover {<br>        border-left: none;<br>    }<br>    .article-title {<br>        font-size: 2.1em;<br>    }<br>    strong a {<br>        color: #747474;<br>    }<br>    .article-meta {<br>        display: none;<br>    }<br>    .share {<br>        display: none;<br>    }<br>    .ds-meta {<br>        display: none;<br>    }<br>    .player {<br>        margin-left: -10px;<br>    }<br>    .sign {<br>        text-align: right;<br>        font-style: italic;<br>    }</p>\n<pre><code>  #page-visit {\n    display: none;\n}\n.center {\n    text-align: center;\n    height: 2.5em;\n    font-weight: bold;\n}\n.article-entry hr {\n    margin: 0;\n}\n.pic {\n    text-align: center;\n    margin: 0;\n}\n.pic br {\n      display: none;\n  }\n#container .article-info-post.article-info {\n  display: none;\n  }\n#container .article .article-title {\npadding: 0;\n}\n</code></pre><p></style></p>\n<p class=\"center\">很抱歉，您所访问的地址并不存在 </p>\n\n<p class=\"center\"><a href=\"/\">回主页</a> · <a href=\"/archives\">所有文章</a> · <a href=\"/about\">留言板</a></p>\n\n<div style=\"text-align: center\"><br>以下是博主喜欢的一些歌曲，可以听听，稍作休息~<br><br><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=0&id=52458825&auto=1&height=430\"></iframe><br></div>"},{"title":"关于我&留言板","date":"2016-03-21T11:48:15.000Z","fancybox":false,"_content":"<style type=\"text/css\">\n\tstrong a {\n\t\tcolor: #747474;\n\t}\n\t.player {\n\t\ttext-align: center;\n\t\tmargin: .5em auto 0;\n\t\twidth: 100%;\n\t\tmax-width: 22em;\n\t}\n\t.player br {\n\t\tdisplay: none;\n\t}\n\t.sign {\n\t\ttext-align: right;\n\t\tfont-style: italic;\n\t}\n\t#ds-recent-visitors {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\t#ds-recent-visitors div img {\n\t\tdisplay: inline-block !important;\n\t\twidth: 56px !important;\n\t\theight: 56px !important;\n\t\tborder-radius: 50%;\n\t\tborder: 1px solid #ddd;\n\t\tpadding: 2px;\n\t}\n\t.article-entry img:first-child {\n\t\tdisplay: block;\n\t}\n\t.article-entry span {\n\t\tfont-family: Arial;\n\t}\n\t#ds-hot-posts {\n\t\tdisplay: none;\n\t}\n</style>\n\n---\n我是个二本院校的小小IT男，将来应该也是一名苦逼的码农，爱互联网，爱电影，爱游戏，爱动漫，爱coding，爱妞妞...\n\n\n　　**2013年9月，我来到了湖北文理学院，终于明确了自己真正所热衷的事，并找到了为未来奋斗的目标。**\n\n<p class=\"sign\"><span>——</span> xkcoding, 2013年9月30日</p>\n\n**博客缘由:**\n> 在建立改造博客网站的过程中，学习和巩固前端基本知识；\n> 通过写博客的方式，加深理解，对自己的所学做一个记录；\n> 共享知识，吸引同好，交流进步。\n\n**欢迎交流:**\n> 个人邮件及社交网站等信息见边栏底部；\n> 有什么留言或问题直接在文末留下评论即可。\n\n<div class=\"player\">\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=0&id=52458825&auto=1&height=430\"></iframe>\n</div>\n\n**最近访客**\n><ul class=\"ds-recent-visitors\" data-num-items=\"30\" data-avatar-size=\"56\"></ul>","source":"about/index.md","raw":"---\ntitle: 关于我&留言板\ndate: 2016-03-21 19:48:15\nfancybox: false\n---\n<style type=\"text/css\">\n\tstrong a {\n\t\tcolor: #747474;\n\t}\n\t.player {\n\t\ttext-align: center;\n\t\tmargin: .5em auto 0;\n\t\twidth: 100%;\n\t\tmax-width: 22em;\n\t}\n\t.player br {\n\t\tdisplay: none;\n\t}\n\t.sign {\n\t\ttext-align: right;\n\t\tfont-style: italic;\n\t}\n\t#ds-recent-visitors {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\t#ds-recent-visitors div img {\n\t\tdisplay: inline-block !important;\n\t\twidth: 56px !important;\n\t\theight: 56px !important;\n\t\tborder-radius: 50%;\n\t\tborder: 1px solid #ddd;\n\t\tpadding: 2px;\n\t}\n\t.article-entry img:first-child {\n\t\tdisplay: block;\n\t}\n\t.article-entry span {\n\t\tfont-family: Arial;\n\t}\n\t#ds-hot-posts {\n\t\tdisplay: none;\n\t}\n</style>\n\n---\n我是个二本院校的小小IT男，将来应该也是一名苦逼的码农，爱互联网，爱电影，爱游戏，爱动漫，爱coding，爱妞妞...\n\n\n　　**2013年9月，我来到了湖北文理学院，终于明确了自己真正所热衷的事，并找到了为未来奋斗的目标。**\n\n<p class=\"sign\"><span>——</span> xkcoding, 2013年9月30日</p>\n\n**博客缘由:**\n> 在建立改造博客网站的过程中，学习和巩固前端基本知识；\n> 通过写博客的方式，加深理解，对自己的所学做一个记录；\n> 共享知识，吸引同好，交流进步。\n\n**欢迎交流:**\n> 个人邮件及社交网站等信息见边栏底部；\n> 有什么留言或问题直接在文末留下评论即可。\n\n<div class=\"player\">\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=0&id=52458825&auto=1&height=430\"></iframe>\n</div>\n\n**最近访客**\n><ul class=\"ds-recent-visitors\" data-num-items=\"30\" data-avatar-size=\"56\"></ul>","updated":"2016-09-06T01:55:00.618Z","path":"about/index.html","comments":1,"layout":"page","_id":"ciwn8lgul0003kw1guys4urym","content":"<style type=\"text/css\">\n    strong a {\n        color: #747474;\n    }\n    .player {\n        text-align: center;\n        margin: .5em auto 0;\n        width: 100%;\n        max-width: 22em;\n    }\n    .player br {\n        display: none;\n    }\n    .sign {\n        text-align: right;\n        font-style: italic;\n    }\n    #ds-recent-visitors {\n        margin: 0;\n        padding: 0;\n    }\n    #ds-recent-visitors div img {\n        display: inline-block !important;\n        width: 56px !important;\n        height: 56px !important;\n        border-radius: 50%;\n        border: 1px solid #ddd;\n        padding: 2px;\n    }\n    .article-entry img:first-child {\n        display: block;\n    }\n    .article-entry span {\n        font-family: Arial;\n    }\n    #ds-hot-posts {\n        display: none;\n    }\n</style>\n\n<hr>\n<p>我是个二本院校的小小IT男，将来应该也是一名苦逼的码农，爱互联网，爱电影，爱游戏，爱动漫，爱coding，爱妞妞…</p>\n<p>　　<strong>2013年9月，我来到了湖北文理学院，终于明确了自己真正所热衷的事，并找到了为未来奋斗的目标。</strong></p>\n<p class=\"sign\"><span>——</span> xkcoding, 2013年9月30日</p>\n\n<p><strong>博客缘由:</strong></p>\n<blockquote>\n<p>在建立改造博客网站的过程中，学习和巩固前端基本知识；<br>通过写博客的方式，加深理解，对自己的所学做一个记录；<br>共享知识，吸引同好，交流进步。</p>\n</blockquote>\n<p><strong>欢迎交流:</strong></p>\n<blockquote>\n<p>个人邮件及社交网站等信息见边栏底部；<br>有什么留言或问题直接在文末留下评论即可。</p>\n</blockquote>\n<div class=\"player\"><br><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"450\" src=\"http://music.163.com/outchain/player?type=0&id=52458825&auto=1&height=430\"></iframe><br></div>\n\n<p><strong>最近访客</strong></p>\n<blockquote>\n<ul class=\"ds-recent-visitors\" data-num-items=\"30\" data-avatar-size=\"56\"></ul></blockquote>\n","excerpt":"","more":"<style type=\"text/css\">\n    strong a {\n        color: #747474;\n    }\n    .player {\n        text-align: center;\n        margin: .5em auto 0;\n        width: 100%;\n        max-width: 22em;\n    }\n    .player br {\n        display: none;\n    }\n    .sign {\n        text-align: right;\n        font-style: italic;\n    }\n    #ds-recent-visitors {\n        margin: 0;\n        padding: 0;\n    }\n    #ds-recent-visitors div img {\n        display: inline-block !important;\n        width: 56px !important;\n        height: 56px !important;\n        border-radius: 50%;\n        border: 1px solid #ddd;\n        padding: 2px;\n    }\n    .article-entry img:first-child {\n        display: block;\n    }\n    .article-entry span {\n        font-family: Arial;\n    }\n    #ds-hot-posts {\n        display: none;\n    }\n</style>\n\n<hr>\n<p>我是个二本院校的小小IT男，将来应该也是一名苦逼的码农，爱互联网，爱电影，爱游戏，爱动漫，爱coding，爱妞妞…</p>\n<p>　　<strong>2013年9月，我来到了湖北文理学院，终于明确了自己真正所热衷的事，并找到了为未来奋斗的目标。</strong></p>\n<p class=\"sign\"><span>——</span> xkcoding, 2013年9月30日</p>\n\n<p><strong>博客缘由:</strong></p>\n<blockquote>\n<p>在建立改造博客网站的过程中，学习和巩固前端基本知识；<br>通过写博客的方式，加深理解，对自己的所学做一个记录；<br>共享知识，吸引同好，交流进步。</p>\n</blockquote>\n<p><strong>欢迎交流:</strong></p>\n<blockquote>\n<p>个人邮件及社交网站等信息见边栏底部；<br>有什么留言或问题直接在文末留下评论即可。</p>\n</blockquote>\n<div class=\"player\"><br><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"http://music.163.com/outchain/player?type=0&id=52458825&auto=1&height=430\"></iframe><br></div>\n\n<p><strong>最近访客</strong></p>\n<blockquote>\n<ul class=\"ds-recent-visitors\" data-num-items=\"30\" data-avatar-size=\"56\"></ul></blockquote>\n"},{"title":"categories","date":"2016-12-15T02:28:36.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-12-15 10:28:36\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-12-15T02:30:33.367Z","path":"categories/index.html","layout":"page","_id":"ciwn8lguv0007kw1gt7xmx2sp","content":"","excerpt":"","more":""},{"title":"分类 & 标签","date":"2016-03-21T12:27:39.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 分类 & 标签\ndate: 2016-03-21 20:27:39\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-12-15T02:28:00.579Z","path":"tags/index.html","layout":"page","_id":"ciwn8lgv20009kw1g9qul6owm","content":"","excerpt":"","more":""}],"Post":[{"title":"helloworld","date":"2016-03-21T15:58:59.000Z","comments":1,"fancybox":false,"description":"Welcome to Hexo: This is your very first post.","toc":false,"top":null,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/2016-03-21.helloworld.md","raw":"---\ntitle: helloworld\ndate: 2016-03-21 23:58:59\ntags:\n- Hexo\n- HelloWorld\ncategories:\n- HelloWorld\ncomments: true\nfancybox: false\ndescription: \"Welcome to Hexo: This is your very first post.\" \ntoc: false\npermalink: helloworld\ntop: \n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"helloworld","published":1,"updated":"2016-09-06T01:55:00.609Z","layout":"post","photos":[],"link":"","_id":"ciwn8lgu70000kw1g6d1f8qo4","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"volley开源框架的初体验","comments":1,"fancybox":true,"toc":true,"date":"2016-03-25T16:51:41.000Z","description":null,"top":null,"_content":"<h2 id=\"intro\">前言</h2>Http网络数据交互请求是极其重要并且使用很频繁的一个模块，也是最基本的网络编程所需要学习的。网络请求方式的效率和性能直接影响到APP的整体用户体验流畅性，所以学习并掌握一款好的Http请求框架对我们的网络开发非常重要。Http请求在移动网络编程中主要是Get和Post请求接口数据的使用。所以，在学习好基础的Http请求知识后，为了提升开发效率，选择学习使用一款好的Http网络请求框架变得非常的重要。\n<!--more-->\n> 什么是Volley？汉语译过来就是：齐射; 迸发的意思。可以看出来，Volley特别适合数据量不大但是通信频繁的场景。\n> Volley是Google I/O 2013上Google官方发布的一款Android平台上的网络通信库。\n> 以前的网络请求，要考虑开启线程、内存泄漏、性能等等复杂的问题。但是Volley框架已经帮我们把这些问题处理好了，对外提供了相应的完善的请求API ，我们只需要按照要求使用即可\n\n### Volley框架的特点\n- 能使网络通信更快，更简单，更健壮\n- Get、Post网络请求及网络图像的高效率异步处理请求\n- 可以对网络请求进行排序优先级管理\n- 网络请求的缓存\n- 多级别取消请求\n- 和Activity生命周期的联动（Activity结束时同时取消所有网络请求）\n使用Volley可以简化一些网络通信的开发，当然Volley不适合大数据（largepayloads）和流媒体的网络请求。例如上百兆的文件、视频下载。\n- Volley开源，可以进行定制修改也可以直接使用Jar包的形式。\n\n### Volley的用法\n> 1. Volley的Get和Post请求方式的使用\n> 1. Volley的网络请求队列建立和取消队列请求\n\n1. Volley的Get和Post请求方式的使用\nGet和Post用于与服务器间请求和发送数据。\n建立请求首先建立队列，将请求添加到请求队列里。\n然后进行相应的Get和Post请求，请求结果在回调里获取解析。\n\n1. Volley的网络请求队列建立和取消队列请求\nVolley有自己的请求队列管理机制，可以控制每个请求的建立与取消。非常方便和安全。\n这样也就可以做到随时控制某个请求在什么时候结束，Activity生命周期关联，防止无谓的请求。\n\n### Volley的简单测试demo\n\n1.新建一个MyApplication类，继承自Application ，用于返回一个全局的Volley网络请求队列\n```java\npackage com.xkcoding.volley;\n\nimport android.app.Application;\n\nimport com.android.volley.RequestQueue;\nimport com.android.volley.toolbox.Volley;\n\n/**\n * @ClassName: MyApplication\n * @Description: 用于生成一个全局的请求队列\n * @author Yangkai.Shen\n * @date 2016-3-26 上午1:09:10\n * \n */\npublic class MyApplication extends Application {\n\tpublic static RequestQueue queue;\n\n\t@Override\n\tpublic void onCreate() {\n\t\tsuper.onCreate();\n\t\tqueue = Volley.newRequestQueue(getApplicationContext());\n\t}\n\n\t/**\n\t * @Title: getRequestQueue\n\t * @Description: 获取一个全局的请求队列\n\t * @param @return 参数说明\n\t * @return RequestQueue 返回类型\n\t * @throws\n\t */\n\tpublic static RequestQueue getRequestQueue() {\n\t\treturn queue;\n\t}\n\n}\n```\n\t\n2.在MainActivity中编写测试GET与POST请求的代码\n```java\npackage com.xkcoding.volley;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.widget.Toast;\n\nimport com.android.volley.Request.Method;\nimport com.android.volley.AuthFailureError;\nimport com.android.volley.Response;\nimport com.android.volley.Response.Listener;\nimport com.android.volley.VolleyError;\nimport com.android.volley.toolbox.StringRequest;\n\n/**\n * @ClassName: MainActivity\n * @Description: 1. Volley的Get和Post请求方式的使用 2. Volley的网络请求队列建立和取消队列请求\n * @author Yangkai.Shen\n * @date 2016-3-26 上午1:08:27\n * \n */\npublic class MainActivity extends Activity {\n\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_main);\n\t\tvolley_Get();\n\t\tvolley_Post();\n\t}\n\n\t/**\n\t * @Title: volley_Get\n\t * @Description: 测试GET方法\n\t * @param 参数说明\n\t * @return void 返回类型\n\t * @throws\n\t */\n\tprivate void volley_Get() {\n\t\t//测试url为聚合数据的手机归属地查询\n\t\tString url = \"http://apis.juhe.cn/mobile/get?phone=13429667914&key=ebe4429a46cb136bc7fcee57806fe952\";\n\t\tStringRequest request = new StringRequest(Method.GET, url,\n\t\t\t\tnew Listener<String>() {\n\t\t\t\t\t// 成功时回调\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onResponse(String arg0) {\n\t\t\t\t\t\tLog.i(\"volley_Get\", arg0);\n\t\t\t\t\t\tToast.makeText(getApplicationContext(), arg0,\n\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();\n\t\t\t\t\t}\n\t\t\t\t}, new Response.ErrorListener() {\n\t\t\t\t\t// 失败时回调\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onErrorResponse(VolleyError arg0) {\n\t\t\t\t\t\tToast.makeText(getApplicationContext(), \"网络请求失败\",\n\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t// 加标签，便于在Activity销毁时，断开网络请求\n\t\trequest.setTag(\"testGet\");\n\t\t// 将请求放入请求队列\n\t\tMyApplication.getRequestQueue().add(request);\n\t}\n\n\tprivate void volley_Post() {\n\t\t//测试url为聚合数据的手机归属地查询\n\t\tString url = \"http://apis.juhe.cn/mobile/get?\";\n\t\tStringRequest request = new StringRequest(Method.POST, url,\n\t\t\t\tnew Listener<String>() {\n\t\t\t\t\t// 成功时回调\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onResponse(String arg0) {\n\t\t\t\t\t\tLog.i(\"volley_Post\", arg0);\n\t\t\t\t\t\tToast.makeText(getApplicationContext(), arg0,\n\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();\n\n\t\t\t\t\t}\n\t\t\t\t}, new Response.ErrorListener() {\n\t\t\t\t\t// 失败时回调\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onErrorResponse(VolleyError arg0) {\n\t\t\t\t\t\tToast.makeText(getApplicationContext(), \"网络请求失败\",\n\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();\n\t\t\t\t\t}\n\t\t\t\t}) {\n\t\t\t// POST请求所附带的请求参数\n\t\t\t@Override\n\t\t\tprotected Map<String, String> getParams() throws AuthFailureError {\n\t\t\t\tHashMap<String, String> map = new HashMap<String, String>();\n\t\t\t\tmap.put(\"phone\", \"13429667914\");\n\t\t\t\tmap.put(\"key\", \"ebe4429a46cb136bc7fcee57806fe952\");\n\t\t\t\treturn map;\n\t\t\t}\n\t\t};\n\t\t// 加标签，便于在Activity销毁时，断开网络请求\n\t\trequest.setTag(\"testPost\");\n\t\t// 将请求放入请求队列\n\t\tMyApplication.getRequestQueue().add(request);\n\t}\n\n\t@Override\n\tprotected void onStop() {\n\t\t// Activity销毁时取消请求队列列的所有请求，通过Tags找到所有请求\n\t\tMyApplication.getRequestQueue().cancelAll(\"testGet\");\n\t\tMyApplication.getRequestQueue().cancelAll(\"testPost\");\n\t\tsuper.onStop();\n\t}\n\n}\n```\n\t\n3.在清单文件AndroidManifest.xml中注册刚刚的MyApplication并添加网络权限\n```xml\n<uses-permission android:name=\"android.permission.INTERNET\"/>\n```\n\n4.Ctrl+F11 成功在LogCat中打印出号码信息\n![LogCat信息](/resources/volley-demo-20160326012642.png)\n\n","source":"_posts/2016-03-26.first-use-volley-demo.md","raw":"---\ntitle: volley开源框架的初体验\ncomments: true\nfancybox: true\ntoc: true\ndate: 2016-03-26 00:51:41\ntags:\n- volley\n- Android\ncategories:\n- Android\ndescription:\npermalink: first-use-volley-demo\ntop:\n---\n<h2 id=\"intro\">前言</h2>Http网络数据交互请求是极其重要并且使用很频繁的一个模块，也是最基本的网络编程所需要学习的。网络请求方式的效率和性能直接影响到APP的整体用户体验流畅性，所以学习并掌握一款好的Http请求框架对我们的网络开发非常重要。Http请求在移动网络编程中主要是Get和Post请求接口数据的使用。所以，在学习好基础的Http请求知识后，为了提升开发效率，选择学习使用一款好的Http网络请求框架变得非常的重要。\n<!--more-->\n> 什么是Volley？汉语译过来就是：齐射; 迸发的意思。可以看出来，Volley特别适合数据量不大但是通信频繁的场景。\n> Volley是Google I/O 2013上Google官方发布的一款Android平台上的网络通信库。\n> 以前的网络请求，要考虑开启线程、内存泄漏、性能等等复杂的问题。但是Volley框架已经帮我们把这些问题处理好了，对外提供了相应的完善的请求API ，我们只需要按照要求使用即可\n\n### Volley框架的特点\n- 能使网络通信更快，更简单，更健壮\n- Get、Post网络请求及网络图像的高效率异步处理请求\n- 可以对网络请求进行排序优先级管理\n- 网络请求的缓存\n- 多级别取消请求\n- 和Activity生命周期的联动（Activity结束时同时取消所有网络请求）\n使用Volley可以简化一些网络通信的开发，当然Volley不适合大数据（largepayloads）和流媒体的网络请求。例如上百兆的文件、视频下载。\n- Volley开源，可以进行定制修改也可以直接使用Jar包的形式。\n\n### Volley的用法\n> 1. Volley的Get和Post请求方式的使用\n> 1. Volley的网络请求队列建立和取消队列请求\n\n1. Volley的Get和Post请求方式的使用\nGet和Post用于与服务器间请求和发送数据。\n建立请求首先建立队列，将请求添加到请求队列里。\n然后进行相应的Get和Post请求，请求结果在回调里获取解析。\n\n1. Volley的网络请求队列建立和取消队列请求\nVolley有自己的请求队列管理机制，可以控制每个请求的建立与取消。非常方便和安全。\n这样也就可以做到随时控制某个请求在什么时候结束，Activity生命周期关联，防止无谓的请求。\n\n### Volley的简单测试demo\n\n1.新建一个MyApplication类，继承自Application ，用于返回一个全局的Volley网络请求队列\n```java\npackage com.xkcoding.volley;\n\nimport android.app.Application;\n\nimport com.android.volley.RequestQueue;\nimport com.android.volley.toolbox.Volley;\n\n/**\n * @ClassName: MyApplication\n * @Description: 用于生成一个全局的请求队列\n * @author Yangkai.Shen\n * @date 2016-3-26 上午1:09:10\n * \n */\npublic class MyApplication extends Application {\n\tpublic static RequestQueue queue;\n\n\t@Override\n\tpublic void onCreate() {\n\t\tsuper.onCreate();\n\t\tqueue = Volley.newRequestQueue(getApplicationContext());\n\t}\n\n\t/**\n\t * @Title: getRequestQueue\n\t * @Description: 获取一个全局的请求队列\n\t * @param @return 参数说明\n\t * @return RequestQueue 返回类型\n\t * @throws\n\t */\n\tpublic static RequestQueue getRequestQueue() {\n\t\treturn queue;\n\t}\n\n}\n```\n\t\n2.在MainActivity中编写测试GET与POST请求的代码\n```java\npackage com.xkcoding.volley;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.widget.Toast;\n\nimport com.android.volley.Request.Method;\nimport com.android.volley.AuthFailureError;\nimport com.android.volley.Response;\nimport com.android.volley.Response.Listener;\nimport com.android.volley.VolleyError;\nimport com.android.volley.toolbox.StringRequest;\n\n/**\n * @ClassName: MainActivity\n * @Description: 1. Volley的Get和Post请求方式的使用 2. Volley的网络请求队列建立和取消队列请求\n * @author Yangkai.Shen\n * @date 2016-3-26 上午1:08:27\n * \n */\npublic class MainActivity extends Activity {\n\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_main);\n\t\tvolley_Get();\n\t\tvolley_Post();\n\t}\n\n\t/**\n\t * @Title: volley_Get\n\t * @Description: 测试GET方法\n\t * @param 参数说明\n\t * @return void 返回类型\n\t * @throws\n\t */\n\tprivate void volley_Get() {\n\t\t//测试url为聚合数据的手机归属地查询\n\t\tString url = \"http://apis.juhe.cn/mobile/get?phone=13429667914&key=ebe4429a46cb136bc7fcee57806fe952\";\n\t\tStringRequest request = new StringRequest(Method.GET, url,\n\t\t\t\tnew Listener<String>() {\n\t\t\t\t\t// 成功时回调\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onResponse(String arg0) {\n\t\t\t\t\t\tLog.i(\"volley_Get\", arg0);\n\t\t\t\t\t\tToast.makeText(getApplicationContext(), arg0,\n\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();\n\t\t\t\t\t}\n\t\t\t\t}, new Response.ErrorListener() {\n\t\t\t\t\t// 失败时回调\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onErrorResponse(VolleyError arg0) {\n\t\t\t\t\t\tToast.makeText(getApplicationContext(), \"网络请求失败\",\n\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t// 加标签，便于在Activity销毁时，断开网络请求\n\t\trequest.setTag(\"testGet\");\n\t\t// 将请求放入请求队列\n\t\tMyApplication.getRequestQueue().add(request);\n\t}\n\n\tprivate void volley_Post() {\n\t\t//测试url为聚合数据的手机归属地查询\n\t\tString url = \"http://apis.juhe.cn/mobile/get?\";\n\t\tStringRequest request = new StringRequest(Method.POST, url,\n\t\t\t\tnew Listener<String>() {\n\t\t\t\t\t// 成功时回调\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onResponse(String arg0) {\n\t\t\t\t\t\tLog.i(\"volley_Post\", arg0);\n\t\t\t\t\t\tToast.makeText(getApplicationContext(), arg0,\n\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();\n\n\t\t\t\t\t}\n\t\t\t\t}, new Response.ErrorListener() {\n\t\t\t\t\t// 失败时回调\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onErrorResponse(VolleyError arg0) {\n\t\t\t\t\t\tToast.makeText(getApplicationContext(), \"网络请求失败\",\n\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();\n\t\t\t\t\t}\n\t\t\t\t}) {\n\t\t\t// POST请求所附带的请求参数\n\t\t\t@Override\n\t\t\tprotected Map<String, String> getParams() throws AuthFailureError {\n\t\t\t\tHashMap<String, String> map = new HashMap<String, String>();\n\t\t\t\tmap.put(\"phone\", \"13429667914\");\n\t\t\t\tmap.put(\"key\", \"ebe4429a46cb136bc7fcee57806fe952\");\n\t\t\t\treturn map;\n\t\t\t}\n\t\t};\n\t\t// 加标签，便于在Activity销毁时，断开网络请求\n\t\trequest.setTag(\"testPost\");\n\t\t// 将请求放入请求队列\n\t\tMyApplication.getRequestQueue().add(request);\n\t}\n\n\t@Override\n\tprotected void onStop() {\n\t\t// Activity销毁时取消请求队列列的所有请求，通过Tags找到所有请求\n\t\tMyApplication.getRequestQueue().cancelAll(\"testGet\");\n\t\tMyApplication.getRequestQueue().cancelAll(\"testPost\");\n\t\tsuper.onStop();\n\t}\n\n}\n```\n\t\n3.在清单文件AndroidManifest.xml中注册刚刚的MyApplication并添加网络权限\n```xml\n<uses-permission android:name=\"android.permission.INTERNET\"/>\n```\n\n4.Ctrl+F11 成功在LogCat中打印出号码信息\n![LogCat信息](/resources/volley-demo-20160326012642.png)\n\n","slug":"first-use-volley-demo","published":1,"updated":"2016-09-06T01:55:00.612Z","layout":"post","photos":[],"link":"","_id":"ciwn8lgui0002kw1g0qfi33c0","content":"<p></p><h2 id=\"intro\">前言</h2>Http网络数据交互请求是极其重要并且使用很频繁的一个模块，也是最基本的网络编程所需要学习的。网络请求方式的效率和性能直接影响到APP的整体用户体验流畅性，所以学习并掌握一款好的Http请求框架对我们的网络开发非常重要。Http请求在移动网络编程中主要是Get和Post请求接口数据的使用。所以，在学习好基础的Http请求知识后，为了提升开发效率，选择学习使用一款好的Http网络请求框架变得非常的重要。<br><a id=\"more\"></a><p></p>\n<blockquote>\n<p>什么是Volley？汉语译过来就是：齐射; 迸发的意思。可以看出来，Volley特别适合数据量不大但是通信频繁的场景。<br>Volley是Google I/O 2013上Google官方发布的一款Android平台上的网络通信库。<br>以前的网络请求，要考虑开启线程、内存泄漏、性能等等复杂的问题。但是Volley框架已经帮我们把这些问题处理好了，对外提供了相应的完善的请求API ，我们只需要按照要求使用即可</p>\n</blockquote>\n<h3 id=\"Volley框架的特点\"><a href=\"#Volley框架的特点\" class=\"headerlink\" title=\"Volley框架的特点\"></a>Volley框架的特点</h3><ul>\n<li>能使网络通信更快，更简单，更健壮</li>\n<li>Get、Post网络请求及网络图像的高效率异步处理请求</li>\n<li>可以对网络请求进行排序优先级管理</li>\n<li>网络请求的缓存</li>\n<li>多级别取消请求</li>\n<li>和Activity生命周期的联动（Activity结束时同时取消所有网络请求）<br>使用Volley可以简化一些网络通信的开发，当然Volley不适合大数据（largepayloads）和流媒体的网络请求。例如上百兆的文件、视频下载。</li>\n<li>Volley开源，可以进行定制修改也可以直接使用Jar包的形式。</li>\n</ul>\n<h3 id=\"Volley的用法\"><a href=\"#Volley的用法\" class=\"headerlink\" title=\"Volley的用法\"></a>Volley的用法</h3><blockquote>\n<ol>\n<li>Volley的Get和Post请求方式的使用</li>\n<li>Volley的网络请求队列建立和取消队列请求</li>\n</ol>\n</blockquote>\n<ol>\n<li><p>Volley的Get和Post请求方式的使用<br>Get和Post用于与服务器间请求和发送数据。<br>建立请求首先建立队列，将请求添加到请求队列里。<br>然后进行相应的Get和Post请求，请求结果在回调里获取解析。</p>\n</li>\n<li><p>Volley的网络请求队列建立和取消队列请求<br>Volley有自己的请求队列管理机制，可以控制每个请求的建立与取消。非常方便和安全。<br>这样也就可以做到随时控制某个请求在什么时候结束，Activity生命周期关联，防止无谓的请求。</p>\n</li>\n</ol>\n<h3 id=\"Volley的简单测试demo\"><a href=\"#Volley的简单测试demo\" class=\"headerlink\" title=\"Volley的简单测试demo\"></a>Volley的简单测试demo</h3><p>1.新建一个MyApplication类，继承自Application ，用于返回一个全局的Volley网络请求队列<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xkcoding.volley;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.app.Application;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.RequestQueue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.toolbox.Volley;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * <span class=\"doctag\">@ClassName</span>: MyApplication</span><br><span class=\"line\"> * <span class=\"doctag\">@Description</span>: 用于生成一个全局的请求队列</span><br><span class=\"line\"> * <span class=\"doctag\">@author</span> Yangkai.Shen</span><br><span class=\"line\"> * <span class=\"doctag\">@date</span> 2016-3-26 上午1:09:10</span><br><span class=\"line\"> * </span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> RequestQueue queue;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.onCreate();</span><br><span class=\"line\">\t\tqueue = Volley.newRequestQueue(getApplicationContext());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * <span class=\"doctag\">@Title</span>: getRequestQueue</span><br><span class=\"line\">\t * <span class=\"doctag\">@Description</span>: 获取一个全局的请求队列</span><br><span class=\"line\">\t * <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span> 参数说明</span><br><span class=\"line\">\t * <span class=\"doctag\">@return</span> RequestQueue 返回类型</span><br><span class=\"line\">\t * <span class=\"doctag\">@throws</span></span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> RequestQueue <span class=\"title\">getRequestQueue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> queue;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>2.在MainActivity中编写测试GET与POST请求的代码<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xkcoding.volley;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.app.Activity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.Menu;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.Toast;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.Request.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.AuthFailureError;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.Response;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.Response.Listener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.VolleyError;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.toolbox.StringRequest;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * <span class=\"doctag\">@ClassName</span>: MainActivity</span><br><span class=\"line\"> * <span class=\"doctag\">@Description</span>: 1. Volley的Get和Post请求方式的使用 2. Volley的网络请求队列建立和取消队列请求</span><br><span class=\"line\"> * <span class=\"doctag\">@author</span> Yangkai.Shen</span><br><span class=\"line\"> * <span class=\"doctag\">@date</span> 2016-3-26 上午1:08:27</span><br><span class=\"line\"> * </span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">\t\tsetContentView(R.layout.activity_main);</span><br><span class=\"line\">\t\tvolley_Get();</span><br><span class=\"line\">\t\tvolley_Post();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * <span class=\"doctag\">@Title</span>: volley_Get</span><br><span class=\"line\">\t * <span class=\"doctag\">@Description</span>: 测试GET方法</span><br><span class=\"line\">\t * <span class=\"doctag\">@param</span> 参数说明</span><br><span class=\"line\">\t * <span class=\"doctag\">@return</span> void 返回类型</span><br><span class=\"line\">\t * <span class=\"doctag\">@throws</span></span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">volley_Get</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//测试url为聚合数据的手机归属地查询</span></span><br><span class=\"line\">\t\tString url = <span class=\"string\">\"http://apis.juhe.cn/mobile/get?phone=13429667914&amp;key=ebe4429a46cb136bc7fcee57806fe952\"</span>;</span><br><span class=\"line\">\t\tStringRequest request = <span class=\"keyword\">new</span> StringRequest(Method.GET, url,</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">new</span> Listener&lt;String&gt;() &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 成功时回调</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onResponse</span><span class=\"params\">(String arg0)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\tLog.i(<span class=\"string\">\"volley_Get\"</span>, arg0);</span><br><span class=\"line\">\t\t\t\t\t\tToast.makeText(getApplicationContext(), arg0,</span><br><span class=\"line\">\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;, <span class=\"keyword\">new</span> Response.ErrorListener() &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 失败时回调</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onErrorResponse</span><span class=\"params\">(VolleyError arg0)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\tToast.makeText(getApplicationContext(), <span class=\"string\">\"网络请求失败\"</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 加标签，便于在Activity销毁时，断开网络请求</span></span><br><span class=\"line\">\t\trequest.setTag(<span class=\"string\">\"testGet\"</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将请求放入请求队列</span></span><br><span class=\"line\">\t\tMyApplication.getRequestQueue().add(request);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">volley_Post</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//测试url为聚合数据的手机归属地查询</span></span><br><span class=\"line\">\t\tString url = <span class=\"string\">\"http://apis.juhe.cn/mobile/get?\"</span>;</span><br><span class=\"line\">\t\tStringRequest request = <span class=\"keyword\">new</span> StringRequest(Method.POST, url,</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">new</span> Listener&lt;String&gt;() &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 成功时回调</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onResponse</span><span class=\"params\">(String arg0)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\tLog.i(<span class=\"string\">\"volley_Post\"</span>, arg0);</span><br><span class=\"line\">\t\t\t\t\t\tToast.makeText(getApplicationContext(), arg0,</span><br><span class=\"line\">\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;, <span class=\"keyword\">new</span> Response.ErrorListener() &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 失败时回调</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onErrorResponse</span><span class=\"params\">(VolleyError arg0)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\tToast.makeText(getApplicationContext(), <span class=\"string\">\"网络请求失败\"</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// POST请求所附带的请求参数</span></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">protected</span> Map&lt;String, String&gt; <span class=\"title\">getParams</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> AuthFailureError </span>&#123;</span><br><span class=\"line\">\t\t\t\tHashMap&lt;String, String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;String, String&gt;();</span><br><span class=\"line\">\t\t\t\tmap.put(<span class=\"string\">\"phone\"</span>, <span class=\"string\">\"13429667914\"</span>);</span><br><span class=\"line\">\t\t\t\tmap.put(<span class=\"string\">\"key\"</span>, <span class=\"string\">\"ebe4429a46cb136bc7fcee57806fe952\"</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> map;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 加标签，便于在Activity销毁时，断开网络请求</span></span><br><span class=\"line\">\t\trequest.setTag(<span class=\"string\">\"testPost\"</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将请求放入请求队列</span></span><br><span class=\"line\">\t\tMyApplication.getRequestQueue().add(request);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onStop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// Activity销毁时取消请求队列列的所有请求，通过Tags找到所有请求</span></span><br><span class=\"line\">\t\tMyApplication.getRequestQueue().cancelAll(<span class=\"string\">\"testGet\"</span>);</span><br><span class=\"line\">\t\tMyApplication.getRequestQueue().cancelAll(<span class=\"string\">\"testPost\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.onStop();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>3.在清单文件AndroidManifest.xml中注册刚刚的MyApplication并添加网络权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.INTERNET\"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>4.Ctrl+F11 成功在LogCat中打印出号码信息<br><img src=\"/resources/volley-demo-20160326012642.png\" alt=\"LogCat信息\"></p>\n","excerpt":"<p><h2 id=\"intro\">前言</h2>Http网络数据交互请求是极其重要并且使用很频繁的一个模块，也是最基本的网络编程所需要学习的。网络请求方式的效率和性能直接影响到APP的整体用户体验流畅性，所以学习并掌握一款好的Http请求框架对我们的网络开发非常重要。Http请求在移动网络编程中主要是Get和Post请求接口数据的使用。所以，在学习好基础的Http请求知识后，为了提升开发效率，选择学习使用一款好的Http网络请求框架变得非常的重要。<br>","more":"</p>\n<blockquote>\n<p>什么是Volley？汉语译过来就是：齐射; 迸发的意思。可以看出来，Volley特别适合数据量不大但是通信频繁的场景。<br>Volley是Google I/O 2013上Google官方发布的一款Android平台上的网络通信库。<br>以前的网络请求，要考虑开启线程、内存泄漏、性能等等复杂的问题。但是Volley框架已经帮我们把这些问题处理好了，对外提供了相应的完善的请求API ，我们只需要按照要求使用即可</p>\n</blockquote>\n<h3 id=\"Volley框架的特点\"><a href=\"#Volley框架的特点\" class=\"headerlink\" title=\"Volley框架的特点\"></a>Volley框架的特点</h3><ul>\n<li>能使网络通信更快，更简单，更健壮</li>\n<li>Get、Post网络请求及网络图像的高效率异步处理请求</li>\n<li>可以对网络请求进行排序优先级管理</li>\n<li>网络请求的缓存</li>\n<li>多级别取消请求</li>\n<li>和Activity生命周期的联动（Activity结束时同时取消所有网络请求）<br>使用Volley可以简化一些网络通信的开发，当然Volley不适合大数据（largepayloads）和流媒体的网络请求。例如上百兆的文件、视频下载。</li>\n<li>Volley开源，可以进行定制修改也可以直接使用Jar包的形式。</li>\n</ul>\n<h3 id=\"Volley的用法\"><a href=\"#Volley的用法\" class=\"headerlink\" title=\"Volley的用法\"></a>Volley的用法</h3><blockquote>\n<ol>\n<li>Volley的Get和Post请求方式的使用</li>\n<li>Volley的网络请求队列建立和取消队列请求</li>\n</ol>\n</blockquote>\n<ol>\n<li><p>Volley的Get和Post请求方式的使用<br>Get和Post用于与服务器间请求和发送数据。<br>建立请求首先建立队列，将请求添加到请求队列里。<br>然后进行相应的Get和Post请求，请求结果在回调里获取解析。</p>\n</li>\n<li><p>Volley的网络请求队列建立和取消队列请求<br>Volley有自己的请求队列管理机制，可以控制每个请求的建立与取消。非常方便和安全。<br>这样也就可以做到随时控制某个请求在什么时候结束，Activity生命周期关联，防止无谓的请求。</p>\n</li>\n</ol>\n<h3 id=\"Volley的简单测试demo\"><a href=\"#Volley的简单测试demo\" class=\"headerlink\" title=\"Volley的简单测试demo\"></a>Volley的简单测试demo</h3><p>1.新建一个MyApplication类，继承自Application ，用于返回一个全局的Volley网络请求队列<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xkcoding.volley;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.app.Application;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.RequestQueue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.toolbox.Volley;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * <span class=\"doctag\">@ClassName</span>: MyApplication</span><br><span class=\"line\"> * <span class=\"doctag\">@Description</span>: 用于生成一个全局的请求队列</span><br><span class=\"line\"> * <span class=\"doctag\">@author</span> Yangkai.Shen</span><br><span class=\"line\"> * <span class=\"doctag\">@date</span> 2016-3-26 上午1:09:10</span><br><span class=\"line\"> * </span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> RequestQueue queue;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.onCreate();</span><br><span class=\"line\">\t\tqueue = Volley.newRequestQueue(getApplicationContext());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * <span class=\"doctag\">@Title</span>: getRequestQueue</span><br><span class=\"line\">\t * <span class=\"doctag\">@Description</span>: 获取一个全局的请求队列</span><br><span class=\"line\">\t * <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span> 参数说明</span><br><span class=\"line\">\t * <span class=\"doctag\">@return</span> RequestQueue 返回类型</span><br><span class=\"line\">\t * <span class=\"doctag\">@throws</span></span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> RequestQueue <span class=\"title\">getRequestQueue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> queue;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>2.在MainActivity中编写测试GET与POST请求的代码<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xkcoding.volley;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.app.Activity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.Menu;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.Toast;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.Request.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.AuthFailureError;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.Response;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.Response.Listener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.VolleyError;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.android.volley.toolbox.StringRequest;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * <span class=\"doctag\">@ClassName</span>: MainActivity</span><br><span class=\"line\"> * <span class=\"doctag\">@Description</span>: 1. Volley的Get和Post请求方式的使用 2. Volley的网络请求队列建立和取消队列请求</span><br><span class=\"line\"> * <span class=\"doctag\">@author</span> Yangkai.Shen</span><br><span class=\"line\"> * <span class=\"doctag\">@date</span> 2016-3-26 上午1:08:27</span><br><span class=\"line\"> * </span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">\t\tsetContentView(R.layout.activity_main);</span><br><span class=\"line\">\t\tvolley_Get();</span><br><span class=\"line\">\t\tvolley_Post();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span><br><span class=\"line\">\t * <span class=\"doctag\">@Title</span>: volley_Get</span><br><span class=\"line\">\t * <span class=\"doctag\">@Description</span>: 测试GET方法</span><br><span class=\"line\">\t * <span class=\"doctag\">@param</span> 参数说明</span><br><span class=\"line\">\t * <span class=\"doctag\">@return</span> void 返回类型</span><br><span class=\"line\">\t * <span class=\"doctag\">@throws</span></span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">volley_Get</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//测试url为聚合数据的手机归属地查询</span></span><br><span class=\"line\">\t\tString url = <span class=\"string\">\"http://apis.juhe.cn/mobile/get?phone=13429667914&amp;key=ebe4429a46cb136bc7fcee57806fe952\"</span>;</span><br><span class=\"line\">\t\tStringRequest request = <span class=\"keyword\">new</span> StringRequest(Method.GET, url,</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">new</span> Listener&lt;String&gt;() &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 成功时回调</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onResponse</span><span class=\"params\">(String arg0)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\tLog.i(<span class=\"string\">\"volley_Get\"</span>, arg0);</span><br><span class=\"line\">\t\t\t\t\t\tToast.makeText(getApplicationContext(), arg0,</span><br><span class=\"line\">\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;, <span class=\"keyword\">new</span> Response.ErrorListener() &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 失败时回调</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onErrorResponse</span><span class=\"params\">(VolleyError arg0)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\tToast.makeText(getApplicationContext(), <span class=\"string\">\"网络请求失败\"</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 加标签，便于在Activity销毁时，断开网络请求</span></span><br><span class=\"line\">\t\trequest.setTag(<span class=\"string\">\"testGet\"</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将请求放入请求队列</span></span><br><span class=\"line\">\t\tMyApplication.getRequestQueue().add(request);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">volley_Post</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//测试url为聚合数据的手机归属地查询</span></span><br><span class=\"line\">\t\tString url = <span class=\"string\">\"http://apis.juhe.cn/mobile/get?\"</span>;</span><br><span class=\"line\">\t\tStringRequest request = <span class=\"keyword\">new</span> StringRequest(Method.POST, url,</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">new</span> Listener&lt;String&gt;() &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 成功时回调</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onResponse</span><span class=\"params\">(String arg0)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\tLog.i(<span class=\"string\">\"volley_Post\"</span>, arg0);</span><br><span class=\"line\">\t\t\t\t\t\tToast.makeText(getApplicationContext(), arg0,</span><br><span class=\"line\">\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;, <span class=\"keyword\">new</span> Response.ErrorListener() &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 失败时回调</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onErrorResponse</span><span class=\"params\">(VolleyError arg0)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\tToast.makeText(getApplicationContext(), <span class=\"string\">\"网络请求失败\"</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// POST请求所附带的请求参数</span></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">protected</span> Map&lt;String, String&gt; <span class=\"title\">getParams</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> AuthFailureError </span>&#123;</span><br><span class=\"line\">\t\t\t\tHashMap&lt;String, String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;String, String&gt;();</span><br><span class=\"line\">\t\t\t\tmap.put(<span class=\"string\">\"phone\"</span>, <span class=\"string\">\"13429667914\"</span>);</span><br><span class=\"line\">\t\t\t\tmap.put(<span class=\"string\">\"key\"</span>, <span class=\"string\">\"ebe4429a46cb136bc7fcee57806fe952\"</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> map;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 加标签，便于在Activity销毁时，断开网络请求</span></span><br><span class=\"line\">\t\trequest.setTag(<span class=\"string\">\"testPost\"</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 将请求放入请求队列</span></span><br><span class=\"line\">\t\tMyApplication.getRequestQueue().add(request);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onStop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// Activity销毁时取消请求队列列的所有请求，通过Tags找到所有请求</span></span><br><span class=\"line\">\t\tMyApplication.getRequestQueue().cancelAll(<span class=\"string\">\"testGet\"</span>);</span><br><span class=\"line\">\t\tMyApplication.getRequestQueue().cancelAll(<span class=\"string\">\"testPost\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.onStop();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>3.在清单文件AndroidManifest.xml中注册刚刚的MyApplication并添加网络权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.INTERNET\"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>4.Ctrl+F11 成功在LogCat中打印出号码信息<br><img src=\"/resources/volley-demo-20160326012642.png\" alt=\"LogCat信息\"></p>"},{"title":"Ubuntu-15.04安装jdk","comments":1,"fancybox":false,"toc":true,"date":"2016-03-23T16:00:46.000Z","description":null,"top":null,"_content":"<h2 id=\"intro\">前言</h2>最近在Linux上学习Python，而PyCharm需要java环境的支持，本文记录了在Ubuntu-15.04上安装jdk1.8版本的步骤与遇到的问题。\n<!-- more -->\n## 方式一\n>**Ubuntu安装JDK**\n\n>**系统版本：**Ubuntu 15.04 x64\n\n>**JDK版本：**jdk-8u60-linux-x64\n\n### 步骤详解\n1. 查看系统位数，输入以下命令即可\n\t`getconf LONG_BIT`\n\n2. 下载对应的JDK文件，我这里下载的是**jdk-8u60-linux-64.tar.gz**\n\n3. 创建目录作为JDK的安装目录，这里选择安装位置为:**/usr/java/**\n\t`sudo mkdir /usr/java`\n\n4. 解压文件带/usr/java/目录下，文件下载的位置是在download目录下的\n\t`cd download`\n\t`sudo tar zxvf jdk-8u60-linux-x64.tar.gz -C /usr/java/`\n\n5. 进入到**/usr/java/**目录，给文件夹改名（这一步并非必须，但是为了配置环境变量方便，建议这样做）\n\t`cd /usr/java/`\n\t`sudo mv jdk1.8.0_60 jdk_8u60`\n\n6. 配置系统环境变量\n\t`sudo gedit /etc/environment`\n\n\t加入以下的内容\n\t`PATH=\":$JAVA_HOME/bin\"`\n\t`export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib`\n\t`export JAVA_HOME=/usr/java/jdk_8u60`\n\n\t修改完成后保存并关闭，输入以下命令使环境变量生效\t\n\t`source /etc/environment`\n\n7. 使用echo命令检查环境变量的配置情况\n\t`echo $JAVA_HOME`\n\t>输出 /usr/java/jdk_8u60\n\t\n\t`echo $CLASSPATH`\n\t>输出 .:/usr/java/jdk_8u60/lib:/usr/java/jdk_8u60/jre/lib\n\t\n\t`echo $PATH`\n\t>输出 /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/java/jdk_8u60/bin\n\n8. 查看安装版本:\n\t>java -version\n\t>Picked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jar\n\t>java version \"1.8.0_60\"\n\t>Java(TM) SE Runtime Environment (build 1.8.0_60-b27)\n\t>Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)\n\n9. 设置所有用户的环境变量，不然重启之后依然找不到java命令\n\t`sudo gedit /etc/profile`\n\n\t添加以下内容即可(注意替换路径):\n\t\n\t`#set Java environment`\t\n\t`JAVA_HOME=/usr/java/jdk_8u60`\n\t`export JRE_HOME=/usr/java/jdk_8u60/jre`\n\t`export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH`\n\t`export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH`\n\n10. 重启电脑，使配置生效。\n\n11. 结束了？没有！！！\n\t>如果使用Myeclipse等IDE的或者安装了多个jdk版本的请继续向下看↓↓↓\n\n12. 修改默认的JDK(注意替换路径)\n\t`sudo update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/java/jdk_8u60/bin/java\" 300`\n\t`sudo update-alternatives --install \"/usr/bin/javac\" \"javac\" \"/usr/java/jdk_8u60/bin/javac\" 300`\n\t`sudo update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"/usr/java/jdk_8u60/bin/javaws\" 300`\n\n\t>以上是为不同的命令建立链接，如果存在多个JDK只需要替换路径重新执行一遍即可建立链接，执行以下命令选择链接，如果每个选项只建立了一个链接，系统不会提供选项，如果存在多个链接，请根据需要选择不同选项\n\t\n\t`sudo update-alternatives --config java`\n\t`sudo update-alternatives --config javac`\n\t`sudo update-alternatives --config javaws`\n\n\n\n## 方式二\n\n1. 如果在 Ubuntu 软件中心安装过 OpenJDK，使用如下命令将其删除：\n`sudo apt-get purge openjdk*`\n\n2. 添加源和更新\n`sudo add-apt-repository ppa:webupd8team/java`\n`sudo apt-get update`\n\n3. 安装java 8\n`sudo apt-get install Oracle-java8-installer`\n\n## 安装时常见错误处理\n1. 安装时VirtualBox异常退出，重进时报如下错误：\n\t**dpkg 被中断,您必须手工运行 sudo dpkg --configure -a 解决此问题。**\n\t解决方法：\n\t`sudo rm /var/lib/dpkg/updates/*`\n\t`sudo apt-get update`\n\t`sudo apt-get upgrade`\n\n2. 运行`java -version`出现如下错误:\n\t**Picked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jar。**\n\t解决方法：\n\t`sudo rm /usr/share/upstart/sessions/jayatana.conf`\n\t`sudo add-apt-repository ppa:danjaredg/jayatana`\n\t`sudo apt-get update`\n\t`sudo apt-get install jayatana`\n\t再正常运行正常：\n\t`xkcoding@Yangkai:~$ ~/workspace$ java -version`\n\t`java version \"1.8.0_60\"`\n\t`Java(TM) SE Runtime Environment (build 1.8.0_60-b27)`\n\t`Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)`\n\n","source":"_posts/2016-03-24.ubuntu-15.04-install-jdk.md","raw":"---\ntitle: Ubuntu-15.04安装jdk\ncomments: true\nfancybox: false\ntoc: true\ndate: 2016-03-24 00:00:46\ntags:\n- Linux\n- JDK\ncategories:\n- Linux\ndescription: \npermalink: ubuntu-15.04-install-jdk\ntop:\n---\n<h2 id=\"intro\">前言</h2>最近在Linux上学习Python，而PyCharm需要java环境的支持，本文记录了在Ubuntu-15.04上安装jdk1.8版本的步骤与遇到的问题。\n<!-- more -->\n## 方式一\n>**Ubuntu安装JDK**\n\n>**系统版本：**Ubuntu 15.04 x64\n\n>**JDK版本：**jdk-8u60-linux-x64\n\n### 步骤详解\n1. 查看系统位数，输入以下命令即可\n\t`getconf LONG_BIT`\n\n2. 下载对应的JDK文件，我这里下载的是**jdk-8u60-linux-64.tar.gz**\n\n3. 创建目录作为JDK的安装目录，这里选择安装位置为:**/usr/java/**\n\t`sudo mkdir /usr/java`\n\n4. 解压文件带/usr/java/目录下，文件下载的位置是在download目录下的\n\t`cd download`\n\t`sudo tar zxvf jdk-8u60-linux-x64.tar.gz -C /usr/java/`\n\n5. 进入到**/usr/java/**目录，给文件夹改名（这一步并非必须，但是为了配置环境变量方便，建议这样做）\n\t`cd /usr/java/`\n\t`sudo mv jdk1.8.0_60 jdk_8u60`\n\n6. 配置系统环境变量\n\t`sudo gedit /etc/environment`\n\n\t加入以下的内容\n\t`PATH=\":$JAVA_HOME/bin\"`\n\t`export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib`\n\t`export JAVA_HOME=/usr/java/jdk_8u60`\n\n\t修改完成后保存并关闭，输入以下命令使环境变量生效\t\n\t`source /etc/environment`\n\n7. 使用echo命令检查环境变量的配置情况\n\t`echo $JAVA_HOME`\n\t>输出 /usr/java/jdk_8u60\n\t\n\t`echo $CLASSPATH`\n\t>输出 .:/usr/java/jdk_8u60/lib:/usr/java/jdk_8u60/jre/lib\n\t\n\t`echo $PATH`\n\t>输出 /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/java/jdk_8u60/bin\n\n8. 查看安装版本:\n\t>java -version\n\t>Picked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jar\n\t>java version \"1.8.0_60\"\n\t>Java(TM) SE Runtime Environment (build 1.8.0_60-b27)\n\t>Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)\n\n9. 设置所有用户的环境变量，不然重启之后依然找不到java命令\n\t`sudo gedit /etc/profile`\n\n\t添加以下内容即可(注意替换路径):\n\t\n\t`#set Java environment`\t\n\t`JAVA_HOME=/usr/java/jdk_8u60`\n\t`export JRE_HOME=/usr/java/jdk_8u60/jre`\n\t`export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH`\n\t`export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH`\n\n10. 重启电脑，使配置生效。\n\n11. 结束了？没有！！！\n\t>如果使用Myeclipse等IDE的或者安装了多个jdk版本的请继续向下看↓↓↓\n\n12. 修改默认的JDK(注意替换路径)\n\t`sudo update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/java/jdk_8u60/bin/java\" 300`\n\t`sudo update-alternatives --install \"/usr/bin/javac\" \"javac\" \"/usr/java/jdk_8u60/bin/javac\" 300`\n\t`sudo update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"/usr/java/jdk_8u60/bin/javaws\" 300`\n\n\t>以上是为不同的命令建立链接，如果存在多个JDK只需要替换路径重新执行一遍即可建立链接，执行以下命令选择链接，如果每个选项只建立了一个链接，系统不会提供选项，如果存在多个链接，请根据需要选择不同选项\n\t\n\t`sudo update-alternatives --config java`\n\t`sudo update-alternatives --config javac`\n\t`sudo update-alternatives --config javaws`\n\n\n\n## 方式二\n\n1. 如果在 Ubuntu 软件中心安装过 OpenJDK，使用如下命令将其删除：\n`sudo apt-get purge openjdk*`\n\n2. 添加源和更新\n`sudo add-apt-repository ppa:webupd8team/java`\n`sudo apt-get update`\n\n3. 安装java 8\n`sudo apt-get install Oracle-java8-installer`\n\n## 安装时常见错误处理\n1. 安装时VirtualBox异常退出，重进时报如下错误：\n\t**dpkg 被中断,您必须手工运行 sudo dpkg --configure -a 解决此问题。**\n\t解决方法：\n\t`sudo rm /var/lib/dpkg/updates/*`\n\t`sudo apt-get update`\n\t`sudo apt-get upgrade`\n\n2. 运行`java -version`出现如下错误:\n\t**Picked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jar。**\n\t解决方法：\n\t`sudo rm /usr/share/upstart/sessions/jayatana.conf`\n\t`sudo add-apt-repository ppa:danjaredg/jayatana`\n\t`sudo apt-get update`\n\t`sudo apt-get install jayatana`\n\t再正常运行正常：\n\t`xkcoding@Yangkai:~$ ~/workspace$ java -version`\n\t`java version \"1.8.0_60\"`\n\t`Java(TM) SE Runtime Environment (build 1.8.0_60-b27)`\n\t`Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)`\n\n","slug":"ubuntu-15.04-install-jdk","published":1,"updated":"2016-09-06T01:55:00.610Z","layout":"post","photos":[],"link":"","_id":"ciwn8lgus0006kw1gvrd9ya7x","content":"<p></p><h2 id=\"intro\">前言</h2>最近在Linux上学习Python，而PyCharm需要java环境的支持，本文记录了在Ubuntu-15.04上安装jdk1.8版本的步骤与遇到的问题。<br><a id=\"more\"></a><p></p>\n<h2 id=\"方式一\"><a href=\"#方式一\" class=\"headerlink\" title=\"方式一\"></a>方式一</h2><blockquote>\n<p><strong>Ubuntu安装JDK</strong></p>\n<p><strong>系统版本：</strong>Ubuntu 15.04 x64</p>\n<p><strong>JDK版本：</strong>jdk-8u60-linux-x64</p>\n</blockquote>\n<h3 id=\"步骤详解\"><a href=\"#步骤详解\" class=\"headerlink\" title=\"步骤详解\"></a>步骤详解</h3><ol>\n<li><p>查看系统位数，输入以下命令即可<br> <code>getconf LONG_BIT</code></p>\n</li>\n<li><p>下载对应的JDK文件，我这里下载的是<strong>jdk-8u60-linux-64.tar.gz</strong></p>\n</li>\n<li><p>创建目录作为JDK的安装目录，这里选择安装位置为:<strong>/usr/java/</strong><br> <code>sudo mkdir /usr/java</code></p>\n</li>\n<li><p>解压文件带/usr/java/目录下，文件下载的位置是在download目录下的<br> <code>cd download</code><br> <code>sudo tar zxvf jdk-8u60-linux-x64.tar.gz -C /usr/java/</code></p>\n</li>\n<li><p>进入到<strong>/usr/java/</strong>目录，给文件夹改名（这一步并非必须，但是为了配置环境变量方便，建议这样做）<br> <code>cd /usr/java/</code><br> <code>sudo mv jdk1.8.0_60 jdk_8u60</code></p>\n</li>\n<li><p>配置系统环境变量<br> <code>sudo gedit /etc/environment</code></p>\n<p> 加入以下的内容<br> <code>PATH=&quot;:$JAVA_HOME/bin&quot;</code><br> <code>export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib</code><br> <code>export JAVA_HOME=/usr/java/jdk_8u60</code></p>\n<p> 修改完成后保存并关闭，输入以下命令使环境变量生效<br> <code>source /etc/environment</code></p>\n</li>\n<li><p>使用echo命令检查环境变量的配置情况<br> <code>echo $JAVA_HOME</code></p>\n<blockquote>\n<p>输出 /usr/java/jdk_8u60</p>\n</blockquote>\n<p> <code>echo $CLASSPATH</code></p>\n<blockquote>\n<p>输出 .:/usr/java/jdk_8u60/lib:/usr/java/jdk_8u60/jre/lib</p>\n</blockquote>\n<p> <code>echo $PATH</code></p>\n<blockquote>\n<p>输出 /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/java/jdk_8u60/bin</p>\n</blockquote>\n</li>\n<li><p>查看安装版本:</p>\n<blockquote>\n<p>java -version<br>Picked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jar<br>java version “1.8.0_60”<br>Java(TM) SE Runtime Environment (build 1.8.0_60-b27)<br>Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)</p>\n</blockquote>\n</li>\n<li><p>设置所有用户的环境变量，不然重启之后依然找不到java命令<br> <code>sudo gedit /etc/profile</code></p>\n<p> 添加以下内容即可(注意替换路径):</p>\n<p> <code>#set Java environment</code><br> <code>JAVA_HOME=/usr/java/jdk_8u60</code><br> <code>export JRE_HOME=/usr/java/jdk_8u60/jre</code><br> <code>export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH</code><br> <code>export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</code></p>\n</li>\n<li><p>重启电脑，使配置生效。</p>\n</li>\n<li><p>结束了？没有！！！</p>\n<blockquote>\n<p>如果使用Myeclipse等IDE的或者安装了多个jdk版本的请继续向下看↓↓↓</p>\n</blockquote>\n</li>\n<li><p>修改默认的JDK(注意替换路径)<br><code>sudo update-alternatives --install &quot;/usr/bin/java&quot; &quot;java&quot; &quot;/usr/java/jdk_8u60/bin/java&quot; 300</code><br><code>sudo update-alternatives --install &quot;/usr/bin/javac&quot; &quot;javac&quot; &quot;/usr/java/jdk_8u60/bin/javac&quot; 300</code><br><code>sudo update-alternatives --install &quot;/usr/bin/javaws&quot; &quot;javaws&quot; &quot;/usr/java/jdk_8u60/bin/javaws&quot; 300</code></p>\n<blockquote>\n<p>以上是为不同的命令建立链接，如果存在多个JDK只需要替换路径重新执行一遍即可建立链接，执行以下命令选择链接，如果每个选项只建立了一个链接，系统不会提供选项，如果存在多个链接，请根据需要选择不同选项</p>\n</blockquote>\n<p><code>sudo update-alternatives --config java</code><br><code>sudo update-alternatives --config javac</code><br><code>sudo update-alternatives --config javaws</code></p>\n</li>\n</ol>\n<h2 id=\"方式二\"><a href=\"#方式二\" class=\"headerlink\" title=\"方式二\"></a>方式二</h2><ol>\n<li><p>如果在 Ubuntu 软件中心安装过 OpenJDK，使用如下命令将其删除：<br><code>sudo apt-get purge openjdk*</code></p>\n</li>\n<li><p>添加源和更新<br><code>sudo add-apt-repository ppa:webupd8team/java</code><br><code>sudo apt-get update</code></p>\n</li>\n<li><p>安装java 8<br><code>sudo apt-get install Oracle-java8-installer</code></p>\n</li>\n</ol>\n<h2 id=\"安装时常见错误处理\"><a href=\"#安装时常见错误处理\" class=\"headerlink\" title=\"安装时常见错误处理\"></a>安装时常见错误处理</h2><ol>\n<li><p>安装时VirtualBox异常退出，重进时报如下错误：<br> <strong>dpkg 被中断,您必须手工运行 sudo dpkg –configure -a 解决此问题。</strong><br> 解决方法：<br> <code>sudo rm /var/lib/dpkg/updates/*</code><br> <code>sudo apt-get update</code><br> <code>sudo apt-get upgrade</code></p>\n</li>\n<li><p>运行<code>java -version</code>出现如下错误:<br> <strong>Picked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jar。</strong><br> 解决方法：<br> <code>sudo rm /usr/share/upstart/sessions/jayatana.conf</code><br> <code>sudo add-apt-repository ppa:danjaredg/jayatana</code><br> <code>sudo apt-get update</code><br> <code>sudo apt-get install jayatana</code><br> 再正常运行正常：<br> <code>xkcoding@Yangkai:~$ ~/workspace$ java -version</code><br> <code>java version &quot;1.8.0_60&quot;</code><br> <code>Java(TM) SE Runtime Environment (build 1.8.0_60-b27)</code><br> <code>Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)</code></p>\n</li>\n</ol>\n","excerpt":"<p><h2 id=\"intro\">前言</h2>最近在Linux上学习Python，而PyCharm需要java环境的支持，本文记录了在Ubuntu-15.04上安装jdk1.8版本的步骤与遇到的问题。<br>","more":"</p>\n<h2 id=\"方式一\"><a href=\"#方式一\" class=\"headerlink\" title=\"方式一\"></a>方式一</h2><blockquote>\n<p><strong>Ubuntu安装JDK</strong></p>\n<p><strong>系统版本：</strong>Ubuntu 15.04 x64</p>\n<p><strong>JDK版本：</strong>jdk-8u60-linux-x64</p>\n</blockquote>\n<h3 id=\"步骤详解\"><a href=\"#步骤详解\" class=\"headerlink\" title=\"步骤详解\"></a>步骤详解</h3><ol>\n<li><p>查看系统位数，输入以下命令即可<br> <code>getconf LONG_BIT</code></p>\n</li>\n<li><p>下载对应的JDK文件，我这里下载的是<strong>jdk-8u60-linux-64.tar.gz</strong></p>\n</li>\n<li><p>创建目录作为JDK的安装目录，这里选择安装位置为:<strong>/usr/java/</strong><br> <code>sudo mkdir /usr/java</code></p>\n</li>\n<li><p>解压文件带/usr/java/目录下，文件下载的位置是在download目录下的<br> <code>cd download</code><br> <code>sudo tar zxvf jdk-8u60-linux-x64.tar.gz -C /usr/java/</code></p>\n</li>\n<li><p>进入到<strong>/usr/java/</strong>目录，给文件夹改名（这一步并非必须，但是为了配置环境变量方便，建议这样做）<br> <code>cd /usr/java/</code><br> <code>sudo mv jdk1.8.0_60 jdk_8u60</code></p>\n</li>\n<li><p>配置系统环境变量<br> <code>sudo gedit /etc/environment</code></p>\n<p> 加入以下的内容<br> <code>PATH=&quot;:$JAVA_HOME/bin&quot;</code><br> <code>export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib</code><br> <code>export JAVA_HOME=/usr/java/jdk_8u60</code></p>\n<p> 修改完成后保存并关闭，输入以下命令使环境变量生效<br> <code>source /etc/environment</code></p>\n</li>\n<li><p>使用echo命令检查环境变量的配置情况<br> <code>echo $JAVA_HOME</code></p>\n<blockquote>\n<p>输出 /usr/java/jdk_8u60</p>\n</blockquote>\n<p> <code>echo $CLASSPATH</code></p>\n<blockquote>\n<p>输出 .:/usr/java/jdk_8u60/lib:/usr/java/jdk_8u60/jre/lib</p>\n</blockquote>\n<p> <code>echo $PATH</code></p>\n<blockquote>\n<p>输出 /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/java/jdk_8u60/bin</p>\n</blockquote>\n</li>\n<li><p>查看安装版本:</p>\n<blockquote>\n<p>java -version<br>Picked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jar<br>java version “1.8.0_60”<br>Java(TM) SE Runtime Environment (build 1.8.0_60-b27)<br>Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)</p>\n</blockquote>\n</li>\n<li><p>设置所有用户的环境变量，不然重启之后依然找不到java命令<br> <code>sudo gedit /etc/profile</code></p>\n<p> 添加以下内容即可(注意替换路径):</p>\n<p> <code>#set Java environment</code><br> <code>JAVA_HOME=/usr/java/jdk_8u60</code><br> <code>export JRE_HOME=/usr/java/jdk_8u60/jre</code><br> <code>export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH</code><br> <code>export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</code></p>\n</li>\n<li><p>重启电脑，使配置生效。</p>\n</li>\n<li><p>结束了？没有！！！</p>\n<blockquote>\n<p>如果使用Myeclipse等IDE的或者安装了多个jdk版本的请继续向下看↓↓↓</p>\n</blockquote>\n</li>\n<li><p>修改默认的JDK(注意替换路径)<br><code>sudo update-alternatives --install &quot;/usr/bin/java&quot; &quot;java&quot; &quot;/usr/java/jdk_8u60/bin/java&quot; 300</code><br><code>sudo update-alternatives --install &quot;/usr/bin/javac&quot; &quot;javac&quot; &quot;/usr/java/jdk_8u60/bin/javac&quot; 300</code><br><code>sudo update-alternatives --install &quot;/usr/bin/javaws&quot; &quot;javaws&quot; &quot;/usr/java/jdk_8u60/bin/javaws&quot; 300</code></p>\n<blockquote>\n<p>以上是为不同的命令建立链接，如果存在多个JDK只需要替换路径重新执行一遍即可建立链接，执行以下命令选择链接，如果每个选项只建立了一个链接，系统不会提供选项，如果存在多个链接，请根据需要选择不同选项</p>\n</blockquote>\n<p><code>sudo update-alternatives --config java</code><br><code>sudo update-alternatives --config javac</code><br><code>sudo update-alternatives --config javaws</code></p>\n</li>\n</ol>\n<h2 id=\"方式二\"><a href=\"#方式二\" class=\"headerlink\" title=\"方式二\"></a>方式二</h2><ol>\n<li><p>如果在 Ubuntu 软件中心安装过 OpenJDK，使用如下命令将其删除：<br><code>sudo apt-get purge openjdk*</code></p>\n</li>\n<li><p>添加源和更新<br><code>sudo add-apt-repository ppa:webupd8team/java</code><br><code>sudo apt-get update</code></p>\n</li>\n<li><p>安装java 8<br><code>sudo apt-get install Oracle-java8-installer</code></p>\n</li>\n</ol>\n<h2 id=\"安装时常见错误处理\"><a href=\"#安装时常见错误处理\" class=\"headerlink\" title=\"安装时常见错误处理\"></a>安装时常见错误处理</h2><ol>\n<li><p>安装时VirtualBox异常退出，重进时报如下错误：<br> <strong>dpkg 被中断,您必须手工运行 sudo dpkg –configure -a 解决此问题。</strong><br> 解决方法：<br> <code>sudo rm /var/lib/dpkg/updates/*</code><br> <code>sudo apt-get update</code><br> <code>sudo apt-get upgrade</code></p>\n</li>\n<li><p>运行<code>java -version</code>出现如下错误:<br> <strong>Picked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jar。</strong><br> 解决方法：<br> <code>sudo rm /usr/share/upstart/sessions/jayatana.conf</code><br> <code>sudo add-apt-repository ppa:danjaredg/jayatana</code><br> <code>sudo apt-get update</code><br> <code>sudo apt-get install jayatana</code><br> 再正常运行正常：<br> <code>xkcoding@Yangkai:~$ ~/workspace$ java -version</code><br> <code>java version &quot;1.8.0_60&quot;</code><br> <code>Java(TM) SE Runtime Environment (build 1.8.0_60-b27)</code><br> <code>Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)</code></p>\n</li>\n</ol>"},{"title":"android 在eclipse中把局部变量变成成员变量前自动加m","comments":1,"fancybox":true,"toc":false,"date":"2016-03-27T04:22:09.000Z","description":null,"top":null,"_content":"<h2 id=\"intro\">前言</h2>在开发过程中,开发规范很重要,这样有利于后期维护,而且如果离职后,新同事接收你项目时也方便阅读代码,比如我们命名一个成员变量,一般在都是m子母开头。\n<!--more-->\n比如我们在一个方法中写一个变量,后来发现在其他地方也要用到此变量,这时我们就需要把这变量做成成员变量,我们只要按下ctrl+1,就会提示是否需要变成成员变量,如果要它自动在变量前加m，其实这也是可以配置的,如图:\n\n![eclipse中设置变量名前加m](/resources/eclipse-tips-20151107221921217.png)\n","source":"_posts/2016-03-27.eclipse-tips-variable.md","raw":"---\ntitle: android 在eclipse中把局部变量变成成员变量前自动加m\ncomments: true\nfancybox: true\ntoc: false\ndate: 2016-03-27 12:22:09\ntags:\n- Android\n- eclipse小技巧\ncategories:\n- Android\ndescription:\npermalink: eclipse-tips-variable\ntop:\n---\n<h2 id=\"intro\">前言</h2>在开发过程中,开发规范很重要,这样有利于后期维护,而且如果离职后,新同事接收你项目时也方便阅读代码,比如我们命名一个成员变量,一般在都是m子母开头。\n<!--more-->\n比如我们在一个方法中写一个变量,后来发现在其他地方也要用到此变量,这时我们就需要把这变量做成成员变量,我们只要按下ctrl+1,就会提示是否需要变成成员变量,如果要它自动在变量前加m，其实这也是可以配置的,如图:\n\n![eclipse中设置变量名前加m](/resources/eclipse-tips-20151107221921217.png)\n","slug":"eclipse-tips-variable","published":1,"updated":"2016-09-06T01:55:00.613Z","layout":"post","photos":[],"link":"","_id":"ciwn8lguy0008kw1gy0tsbqa2","content":"<p></p><h2 id=\"intro\">前言</h2>在开发过程中,开发规范很重要,这样有利于后期维护,而且如果离职后,新同事接收你项目时也方便阅读代码,比如我们命名一个成员变量,一般在都是m子母开头。<br><a id=\"more\"></a><br>比如我们在一个方法中写一个变量,后来发现在其他地方也要用到此变量,这时我们就需要把这变量做成成员变量,我们只要按下ctrl+1,就会提示是否需要变成成员变量,如果要它自动在变量前加m，其实这也是可以配置的,如图:<p></p>\n<p><img src=\"/resources/eclipse-tips-20151107221921217.png\" alt=\"eclipse中设置变量名前加m\"></p>\n","excerpt":"<p><h2 id=\"intro\">前言</h2>在开发过程中,开发规范很重要,这样有利于后期维护,而且如果离职后,新同事接收你项目时也方便阅读代码,比如我们命名一个成员变量,一般在都是m子母开头。<br>","more":"<br>比如我们在一个方法中写一个变量,后来发现在其他地方也要用到此变量,这时我们就需要把这变量做成成员变量,我们只要按下ctrl+1,就会提示是否需要变成成员变量,如果要它自动在变量前加m，其实这也是可以配置的,如图:</p>\n<p><img src=\"/resources/eclipse-tips-20151107221921217.png\" alt=\"eclipse中设置变量名前加m\"></p>"},{"title":"蓝桥杯感想","comments":1,"fancybox":false,"toc":false,"date":"2016-03-28T15:08:33.000Z","description":null,"top":null,"_content":"<h2 id=\"intro\">前言</h2>今年是我第一次参加蓝桥杯。3月20号。\n<!--more-->\n大一、大二的时候，我就对蓝桥杯有所耳闻，今年如愿以偿的报名了。曾经憧憬着可以在蓝桥杯轻松获得二等奖，兴许运气来了，一等也是有机会的。However，今晚（3月28号）成绩出来了，三等奖，GG了。大学从未有过的信心摧残。好了，炮灰就是炮灰，我也不会一直自怨自艾，我是个有态度的炮灰，总结一下失败的原因吧！\n\n#### 总结\n1. 自信心爆棚（自负）\n比赛前一个月，室友和我说，蓝桥杯还有一个月了，不做做模拟？当时我正在做一个Android项目，再加上一直对自己实力的自信，就没有在意；比赛前2周，室友说紧张不，我说小case。。终于我成功的裸考了（在进考场之前未做甚至未看一题模拟题)\n\n1. 学艺不精(对简单的算法不够熟练，对复杂的算法没有深究)\n1. 想到再补（不是想不到，而是实在太多了）\n\n#### 展望\n蓝桥杯，如果大四还可以参战的话，明年我还想再战，那时我必将全力以赴，毕竟大学不想留有遗憾。大学剩下的一年，我会尽自己最大的努力提升自己，以最好的姿态迎接毕业。","source":"_posts/2016-03-28.lanqiao-exam.md","raw":"---\ntitle: 蓝桥杯感想\ncomments: true\nfancybox: false\ntoc: false\ndate: 2016-03-28 23:08:33\ntags:\n- 随笔\ncategories:\n- 随笔\ndescription:\npermalink: lanqiao-exam\ntop:\n---\n<h2 id=\"intro\">前言</h2>今年是我第一次参加蓝桥杯。3月20号。\n<!--more-->\n大一、大二的时候，我就对蓝桥杯有所耳闻，今年如愿以偿的报名了。曾经憧憬着可以在蓝桥杯轻松获得二等奖，兴许运气来了，一等也是有机会的。However，今晚（3月28号）成绩出来了，三等奖，GG了。大学从未有过的信心摧残。好了，炮灰就是炮灰，我也不会一直自怨自艾，我是个有态度的炮灰，总结一下失败的原因吧！\n\n#### 总结\n1. 自信心爆棚（自负）\n比赛前一个月，室友和我说，蓝桥杯还有一个月了，不做做模拟？当时我正在做一个Android项目，再加上一直对自己实力的自信，就没有在意；比赛前2周，室友说紧张不，我说小case。。终于我成功的裸考了（在进考场之前未做甚至未看一题模拟题)\n\n1. 学艺不精(对简单的算法不够熟练，对复杂的算法没有深究)\n1. 想到再补（不是想不到，而是实在太多了）\n\n#### 展望\n蓝桥杯，如果大四还可以参战的话，明年我还想再战，那时我必将全力以赴，毕竟大学不想留有遗憾。大学剩下的一年，我会尽自己最大的努力提升自己，以最好的姿态迎接毕业。","slug":"lanqiao-exam","published":1,"updated":"2016-09-06T01:55:00.613Z","layout":"post","photos":[],"link":"","_id":"ciwn8lgv7000bkw1gitkcui6e","content":"<p></p><h2 id=\"intro\">前言</h2>今年是我第一次参加蓝桥杯。3月20号。<br><a id=\"more\"></a><br>大一、大二的时候，我就对蓝桥杯有所耳闻，今年如愿以偿的报名了。曾经憧憬着可以在蓝桥杯轻松获得二等奖，兴许运气来了，一等也是有机会的。However，今晚（3月28号）成绩出来了，三等奖，GG了。大学从未有过的信心摧残。好了，炮灰就是炮灰，我也不会一直自怨自艾，我是个有态度的炮灰，总结一下失败的原因吧！<p></p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ol>\n<li><p>自信心爆棚（自负）<br>比赛前一个月，室友和我说，蓝桥杯还有一个月了，不做做模拟？当时我正在做一个Android项目，再加上一直对自己实力的自信，就没有在意；比赛前2周，室友说紧张不，我说小case。。终于我成功的裸考了（在进考场之前未做甚至未看一题模拟题)</p>\n</li>\n<li><p>学艺不精(对简单的算法不够熟练，对复杂的算法没有深究)</p>\n</li>\n<li>想到再补（不是想不到，而是实在太多了）</li>\n</ol>\n<h4 id=\"展望\"><a href=\"#展望\" class=\"headerlink\" title=\"展望\"></a>展望</h4><p>蓝桥杯，如果大四还可以参战的话，明年我还想再战，那时我必将全力以赴，毕竟大学不想留有遗憾。大学剩下的一年，我会尽自己最大的努力提升自己，以最好的姿态迎接毕业。</p>\n","excerpt":"<p><h2 id=\"intro\">前言</h2>今年是我第一次参加蓝桥杯。3月20号。<br>","more":"<br>大一、大二的时候，我就对蓝桥杯有所耳闻，今年如愿以偿的报名了。曾经憧憬着可以在蓝桥杯轻松获得二等奖，兴许运气来了，一等也是有机会的。However，今晚（3月28号）成绩出来了，三等奖，GG了。大学从未有过的信心摧残。好了，炮灰就是炮灰，我也不会一直自怨自艾，我是个有态度的炮灰，总结一下失败的原因吧！</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ol>\n<li><p>自信心爆棚（自负）<br>比赛前一个月，室友和我说，蓝桥杯还有一个月了，不做做模拟？当时我正在做一个Android项目，再加上一直对自己实力的自信，就没有在意；比赛前2周，室友说紧张不，我说小case。。终于我成功的裸考了（在进考场之前未做甚至未看一题模拟题)</p>\n</li>\n<li><p>学艺不精(对简单的算法不够熟练，对复杂的算法没有深究)</p>\n</li>\n<li>想到再补（不是想不到，而是实在太多了）</li>\n</ol>\n<h4 id=\"展望\"><a href=\"#展望\" class=\"headerlink\" title=\"展望\"></a>展望</h4><p>蓝桥杯，如果大四还可以参战的话，明年我还想再战，那时我必将全力以赴，毕竟大学不想留有遗憾。大学剩下的一年，我会尽自己最大的努力提升自己，以最好的姿态迎接毕业。</p>"},{"title":"Android中svn不需要进行版本控制的部分","comments":1,"fancybox":true,"toc":false,"date":"2016-04-03T05:07:36.000Z","description":null,"top":null,"_content":"<h2 id=\"intro\">前言</h2>SVN是Subversion的简称，是一个开放源代码的版本控制系统，说得简单一点SVN就是用于多个人共同开发同一个项目，共用资源的目的。但是SVN对于Android项目来说并不是所有文件都需要进行版本控制的。\n> 1. bin，gen 两个文件夹不用提交，因为这两个文件夹是自动生成的，如果提交可能会产生编译异常。\n> 1. .settings也是自动生成，也不用提交。\n> 1. .git文件夹也不需要提交，这是存放git的配置信息\n> 1. .svn同.git一样，是存放svn的配置信息的，同样不需要提交\n\n<!--more-->\n- bin目录\n- gen目录\n- .svn目录\n- .settings目录\n- .git目录\n\n----------\n屏蔽上传的方式：window-->preferences-->team-->Ignored Resources-->Add Pattern最后添加完成点击Apply\n具体需要添加的部分见下图\n![eclipse中配置Android不需要版本控制的部分](/resources/android-svn-attention-20160403130946.png)\n","source":"_posts/2016-04-03.android-svn-attention.md","raw":"---\ntitle: Android中svn不需要进行版本控制的部分\ncomments: true\nfancybox: true\ntoc: false\ndate: 2016-04-03 13:07:36\ntags:\n- Android\n- svn\n- eclipse\ncategories:\n- Android\ndescription:\npermalink: android-svn-attention\ntop:\n---\n<h2 id=\"intro\">前言</h2>SVN是Subversion的简称，是一个开放源代码的版本控制系统，说得简单一点SVN就是用于多个人共同开发同一个项目，共用资源的目的。但是SVN对于Android项目来说并不是所有文件都需要进行版本控制的。\n> 1. bin，gen 两个文件夹不用提交，因为这两个文件夹是自动生成的，如果提交可能会产生编译异常。\n> 1. .settings也是自动生成，也不用提交。\n> 1. .git文件夹也不需要提交，这是存放git的配置信息\n> 1. .svn同.git一样，是存放svn的配置信息的，同样不需要提交\n\n<!--more-->\n- bin目录\n- gen目录\n- .svn目录\n- .settings目录\n- .git目录\n\n----------\n屏蔽上传的方式：window-->preferences-->team-->Ignored Resources-->Add Pattern最后添加完成点击Apply\n具体需要添加的部分见下图\n![eclipse中配置Android不需要版本控制的部分](/resources/android-svn-attention-20160403130946.png)\n","slug":"android-svn-attention","published":1,"updated":"2016-09-06T01:55:00.614Z","layout":"post","photos":[],"link":"","_id":"ciwn8lgvb000dkw1g5tsoostn","content":"<p></p><h2 id=\"intro\">前言</h2>SVN是Subversion的简称，是一个开放源代码的版本控制系统，说得简单一点SVN就是用于多个人共同开发同一个项目，共用资源的目的。但是SVN对于Android项目来说并不是所有文件都需要进行版本控制的。<p></p>\n<blockquote>\n<ol>\n<li>bin，gen 两个文件夹不用提交，因为这两个文件夹是自动生成的，如果提交可能会产生编译异常。</li>\n<li>.settings也是自动生成，也不用提交。</li>\n<li>.git文件夹也不需要提交，这是存放git的配置信息</li>\n<li>.svn同.git一样，是存放svn的配置信息的，同样不需要提交</li>\n</ol>\n</blockquote>\n<a id=\"more\"></a>\n<ul>\n<li>bin目录</li>\n<li>gen目录</li>\n<li>.svn目录</li>\n<li>.settings目录</li>\n<li>.git目录</li>\n</ul>\n<hr>\n<p>屏蔽上传的方式：window–&gt;preferences–&gt;team–&gt;Ignored Resources–&gt;Add Pattern最后添加完成点击Apply<br>具体需要添加的部分见下图<br><img src=\"/resources/android-svn-attention-20160403130946.png\" alt=\"eclipse中配置Android不需要版本控制的部分\"></p>\n","excerpt":"<p><h2 id=\"intro\">前言</h2>SVN是Subversion的简称，是一个开放源代码的版本控制系统，说得简单一点SVN就是用于多个人共同开发同一个项目，共用资源的目的。但是SVN对于Android项目来说并不是所有文件都需要进行版本控制的。</p>\n<blockquote>\n<ol>\n<li>bin，gen 两个文件夹不用提交，因为这两个文件夹是自动生成的，如果提交可能会产生编译异常。</li>\n<li>.settings也是自动生成，也不用提交。</li>\n<li>.git文件夹也不需要提交，这是存放git的配置信息</li>\n<li>.svn同.git一样，是存放svn的配置信息的，同样不需要提交</li>\n</ol>\n</blockquote>","more":"<ul>\n<li>bin目录</li>\n<li>gen目录</li>\n<li>.svn目录</li>\n<li>.settings目录</li>\n<li>.git目录</li>\n</ul>\n<hr>\n<p>屏蔽上传的方式：window–&gt;preferences–&gt;team–&gt;Ignored Resources–&gt;Add Pattern最后添加完成点击Apply<br>具体需要添加的部分见下图<br><img src=\"/resources/android-svn-attention-20160403130946.png\" alt=\"eclipse中配置Android不需要版本控制的部分\"></p>"},{"title":"Lenovo System X3250 M5服务器安装CentOS6.4","comments":1,"fancybox":false,"toc":false,"date":"2016-08-31T02:46:09.000Z","description":null,"top":null,"_content":"<h2 id=\"intro\">前言</h2>\n第一次真正接触服务器，公司要求安装linux系统，花了2天时间，因为该服务器比较复杂，以此文记录下安装过程中出现的问题。\n<!--more-->\n### 问题一：安装系统时无法识别硬盘\n\n**问题描述：**\n\nLenovo System X3250 M5 该服务器最初是存在磁盘阵列的，也就是Raid模式，因此使用 `U盘安装系统` 时，有时会出现无法识别硬盘的状态。\n\n**问题解决：**\n\n手动加载驱动的方法\n\n* centos 6.2进入安装界面时**Tab**键进入高级选项，追加输入 `linux dd`，这样安装时会提示加载disk driver。用管理卡挂载驱动镜像即可。\n\n* centos 5.8进入安装界面直接在boot:后面输入 `linux dd`。\n\nPXE安装自动加载驱动\n\n* ks文件中在开头附近增加driverdisk选项 `driverdisk --source=http://$ip/driverimg.iso`\n\n### 问题二：使用U盘安装系统，安装过程中说找不到ISO文件\n\n**问题描述：**\n\n该问题是使用U盘安装系统时会出现的，使用U盘安装的步骤：\n\n1. 使用UltraISO（软碟通）将linux系统镜像写入U盘 ，并且将ISO文件放入U盘\n2. 设置U盘启动\n3. 安装\n\n**问题解决：**\n\n* 方法一：该问题是因为第一步中，U盘格式为**FAT32**格式，因此镜像大小需小于4G才可以放入U盘，一般系统64位的都会大于4G，选择32位的即可解决。\n* 方法二：\n\t1. 采用外接光驱，使用UltraISO（软碟通）将镜像写入一张白盘\n\t2. 设置光盘启动\n\t3. 安装，亲测，成功！","source":"_posts/2016-08-31.server-install-centos6.md","raw":"---\ntitle: Lenovo System X3250 M5服务器安装CentOS6.4\ncomments: true\nfancybox: false\ntoc: false\ndate: 2016-08-31 10:46:09\ntags:\n- Linux\ncategories:\n- Linux\ndescription:\npermalink: server-install-centos6\ntop: \n---\n<h2 id=\"intro\">前言</h2>\n第一次真正接触服务器，公司要求安装linux系统，花了2天时间，因为该服务器比较复杂，以此文记录下安装过程中出现的问题。\n<!--more-->\n### 问题一：安装系统时无法识别硬盘\n\n**问题描述：**\n\nLenovo System X3250 M5 该服务器最初是存在磁盘阵列的，也就是Raid模式，因此使用 `U盘安装系统` 时，有时会出现无法识别硬盘的状态。\n\n**问题解决：**\n\n手动加载驱动的方法\n\n* centos 6.2进入安装界面时**Tab**键进入高级选项，追加输入 `linux dd`，这样安装时会提示加载disk driver。用管理卡挂载驱动镜像即可。\n\n* centos 5.8进入安装界面直接在boot:后面输入 `linux dd`。\n\nPXE安装自动加载驱动\n\n* ks文件中在开头附近增加driverdisk选项 `driverdisk --source=http://$ip/driverimg.iso`\n\n### 问题二：使用U盘安装系统，安装过程中说找不到ISO文件\n\n**问题描述：**\n\n该问题是使用U盘安装系统时会出现的，使用U盘安装的步骤：\n\n1. 使用UltraISO（软碟通）将linux系统镜像写入U盘 ，并且将ISO文件放入U盘\n2. 设置U盘启动\n3. 安装\n\n**问题解决：**\n\n* 方法一：该问题是因为第一步中，U盘格式为**FAT32**格式，因此镜像大小需小于4G才可以放入U盘，一般系统64位的都会大于4G，选择32位的即可解决。\n* 方法二：\n\t1. 采用外接光驱，使用UltraISO（软碟通）将镜像写入一张白盘\n\t2. 设置光盘启动\n\t3. 安装，亲测，成功！","slug":"server-install-centos6","published":1,"updated":"2016-09-09T07:02:12.720Z","layout":"post","photos":[],"link":"","_id":"ciwn8lgvh000fkw1gk19ik0cf","content":"<p></p><h2 id=\"intro\">前言</h2><br>第一次真正接触服务器，公司要求安装linux系统，花了2天时间，因为该服务器比较复杂，以此文记录下安装过程中出现的问题。<br><a id=\"more\"></a><p></p>\n<h3 id=\"问题一：安装系统时无法识别硬盘\"><a href=\"#问题一：安装系统时无法识别硬盘\" class=\"headerlink\" title=\"问题一：安装系统时无法识别硬盘\"></a>问题一：安装系统时无法识别硬盘</h3><p><strong>问题描述：</strong></p>\n<p>Lenovo System X3250 M5 该服务器最初是存在磁盘阵列的，也就是Raid模式，因此使用 <code>U盘安装系统</code> 时，有时会出现无法识别硬盘的状态。</p>\n<p><strong>问题解决：</strong></p>\n<p>手动加载驱动的方法</p>\n<ul>\n<li><p>centos 6.2进入安装界面时<strong>Tab</strong>键进入高级选项，追加输入 <code>linux dd</code>，这样安装时会提示加载disk driver。用管理卡挂载驱动镜像即可。</p>\n</li>\n<li><p>centos 5.8进入安装界面直接在boot:后面输入 <code>linux dd</code>。</p>\n</li>\n</ul>\n<p>PXE安装自动加载驱动</p>\n<ul>\n<li>ks文件中在开头附近增加driverdisk选项 <code>driverdisk --source=http://$ip/driverimg.iso</code></li>\n</ul>\n<h3 id=\"问题二：使用U盘安装系统，安装过程中说找不到ISO文件\"><a href=\"#问题二：使用U盘安装系统，安装过程中说找不到ISO文件\" class=\"headerlink\" title=\"问题二：使用U盘安装系统，安装过程中说找不到ISO文件\"></a>问题二：使用U盘安装系统，安装过程中说找不到ISO文件</h3><p><strong>问题描述：</strong></p>\n<p>该问题是使用U盘安装系统时会出现的，使用U盘安装的步骤：</p>\n<ol>\n<li>使用UltraISO（软碟通）将linux系统镜像写入U盘 ，并且将ISO文件放入U盘</li>\n<li>设置U盘启动</li>\n<li>安装</li>\n</ol>\n<p><strong>问题解决：</strong></p>\n<ul>\n<li>方法一：该问题是因为第一步中，U盘格式为<strong>FAT32</strong>格式，因此镜像大小需小于4G才可以放入U盘，一般系统64位的都会大于4G，选择32位的即可解决。</li>\n<li>方法二：<ol>\n<li>采用外接光驱，使用UltraISO（软碟通）将镜像写入一张白盘</li>\n<li>设置光盘启动</li>\n<li>安装，亲测，成功！</li>\n</ol>\n</li>\n</ul>\n","excerpt":"<p><h2 id=\"intro\">前言</h2><br>第一次真正接触服务器，公司要求安装linux系统，花了2天时间，因为该服务器比较复杂，以此文记录下安装过程中出现的问题。<br>","more":"</p>\n<h3 id=\"问题一：安装系统时无法识别硬盘\"><a href=\"#问题一：安装系统时无法识别硬盘\" class=\"headerlink\" title=\"问题一：安装系统时无法识别硬盘\"></a>问题一：安装系统时无法识别硬盘</h3><p><strong>问题描述：</strong></p>\n<p>Lenovo System X3250 M5 该服务器最初是存在磁盘阵列的，也就是Raid模式，因此使用 <code>U盘安装系统</code> 时，有时会出现无法识别硬盘的状态。</p>\n<p><strong>问题解决：</strong></p>\n<p>手动加载驱动的方法</p>\n<ul>\n<li><p>centos 6.2进入安装界面时<strong>Tab</strong>键进入高级选项，追加输入 <code>linux dd</code>，这样安装时会提示加载disk driver。用管理卡挂载驱动镜像即可。</p>\n</li>\n<li><p>centos 5.8进入安装界面直接在boot:后面输入 <code>linux dd</code>。</p>\n</li>\n</ul>\n<p>PXE安装自动加载驱动</p>\n<ul>\n<li>ks文件中在开头附近增加driverdisk选项 <code>driverdisk --source=http://$ip/driverimg.iso</code></li>\n</ul>\n<h3 id=\"问题二：使用U盘安装系统，安装过程中说找不到ISO文件\"><a href=\"#问题二：使用U盘安装系统，安装过程中说找不到ISO文件\" class=\"headerlink\" title=\"问题二：使用U盘安装系统，安装过程中说找不到ISO文件\"></a>问题二：使用U盘安装系统，安装过程中说找不到ISO文件</h3><p><strong>问题描述：</strong></p>\n<p>该问题是使用U盘安装系统时会出现的，使用U盘安装的步骤：</p>\n<ol>\n<li>使用UltraISO（软碟通）将linux系统镜像写入U盘 ，并且将ISO文件放入U盘</li>\n<li>设置U盘启动</li>\n<li>安装</li>\n</ol>\n<p><strong>问题解决：</strong></p>\n<ul>\n<li>方法一：该问题是因为第一步中，U盘格式为<strong>FAT32</strong>格式，因此镜像大小需小于4G才可以放入U盘，一般系统64位的都会大于4G，选择32位的即可解决。</li>\n<li>方法二：<ol>\n<li>采用外接光驱，使用UltraISO（软碟通）将镜像写入一张白盘</li>\n<li>设置光盘启动</li>\n<li>安装，亲测，成功！</li>\n</ol>\n</li>\n</ul>"},{"title":"elasticsearch环境搭建及起步","date":"2016-12-13T09:12:39.000Z","comments":1,"fancybox":false,"description":null,"toc":true,"top":null,"_content":"<h2 id=\"intro\">前言</h2>\n## ElasticSearch 概述\n> ElasticSearch是一个高可扩展的开源的全文搜索分析引擎。 \n> - 它允许你快速的存储、搜索和分析大量数据。ElasticSearch通常作为后端程序，为需要复杂查询的应用提供服务。\n> - Elasticsearch是一个基于Lucene的开源分布式搜索引擎，具有分布式多用户能力。Elasticsearch是用java开发，提供Restful接口，能够达到实时搜索、高性能计算；同时Elasticsearch的横向扩展能力非常强，不需要重启服务，基本上达到了零配置。\n\n<!--more-->\n## ElasticSearch 安装\n1. 在VMware上安装centos7\n2. 安装vim，输入`yum install -y vim`\n3. 安装git，输入：`yum install -y git`\n4. 安装jdk1.8+\n    - 查看CentOS自带JDK是否已安装，输入：`yum list installed |grep java`。\n    - 若有自带安装的JDK，卸载CentOS系统自带Java环境。\n    - 卸载JDK相关文件，输入：`yum -y remove java-1.8.0-openjdk*`。\n    - 卸载tzdata-java，输入：`yum -y remove tzdata-java.noarch`。当结果显示为Complete！即卸载完毕。\n        > 注：“*”表示卸载掉java1.8.0的所有openjdk相关文件。\n\n    - 新建目录`mkdir /usr/java/`\n    - 将下载的jdk的rpm包上传至`/usr/java`文件夹中，修改权限，输入`chmod +x jdk-8u111-linux-x64.rpm`\n    - 输入`rpm -ivh jdk-8u101-linux-x64.rpm`安装\n    - 输入`PATH=\"${PATH}:/usr/java/jdk1.8.0_111\"`，修改环境变量\n    - 查看刚安装的Java版本信息，输入：`java -version` 可查看Java版本。\n5. 打开xshell通过xftp将elasticsearch-2.1.1.tar.gz传到虚拟机`/opt`中，cd到opt目录，输入`tar zxvf elasticsearch-2.1.1.tar.gz`，解压至当前目录。\n    > 注：不可以使用root用户启动elasticsearch，这是出于系统安全考虑设置的条件。由于ElasticSearch可以接收用户输入的脚本并且执行，为了系统安全考虑，建议创建一个单独的用户用来运行xkcoding\n    > \n    > 如果是用root账号启动，会报以下错误\n    > \n     ```java\n     Exception in thread \"main\" java.lang.RuntimeException: don't run elasticsearch as root. at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:93) at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:144) at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285) at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35) Refer to the log for complete error details.\n     ```\n6. 创建xkcoding用户组及xkcoding用户\n    ```bash\n    groupadd xkcoding\n    useradd xkcoding -g xkcoding -p elasticsearch-2.1.1\n    ```\n7. 更改elasticsearch-2.1.1文件夹及内部文件的所属用户及组为xkcoding:xkcoding\n    ```bash\n    cd /opt\n    chown -R xkcoding:xkcoding elasticsearch-2.1.1\n    ```\n8. 切换到elsearch用户再启动\n    ```bash\n    su xkcoding\n    cd elasticsearch-2.1.1\n    ./bin/elasticsearch -d #以守护进程的方式运行\n    ```\n9. 打开一个新的终端进行测试\n    ```bash\n    curl 'http://localhost:9200/?pretty'\n    ```\n10. 查看返回数据\n    ```json\n    {\n      \"name\" : \"node-1\",\n      \"cluster_name\" : \"togeek\",\n      \"version\" : {\n        \"number\" : \"2.1.1\",\n        \"build_hash\" : \"40e2c53a6b6c2972b3d13846e450e66f4375bd71\",\n        \"build_timestamp\" : \"2015-12-15T13:05:55Z\",\n        \"build_snapshot\" : false,\n        \"lucene_version\" : \"5.3.1\"\n      },\n      \"tagline\" : \"You Know, for Search\"\n    }\n    ```\n11. 需要从windows本机访问centos7虚拟机，因此需要关闭防火墙\n    > CentOS 7.0默认使用的是firewall作为防火墙，使用iptables必须重新设置一下\n    \n    - 直接关闭防火墙\n        ```bash\n        systemctl stop firewalld.service #停止firewall\n        systemctl disable firewalld.service #禁止firewall开机启动\n        ```\n    - 设置 `iptables service`\n        ```bash\n        yum -y install iptables-services\n        ```\n    - 如果要修改防火墙配置，如增加防火墙端口9200\n        ```bash\n        vi /etc/sysconfig/iptables \n        ```\n    - 增加规则\n        ```bash\n        -A INPUT -m state --state NEW -m tcp -p tcp --dport 9200 -j ACCEPT\n        ```\n    - 保存退出后\n        ```bash\n        systemctl restart iptables.service #重启防火墙使配置生效\n        systemctl enable iptables.service #设置防火墙开机启动\n        ```\n    - 最后重启系统使设置生效即可。\n12. 在windows的cmd中测试，返回json，测试通过！","source":"_posts/2016-12-13.elasticsearch-get-start.md","raw":"---\ntitle: elasticsearch环境搭建及起步\ndate: 2016-12-13 17:12:39\ntags:\n- elasticsearch\ncategories:\n- elasticsearch\ncomments: true\nfancybox: false\ndescription: \ntoc: true\npermalink: elasticsearch-get-start\ntop: \n---\n<h2 id=\"intro\">前言</h2>\n## ElasticSearch 概述\n> ElasticSearch是一个高可扩展的开源的全文搜索分析引擎。 \n> - 它允许你快速的存储、搜索和分析大量数据。ElasticSearch通常作为后端程序，为需要复杂查询的应用提供服务。\n> - Elasticsearch是一个基于Lucene的开源分布式搜索引擎，具有分布式多用户能力。Elasticsearch是用java开发，提供Restful接口，能够达到实时搜索、高性能计算；同时Elasticsearch的横向扩展能力非常强，不需要重启服务，基本上达到了零配置。\n\n<!--more-->\n## ElasticSearch 安装\n1. 在VMware上安装centos7\n2. 安装vim，输入`yum install -y vim`\n3. 安装git，输入：`yum install -y git`\n4. 安装jdk1.8+\n    - 查看CentOS自带JDK是否已安装，输入：`yum list installed |grep java`。\n    - 若有自带安装的JDK，卸载CentOS系统自带Java环境。\n    - 卸载JDK相关文件，输入：`yum -y remove java-1.8.0-openjdk*`。\n    - 卸载tzdata-java，输入：`yum -y remove tzdata-java.noarch`。当结果显示为Complete！即卸载完毕。\n        > 注：“*”表示卸载掉java1.8.0的所有openjdk相关文件。\n\n    - 新建目录`mkdir /usr/java/`\n    - 将下载的jdk的rpm包上传至`/usr/java`文件夹中，修改权限，输入`chmod +x jdk-8u111-linux-x64.rpm`\n    - 输入`rpm -ivh jdk-8u101-linux-x64.rpm`安装\n    - 输入`PATH=\"${PATH}:/usr/java/jdk1.8.0_111\"`，修改环境变量\n    - 查看刚安装的Java版本信息，输入：`java -version` 可查看Java版本。\n5. 打开xshell通过xftp将elasticsearch-2.1.1.tar.gz传到虚拟机`/opt`中，cd到opt目录，输入`tar zxvf elasticsearch-2.1.1.tar.gz`，解压至当前目录。\n    > 注：不可以使用root用户启动elasticsearch，这是出于系统安全考虑设置的条件。由于ElasticSearch可以接收用户输入的脚本并且执行，为了系统安全考虑，建议创建一个单独的用户用来运行xkcoding\n    > \n    > 如果是用root账号启动，会报以下错误\n    > \n     ```java\n     Exception in thread \"main\" java.lang.RuntimeException: don't run elasticsearch as root. at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:93) at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:144) at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285) at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35) Refer to the log for complete error details.\n     ```\n6. 创建xkcoding用户组及xkcoding用户\n    ```bash\n    groupadd xkcoding\n    useradd xkcoding -g xkcoding -p elasticsearch-2.1.1\n    ```\n7. 更改elasticsearch-2.1.1文件夹及内部文件的所属用户及组为xkcoding:xkcoding\n    ```bash\n    cd /opt\n    chown -R xkcoding:xkcoding elasticsearch-2.1.1\n    ```\n8. 切换到elsearch用户再启动\n    ```bash\n    su xkcoding\n    cd elasticsearch-2.1.1\n    ./bin/elasticsearch -d #以守护进程的方式运行\n    ```\n9. 打开一个新的终端进行测试\n    ```bash\n    curl 'http://localhost:9200/?pretty'\n    ```\n10. 查看返回数据\n    ```json\n    {\n      \"name\" : \"node-1\",\n      \"cluster_name\" : \"togeek\",\n      \"version\" : {\n        \"number\" : \"2.1.1\",\n        \"build_hash\" : \"40e2c53a6b6c2972b3d13846e450e66f4375bd71\",\n        \"build_timestamp\" : \"2015-12-15T13:05:55Z\",\n        \"build_snapshot\" : false,\n        \"lucene_version\" : \"5.3.1\"\n      },\n      \"tagline\" : \"You Know, for Search\"\n    }\n    ```\n11. 需要从windows本机访问centos7虚拟机，因此需要关闭防火墙\n    > CentOS 7.0默认使用的是firewall作为防火墙，使用iptables必须重新设置一下\n    \n    - 直接关闭防火墙\n        ```bash\n        systemctl stop firewalld.service #停止firewall\n        systemctl disable firewalld.service #禁止firewall开机启动\n        ```\n    - 设置 `iptables service`\n        ```bash\n        yum -y install iptables-services\n        ```\n    - 如果要修改防火墙配置，如增加防火墙端口9200\n        ```bash\n        vi /etc/sysconfig/iptables \n        ```\n    - 增加规则\n        ```bash\n        -A INPUT -m state --state NEW -m tcp -p tcp --dport 9200 -j ACCEPT\n        ```\n    - 保存退出后\n        ```bash\n        systemctl restart iptables.service #重启防火墙使配置生效\n        systemctl enable iptables.service #设置防火墙开机启动\n        ```\n    - 最后重启系统使设置生效即可。\n12. 在windows的cmd中测试，返回json，测试通过！","slug":"elasticsearch-get-start","published":1,"updated":"2016-12-14T03:12:31.966Z","layout":"post","photos":[],"link":"","_id":"ciwn8lgvs000jkw1g6e09fp0c","content":"<p></p><h2 id=\"intro\">前言</h2><p></p>\n<h2 id=\"ElasticSearch-概述\"><a href=\"#ElasticSearch-概述\" class=\"headerlink\" title=\"ElasticSearch 概述\"></a>ElasticSearch 概述</h2><blockquote>\n<p>ElasticSearch是一个高可扩展的开源的全文搜索分析引擎。 </p>\n<ul>\n<li>它允许你快速的存储、搜索和分析大量数据。ElasticSearch通常作为后端程序，为需要复杂查询的应用提供服务。</li>\n<li>Elasticsearch是一个基于Lucene的开源分布式搜索引擎，具有分布式多用户能力。Elasticsearch是用java开发，提供Restful接口，能够达到实时搜索、高性能计算；同时Elasticsearch的横向扩展能力非常强，不需要重启服务，基本上达到了零配置。</li>\n</ul>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"ElasticSearch-安装\"><a href=\"#ElasticSearch-安装\" class=\"headerlink\" title=\"ElasticSearch 安装\"></a>ElasticSearch 安装</h2><ol>\n<li>在VMware上安装centos7</li>\n<li>安装vim，输入<code>yum install -y vim</code></li>\n<li>安装git，输入：<code>yum install -y git</code></li>\n<li><p>安装jdk1.8+</p>\n<ul>\n<li>查看CentOS自带JDK是否已安装，输入：<code>yum list installed |grep java</code>。</li>\n<li>若有自带安装的JDK，卸载CentOS系统自带Java环境。</li>\n<li>卸载JDK相关文件，输入：<code>yum -y remove java-1.8.0-openjdk*</code>。</li>\n<li><p>卸载tzdata-java，输入：<code>yum -y remove tzdata-java.noarch</code>。当结果显示为Complete！即卸载完毕。</p>\n<blockquote>\n<p>注：“*”表示卸载掉java1.8.0的所有openjdk相关文件。</p>\n</blockquote>\n</li>\n<li><p>新建目录<code>mkdir /usr/java/</code></p>\n</li>\n<li>将下载的jdk的rpm包上传至<code>/usr/java</code>文件夹中，修改权限，输入<code>chmod +x jdk-8u111-linux-x64.rpm</code></li>\n<li>输入<code>rpm -ivh jdk-8u101-linux-x64.rpm</code>安装</li>\n<li>输入<code>PATH=&quot;${PATH}:/usr/java/jdk1.8.0_111&quot;</code>，修改环境变量</li>\n<li>查看刚安装的Java版本信息，输入：<code>java -version</code> 可查看Java版本。</li>\n</ul>\n</li>\n<li><p>打开xshell通过xftp将elasticsearch-2.1.1.tar.gz传到虚拟机<code>/opt</code>中，cd到opt目录，输入<code>tar zxvf elasticsearch-2.1.1.tar.gz</code>，解压至当前目录。</p>\n<blockquote>\n<p>注：不可以使用root用户启动elasticsearch，这是出于系统安全考虑设置的条件。由于ElasticSearch可以接收用户输入的脚本并且执行，为了系统安全考虑，建议创建一个单独的用户用来运行xkcoding</p>\n<p>如果是用root账号启动，会报以下错误</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Exception in thread <span class=\"string\">\"main\"</span> java.lang.RuntimeException: don<span class=\"string\">'t run elasticsearch as root. at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:93) at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:144) at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285) at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35) Refer to the log for complete error details.</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>创建xkcoding用户组及xkcoding用户</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd xkcoding</span><br><span class=\"line\">useradd xkcoding -g xkcoding -p elasticsearch-2.1.1</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更改elasticsearch-2.1.1文件夹及内部文件的所属用户及组为xkcoding:xkcoding</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /opt</span><br><span class=\"line\">chown -R xkcoding:xkcoding elasticsearch-2.1.1</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>切换到elsearch用户再启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su xkcoding</span><br><span class=\"line\"><span class=\"built_in\">cd</span> elasticsearch-2.1.1</span><br><span class=\"line\">./bin/elasticsearch <span class=\"_\">-d</span> <span class=\"comment\">#以守护进程的方式运行</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开一个新的终端进行测试</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl <span class=\"string\">'http://localhost:9200/?pretty'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看返回数据</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span> : <span class=\"string\">\"node-1\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"cluster_name\"</span> : <span class=\"string\">\"togeek\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span> : &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"number\"</span> : <span class=\"string\">\"2.1.1\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"build_hash\"</span> : <span class=\"string\">\"40e2c53a6b6c2972b3d13846e450e66f4375bd71\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"build_timestamp\"</span> : <span class=\"string\">\"2015-12-15T13:05:55Z\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"build_snapshot\"</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"lucene_version\"</span> : <span class=\"string\">\"5.3.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"tagline\"</span> : <span class=\"string\">\"You Know, for Search\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>需要从windows本机访问centos7虚拟机，因此需要关闭防火墙</p>\n<blockquote>\n<p>CentOS 7.0默认使用的是firewall作为防火墙，使用iptables必须重新设置一下</p>\n</blockquote>\n<ul>\n<li><p>直接关闭防火墙</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service <span class=\"comment\">#停止firewall</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld.service <span class=\"comment\">#禁止firewall开机启动</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置 <code>iptables service</code></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install iptables-services</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果要修改防火墙配置，如增加防火墙端口9200</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>增加规则</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-A INPUT -m state --state NEW -m tcp -p tcp --dport 9200 -j ACCEPT</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>保存退出后</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart iptables.service <span class=\"comment\">#重启防火墙使配置生效</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> iptables.service <span class=\"comment\">#设置防火墙开机启动</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>最后重启系统使设置生效即可。</p>\n</li>\n</ul>\n</li>\n<li>在windows的cmd中测试，返回json，测试通过！</li>\n</ol>\n","excerpt":"<p><h2 id=\"intro\">前言</h2></p>\n<h2 id=\"ElasticSearch-概述\"><a href=\"#ElasticSearch-概述\" class=\"headerlink\" title=\"ElasticSearch 概述\"></a>ElasticSearch 概述</h2><blockquote>\n<p>ElasticSearch是一个高可扩展的开源的全文搜索分析引擎。 </p>\n<ul>\n<li>它允许你快速的存储、搜索和分析大量数据。ElasticSearch通常作为后端程序，为需要复杂查询的应用提供服务。</li>\n<li>Elasticsearch是一个基于Lucene的开源分布式搜索引擎，具有分布式多用户能力。Elasticsearch是用java开发，提供Restful接口，能够达到实时搜索、高性能计算；同时Elasticsearch的横向扩展能力非常强，不需要重启服务，基本上达到了零配置。</li>\n</ul>\n</blockquote>","more":"<h2 id=\"ElasticSearch-安装\"><a href=\"#ElasticSearch-安装\" class=\"headerlink\" title=\"ElasticSearch 安装\"></a>ElasticSearch 安装</h2><ol>\n<li>在VMware上安装centos7</li>\n<li>安装vim，输入<code>yum install -y vim</code></li>\n<li>安装git，输入：<code>yum install -y git</code></li>\n<li><p>安装jdk1.8+</p>\n<ul>\n<li>查看CentOS自带JDK是否已安装，输入：<code>yum list installed |grep java</code>。</li>\n<li>若有自带安装的JDK，卸载CentOS系统自带Java环境。</li>\n<li>卸载JDK相关文件，输入：<code>yum -y remove java-1.8.0-openjdk*</code>。</li>\n<li><p>卸载tzdata-java，输入：<code>yum -y remove tzdata-java.noarch</code>。当结果显示为Complete！即卸载完毕。</p>\n<blockquote>\n<p>注：“*”表示卸载掉java1.8.0的所有openjdk相关文件。</p>\n</blockquote>\n</li>\n<li><p>新建目录<code>mkdir /usr/java/</code></p>\n</li>\n<li>将下载的jdk的rpm包上传至<code>/usr/java</code>文件夹中，修改权限，输入<code>chmod +x jdk-8u111-linux-x64.rpm</code></li>\n<li>输入<code>rpm -ivh jdk-8u101-linux-x64.rpm</code>安装</li>\n<li>输入<code>PATH=&quot;${PATH}:/usr/java/jdk1.8.0_111&quot;</code>，修改环境变量</li>\n<li>查看刚安装的Java版本信息，输入：<code>java -version</code> 可查看Java版本。</li>\n</ul>\n</li>\n<li><p>打开xshell通过xftp将elasticsearch-2.1.1.tar.gz传到虚拟机<code>/opt</code>中，cd到opt目录，输入<code>tar zxvf elasticsearch-2.1.1.tar.gz</code>，解压至当前目录。</p>\n<blockquote>\n<p>注：不可以使用root用户启动elasticsearch，这是出于系统安全考虑设置的条件。由于ElasticSearch可以接收用户输入的脚本并且执行，为了系统安全考虑，建议创建一个单独的用户用来运行xkcoding</p>\n<p>如果是用root账号启动，会报以下错误</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Exception in thread <span class=\"string\">\"main\"</span> java.lang.RuntimeException: don<span class=\"string\">'t run elasticsearch as root. at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:93) at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:144) at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285) at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35) Refer to the log for complete error details.</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>创建xkcoding用户组及xkcoding用户</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd xkcoding</span><br><span class=\"line\">useradd xkcoding -g xkcoding -p elasticsearch-2.1.1</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更改elasticsearch-2.1.1文件夹及内部文件的所属用户及组为xkcoding:xkcoding</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /opt</span><br><span class=\"line\">chown -R xkcoding:xkcoding elasticsearch-2.1.1</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>切换到elsearch用户再启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su xkcoding</span><br><span class=\"line\"><span class=\"built_in\">cd</span> elasticsearch-2.1.1</span><br><span class=\"line\">./bin/elasticsearch <span class=\"_\">-d</span> <span class=\"comment\">#以守护进程的方式运行</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开一个新的终端进行测试</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl <span class=\"string\">'http://localhost:9200/?pretty'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看返回数据</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span> : <span class=\"string\">\"node-1\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"cluster_name\"</span> : <span class=\"string\">\"togeek\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span> : &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"number\"</span> : <span class=\"string\">\"2.1.1\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"build_hash\"</span> : <span class=\"string\">\"40e2c53a6b6c2972b3d13846e450e66f4375bd71\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"build_timestamp\"</span> : <span class=\"string\">\"2015-12-15T13:05:55Z\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"build_snapshot\"</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"lucene_version\"</span> : <span class=\"string\">\"5.3.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"tagline\"</span> : <span class=\"string\">\"You Know, for Search\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>需要从windows本机访问centos7虚拟机，因此需要关闭防火墙</p>\n<blockquote>\n<p>CentOS 7.0默认使用的是firewall作为防火墙，使用iptables必须重新设置一下</p>\n</blockquote>\n<ul>\n<li><p>直接关闭防火墙</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld.service <span class=\"comment\">#停止firewall</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld.service <span class=\"comment\">#禁止firewall开机启动</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置 <code>iptables service</code></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install iptables-services</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果要修改防火墙配置，如增加防火墙端口9200</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>增加规则</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-A INPUT -m state --state NEW -m tcp -p tcp --dport 9200 -j ACCEPT</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>保存退出后</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart iptables.service <span class=\"comment\">#重启防火墙使配置生效</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> iptables.service <span class=\"comment\">#设置防火墙开机启动</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>最后重启系统使设置生效即可。</p>\n</li>\n</ul>\n</li>\n<li>在windows的cmd中测试，返回json，测试通过！</li>\n</ol>"},{"title":"实际项目中的代码规范","comments":1,"fancybox":true,"toc":false,"date":"2016-04-05T13:35:53.000Z","description":null,"top":null,"_content":"<h2 id=\"intro\">前言</h2>最近在准备软件杯的比赛项目，因为是担任的是项目组长，所以要求组员之间的项目代码必须要有规范，方便组员之间的团队合作，以及后期代码的维护。而且，我相信，如果我们代码规范能够做好的话，对于我们的开发水平也会提高多少。\n<!--more-->\n### 代码的规范化好处多多\n> 1. 规范的代码可以促进团队合作 \n> 1. 规范的代码可以减少bug处理 \n> 1. 规范的代码可以降低维护成本\n> 1. 规范的代码有助于代码审查\n> 1. 养成代码规范的习惯，有助于程序员自身的成长\n\n### 开发前的准备\nEclipse中设置代码样式在 `Window -->Preferences` 中设置\n#### 设置工作空间编码为UTF-8\n![设置工作空间编码为UTF-8](/resources/coding-standards-1.png)\n#### 设置文件编码为UTF-8\n![设置JAVA文件编码为UTF-8](/resources/coding-standards-2.1.png)\n![设置XML文件编码为UTF-8](/resources/coding-standards-2.2.png)\n \n#### 方法变量名转化成成员变量名称时，变量名称前加m以示区分\n![方法变量名转化成成员变量名称时，变量名称前加m以示区分](/resources/coding-standards-3.png)\n#### 配置文档注释\n `Window  -->Preferences -->Java -->Code Style -->Code Templates` \n##### Comments\n###### Files修改成如下内容\n\t/**   \n\t * @Title: ${file_name} \n\t * @Package ${package_name} \n\t * @Description: ${todo}(用一句话描述该文件做什么) \n\t * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的）\n\t * @date ${date} ${time} \n\t * @version V1.0   \n\t */\n \n###### Types修改成如下内容\n\t/** \n\t * @ClassName: ${type_name} \n\t * @Description: ${todo}(这里用一句话描述这个类的作用) \n\t * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的）\n\t * @date ${date} ${time} \n\t * ${tags} \n\t */\n\n \n###### Fields修改成如下内容\n\t/** \n\t * @Fields ${field} : ${todo}(用一句话描述这个变量表示什么) \n\t */\n###### Constructors修改成如下内容\n\t/** \n\t * <p>Title: </p> \n\t * <p>Description: </p> \n\t * ${tags} \n\t */\n###### Methods修改成如下内容\n\t/** \n\t * @Title: ${enclosing_method} \n\t * @Description: ${todo}(这里用一句话描述这个方法的作用) \n\t * ${tags}  参数说明 \n\t * ${return_type}  返回类型 \n\t * @throws \n\t */\n###### Overriding methods修改成如下内容\n\t/*\n\t * Title: ${enclosing_method}\n\t * Description: \n\t * ${tags} \n\t * ${see_to_overridden} \n\t */\n###### Delegate methods修改成如下内容\n\t/** \n\t * ${tags} \n\t * ${see_to_target} \n\t */\n###### Getters修改成如下内容\n\t/**\n\t * @return the ${bare_field_name}\n\t */\n###### Setters修改成如下内容\n\t/**\n\t * @param ${param} the ${bare_field_name} to set\n\t */\n\n##### Codes中只修改New Java files\n###### New Java files修改成如下内容\n\t/**   \n\t * @Title: ${file_name} \n\t * @Package ${package_name} \n\t * @Description: ${todo}(用一句话描述该文件做什么) \n\t * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的）\n\t * @date ${date} ${time} \n\t * @version V1.0   \n\t */\n### 开发时的规范\n1.\t每个方法前添加文档注释（快捷方式：选中需要添加的方法名，再按alt+shift+j）\n2.\tSVN提交代码时，必须注明提交代码时所作的修改\n3.\t尽可能少的使用全局的静态变量，以免常驻内存\n4.\t方法变量名转化成成员变量名称时，变量名称前加m以示区分（可以在eclipse中已经设置，自动化解决）\n","source":"_posts/2016-04-05.coding-standards.md","raw":"---\ntitle: 实际项目中的代码规范\ncomments: true\nfancybox: true\ntoc: false\ndate: 2016-04-05 21:35:53\ntags:\n- eclipse\n- Android\ncategories:\n- Android\ndescription:\npermalink: coding-standards\ntop:\n---\n<h2 id=\"intro\">前言</h2>最近在准备软件杯的比赛项目，因为是担任的是项目组长，所以要求组员之间的项目代码必须要有规范，方便组员之间的团队合作，以及后期代码的维护。而且，我相信，如果我们代码规范能够做好的话，对于我们的开发水平也会提高多少。\n<!--more-->\n### 代码的规范化好处多多\n> 1. 规范的代码可以促进团队合作 \n> 1. 规范的代码可以减少bug处理 \n> 1. 规范的代码可以降低维护成本\n> 1. 规范的代码有助于代码审查\n> 1. 养成代码规范的习惯，有助于程序员自身的成长\n\n### 开发前的准备\nEclipse中设置代码样式在 `Window -->Preferences` 中设置\n#### 设置工作空间编码为UTF-8\n![设置工作空间编码为UTF-8](/resources/coding-standards-1.png)\n#### 设置文件编码为UTF-8\n![设置JAVA文件编码为UTF-8](/resources/coding-standards-2.1.png)\n![设置XML文件编码为UTF-8](/resources/coding-standards-2.2.png)\n \n#### 方法变量名转化成成员变量名称时，变量名称前加m以示区分\n![方法变量名转化成成员变量名称时，变量名称前加m以示区分](/resources/coding-standards-3.png)\n#### 配置文档注释\n `Window  -->Preferences -->Java -->Code Style -->Code Templates` \n##### Comments\n###### Files修改成如下内容\n\t/**   \n\t * @Title: ${file_name} \n\t * @Package ${package_name} \n\t * @Description: ${todo}(用一句话描述该文件做什么) \n\t * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的）\n\t * @date ${date} ${time} \n\t * @version V1.0   \n\t */\n \n###### Types修改成如下内容\n\t/** \n\t * @ClassName: ${type_name} \n\t * @Description: ${todo}(这里用一句话描述这个类的作用) \n\t * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的）\n\t * @date ${date} ${time} \n\t * ${tags} \n\t */\n\n \n###### Fields修改成如下内容\n\t/** \n\t * @Fields ${field} : ${todo}(用一句话描述这个变量表示什么) \n\t */\n###### Constructors修改成如下内容\n\t/** \n\t * <p>Title: </p> \n\t * <p>Description: </p> \n\t * ${tags} \n\t */\n###### Methods修改成如下内容\n\t/** \n\t * @Title: ${enclosing_method} \n\t * @Description: ${todo}(这里用一句话描述这个方法的作用) \n\t * ${tags}  参数说明 \n\t * ${return_type}  返回类型 \n\t * @throws \n\t */\n###### Overriding methods修改成如下内容\n\t/*\n\t * Title: ${enclosing_method}\n\t * Description: \n\t * ${tags} \n\t * ${see_to_overridden} \n\t */\n###### Delegate methods修改成如下内容\n\t/** \n\t * ${tags} \n\t * ${see_to_target} \n\t */\n###### Getters修改成如下内容\n\t/**\n\t * @return the ${bare_field_name}\n\t */\n###### Setters修改成如下内容\n\t/**\n\t * @param ${param} the ${bare_field_name} to set\n\t */\n\n##### Codes中只修改New Java files\n###### New Java files修改成如下内容\n\t/**   \n\t * @Title: ${file_name} \n\t * @Package ${package_name} \n\t * @Description: ${todo}(用一句话描述该文件做什么) \n\t * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的）\n\t * @date ${date} ${time} \n\t * @version V1.0   \n\t */\n### 开发时的规范\n1.\t每个方法前添加文档注释（快捷方式：选中需要添加的方法名，再按alt+shift+j）\n2.\tSVN提交代码时，必须注明提交代码时所作的修改\n3.\t尽可能少的使用全局的静态变量，以免常驻内存\n4.\t方法变量名转化成成员变量名称时，变量名称前加m以示区分（可以在eclipse中已经设置，自动化解决）\n","slug":"coding-standards","published":1,"updated":"2016-09-06T01:55:00.614Z","layout":"post","photos":[],"link":"","_id":"ciwn8lgvv000mkw1g7m6qy59y","content":"<p></p><h2 id=\"intro\">前言</h2>最近在准备软件杯的比赛项目，因为是担任的是项目组长，所以要求组员之间的项目代码必须要有规范，方便组员之间的团队合作，以及后期代码的维护。而且，我相信，如果我们代码规范能够做好的话，对于我们的开发水平也会提高多少。<br><a id=\"more\"></a><p></p>\n<h3 id=\"代码的规范化好处多多\"><a href=\"#代码的规范化好处多多\" class=\"headerlink\" title=\"代码的规范化好处多多\"></a>代码的规范化好处多多</h3><blockquote>\n<ol>\n<li>规范的代码可以促进团队合作 </li>\n<li>规范的代码可以减少bug处理 </li>\n<li>规范的代码可以降低维护成本</li>\n<li>规范的代码有助于代码审查</li>\n<li>养成代码规范的习惯，有助于程序员自身的成长</li>\n</ol>\n</blockquote>\n<h3 id=\"开发前的准备\"><a href=\"#开发前的准备\" class=\"headerlink\" title=\"开发前的准备\"></a>开发前的准备</h3><p>Eclipse中设置代码样式在 <code>Window --&gt;Preferences</code> 中设置</p>\n<h4 id=\"设置工作空间编码为UTF-8\"><a href=\"#设置工作空间编码为UTF-8\" class=\"headerlink\" title=\"设置工作空间编码为UTF-8\"></a>设置工作空间编码为UTF-8</h4><p><img src=\"/resources/coding-standards-1.png\" alt=\"设置工作空间编码为UTF-8\"></p>\n<h4 id=\"设置文件编码为UTF-8\"><a href=\"#设置文件编码为UTF-8\" class=\"headerlink\" title=\"设置文件编码为UTF-8\"></a>设置文件编码为UTF-8</h4><p><img src=\"/resources/coding-standards-2.1.png\" alt=\"设置JAVA文件编码为UTF-8\"><br><img src=\"/resources/coding-standards-2.2.png\" alt=\"设置XML文件编码为UTF-8\"></p>\n<h4 id=\"方法变量名转化成成员变量名称时，变量名称前加m以示区分\"><a href=\"#方法变量名转化成成员变量名称时，变量名称前加m以示区分\" class=\"headerlink\" title=\"方法变量名转化成成员变量名称时，变量名称前加m以示区分\"></a>方法变量名转化成成员变量名称时，变量名称前加m以示区分</h4><p><img src=\"/resources/coding-standards-3.png\" alt=\"方法变量名转化成成员变量名称时，变量名称前加m以示区分\"></p>\n<h4 id=\"配置文档注释\"><a href=\"#配置文档注释\" class=\"headerlink\" title=\"配置文档注释\"></a>配置文档注释</h4><p> <code>Window  --&gt;Preferences --&gt;Java --&gt;Code Style --&gt;Code Templates</code> </p>\n<h5 id=\"Comments\"><a href=\"#Comments\" class=\"headerlink\" title=\"Comments\"></a>Comments</h5><h6 id=\"Files修改成如下内容\"><a href=\"#Files修改成如下内容\" class=\"headerlink\" title=\"Files修改成如下内容\"></a>Files修改成如下内容</h6><pre><code>/**   \n * @Title: ${file_name} \n * @Package ${package_name} \n * @Description: ${todo}(用一句话描述该文件做什么) \n * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的）\n * @date ${date} ${time} \n * @version V1.0   \n */\n</code></pre><h6 id=\"Types修改成如下内容\"><a href=\"#Types修改成如下内容\" class=\"headerlink\" title=\"Types修改成如下内容\"></a>Types修改成如下内容</h6><pre><code>/** \n * @ClassName: ${type_name} \n * @Description: ${todo}(这里用一句话描述这个类的作用) \n * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的）\n * @date ${date} ${time} \n * ${tags} \n */\n</code></pre><h6 id=\"Fields修改成如下内容\"><a href=\"#Fields修改成如下内容\" class=\"headerlink\" title=\"Fields修改成如下内容\"></a>Fields修改成如下内容</h6><pre><code>/** \n * @Fields ${field} : ${todo}(用一句话描述这个变量表示什么) \n */\n</code></pre><h6 id=\"Constructors修改成如下内容\"><a href=\"#Constructors修改成如下内容\" class=\"headerlink\" title=\"Constructors修改成如下内容\"></a>Constructors修改成如下内容</h6><pre><code>/** \n * &lt;p&gt;Title: &lt;/p&gt; \n * &lt;p&gt;Description: &lt;/p&gt; \n * ${tags} \n */\n</code></pre><h6 id=\"Methods修改成如下内容\"><a href=\"#Methods修改成如下内容\" class=\"headerlink\" title=\"Methods修改成如下内容\"></a>Methods修改成如下内容</h6><pre><code>/** \n * @Title: ${enclosing_method} \n * @Description: ${todo}(这里用一句话描述这个方法的作用) \n * ${tags}  参数说明 \n * ${return_type}  返回类型 \n * @throws \n */\n</code></pre><h6 id=\"Overriding-methods修改成如下内容\"><a href=\"#Overriding-methods修改成如下内容\" class=\"headerlink\" title=\"Overriding methods修改成如下内容\"></a>Overriding methods修改成如下内容</h6><pre><code>/*\n * Title: ${enclosing_method}\n * Description: \n * ${tags} \n * ${see_to_overridden} \n */\n</code></pre><h6 id=\"Delegate-methods修改成如下内容\"><a href=\"#Delegate-methods修改成如下内容\" class=\"headerlink\" title=\"Delegate methods修改成如下内容\"></a>Delegate methods修改成如下内容</h6><pre><code>/** \n * ${tags} \n * ${see_to_target} \n */\n</code></pre><h6 id=\"Getters修改成如下内容\"><a href=\"#Getters修改成如下内容\" class=\"headerlink\" title=\"Getters修改成如下内容\"></a>Getters修改成如下内容</h6><pre><code>/**\n * @return the ${bare_field_name}\n */\n</code></pre><h6 id=\"Setters修改成如下内容\"><a href=\"#Setters修改成如下内容\" class=\"headerlink\" title=\"Setters修改成如下内容\"></a>Setters修改成如下内容</h6><pre><code>/**\n * @param ${param} the ${bare_field_name} to set\n */\n</code></pre><h5 id=\"Codes中只修改New-Java-files\"><a href=\"#Codes中只修改New-Java-files\" class=\"headerlink\" title=\"Codes中只修改New Java files\"></a>Codes中只修改New Java files</h5><h6 id=\"New-Java-files修改成如下内容\"><a href=\"#New-Java-files修改成如下内容\" class=\"headerlink\" title=\"New Java files修改成如下内容\"></a>New Java files修改成如下内容</h6><pre><code>/**   \n * @Title: ${file_name} \n * @Package ${package_name} \n * @Description: ${todo}(用一句话描述该文件做什么) \n * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的）\n * @date ${date} ${time} \n * @version V1.0   \n */\n</code></pre><h3 id=\"开发时的规范\"><a href=\"#开发时的规范\" class=\"headerlink\" title=\"开发时的规范\"></a>开发时的规范</h3><ol>\n<li>每个方法前添加文档注释（快捷方式：选中需要添加的方法名，再按alt+shift+j）</li>\n<li>SVN提交代码时，必须注明提交代码时所作的修改</li>\n<li>尽可能少的使用全局的静态变量，以免常驻内存</li>\n<li>方法变量名转化成成员变量名称时，变量名称前加m以示区分（可以在eclipse中已经设置，自动化解决）</li>\n</ol>\n","excerpt":"<p><h2 id=\"intro\">前言</h2>最近在准备软件杯的比赛项目，因为是担任的是项目组长，所以要求组员之间的项目代码必须要有规范，方便组员之间的团队合作，以及后期代码的维护。而且，我相信，如果我们代码规范能够做好的话，对于我们的开发水平也会提高多少。<br>","more":"</p>\n<h3 id=\"代码的规范化好处多多\"><a href=\"#代码的规范化好处多多\" class=\"headerlink\" title=\"代码的规范化好处多多\"></a>代码的规范化好处多多</h3><blockquote>\n<ol>\n<li>规范的代码可以促进团队合作 </li>\n<li>规范的代码可以减少bug处理 </li>\n<li>规范的代码可以降低维护成本</li>\n<li>规范的代码有助于代码审查</li>\n<li>养成代码规范的习惯，有助于程序员自身的成长</li>\n</ol>\n</blockquote>\n<h3 id=\"开发前的准备\"><a href=\"#开发前的准备\" class=\"headerlink\" title=\"开发前的准备\"></a>开发前的准备</h3><p>Eclipse中设置代码样式在 <code>Window --&gt;Preferences</code> 中设置</p>\n<h4 id=\"设置工作空间编码为UTF-8\"><a href=\"#设置工作空间编码为UTF-8\" class=\"headerlink\" title=\"设置工作空间编码为UTF-8\"></a>设置工作空间编码为UTF-8</h4><p><img src=\"/resources/coding-standards-1.png\" alt=\"设置工作空间编码为UTF-8\"></p>\n<h4 id=\"设置文件编码为UTF-8\"><a href=\"#设置文件编码为UTF-8\" class=\"headerlink\" title=\"设置文件编码为UTF-8\"></a>设置文件编码为UTF-8</h4><p><img src=\"/resources/coding-standards-2.1.png\" alt=\"设置JAVA文件编码为UTF-8\"><br><img src=\"/resources/coding-standards-2.2.png\" alt=\"设置XML文件编码为UTF-8\"></p>\n<h4 id=\"方法变量名转化成成员变量名称时，变量名称前加m以示区分\"><a href=\"#方法变量名转化成成员变量名称时，变量名称前加m以示区分\" class=\"headerlink\" title=\"方法变量名转化成成员变量名称时，变量名称前加m以示区分\"></a>方法变量名转化成成员变量名称时，变量名称前加m以示区分</h4><p><img src=\"/resources/coding-standards-3.png\" alt=\"方法变量名转化成成员变量名称时，变量名称前加m以示区分\"></p>\n<h4 id=\"配置文档注释\"><a href=\"#配置文档注释\" class=\"headerlink\" title=\"配置文档注释\"></a>配置文档注释</h4><p> <code>Window  --&gt;Preferences --&gt;Java --&gt;Code Style --&gt;Code Templates</code> </p>\n<h5 id=\"Comments\"><a href=\"#Comments\" class=\"headerlink\" title=\"Comments\"></a>Comments</h5><h6 id=\"Files修改成如下内容\"><a href=\"#Files修改成如下内容\" class=\"headerlink\" title=\"Files修改成如下内容\"></a>Files修改成如下内容</h6><pre><code>/**   \n * @Title: ${file_name} \n * @Package ${package_name} \n * @Description: ${todo}(用一句话描述该文件做什么) \n * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的）\n * @date ${date} ${time} \n * @version V1.0   \n */\n</code></pre><h6 id=\"Types修改成如下内容\"><a href=\"#Types修改成如下内容\" class=\"headerlink\" title=\"Types修改成如下内容\"></a>Types修改成如下内容</h6><pre><code>/** \n * @ClassName: ${type_name} \n * @Description: ${todo}(这里用一句话描述这个类的作用) \n * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的）\n * @date ${date} ${time} \n * ${tags} \n */\n</code></pre><h6 id=\"Fields修改成如下内容\"><a href=\"#Fields修改成如下内容\" class=\"headerlink\" title=\"Fields修改成如下内容\"></a>Fields修改成如下内容</h6><pre><code>/** \n * @Fields ${field} : ${todo}(用一句话描述这个变量表示什么) \n */\n</code></pre><h6 id=\"Constructors修改成如下内容\"><a href=\"#Constructors修改成如下内容\" class=\"headerlink\" title=\"Constructors修改成如下内容\"></a>Constructors修改成如下内容</h6><pre><code>/** \n * &lt;p&gt;Title: &lt;/p&gt; \n * &lt;p&gt;Description: &lt;/p&gt; \n * ${tags} \n */\n</code></pre><h6 id=\"Methods修改成如下内容\"><a href=\"#Methods修改成如下内容\" class=\"headerlink\" title=\"Methods修改成如下内容\"></a>Methods修改成如下内容</h6><pre><code>/** \n * @Title: ${enclosing_method} \n * @Description: ${todo}(这里用一句话描述这个方法的作用) \n * ${tags}  参数说明 \n * ${return_type}  返回类型 \n * @throws \n */\n</code></pre><h6 id=\"Overriding-methods修改成如下内容\"><a href=\"#Overriding-methods修改成如下内容\" class=\"headerlink\" title=\"Overriding methods修改成如下内容\"></a>Overriding methods修改成如下内容</h6><pre><code>/*\n * Title: ${enclosing_method}\n * Description: \n * ${tags} \n * ${see_to_overridden} \n */\n</code></pre><h6 id=\"Delegate-methods修改成如下内容\"><a href=\"#Delegate-methods修改成如下内容\" class=\"headerlink\" title=\"Delegate methods修改成如下内容\"></a>Delegate methods修改成如下内容</h6><pre><code>/** \n * ${tags} \n * ${see_to_target} \n */\n</code></pre><h6 id=\"Getters修改成如下内容\"><a href=\"#Getters修改成如下内容\" class=\"headerlink\" title=\"Getters修改成如下内容\"></a>Getters修改成如下内容</h6><pre><code>/**\n * @return the ${bare_field_name}\n */\n</code></pre><h6 id=\"Setters修改成如下内容\"><a href=\"#Setters修改成如下内容\" class=\"headerlink\" title=\"Setters修改成如下内容\"></a>Setters修改成如下内容</h6><pre><code>/**\n * @param ${param} the ${bare_field_name} to set\n */\n</code></pre><h5 id=\"Codes中只修改New-Java-files\"><a href=\"#Codes中只修改New-Java-files\" class=\"headerlink\" title=\"Codes中只修改New Java files\"></a>Codes中只修改New Java files</h5><h6 id=\"New-Java-files修改成如下内容\"><a href=\"#New-Java-files修改成如下内容\" class=\"headerlink\" title=\"New Java files修改成如下内容\"></a>New Java files修改成如下内容</h6><pre><code>/**   \n * @Title: ${file_name} \n * @Package ${package_name} \n * @Description: ${todo}(用一句话描述该文件做什么) \n * @author Yangkai.Shen（此处换成你自己的名字，格式参考我的）\n * @date ${date} ${time} \n * @version V1.0   \n */\n</code></pre><h3 id=\"开发时的规范\"><a href=\"#开发时的规范\" class=\"headerlink\" title=\"开发时的规范\"></a>开发时的规范</h3><ol>\n<li>每个方法前添加文档注释（快捷方式：选中需要添加的方法名，再按alt+shift+j）</li>\n<li>SVN提交代码时，必须注明提交代码时所作的修改</li>\n<li>尽可能少的使用全局的静态变量，以免常驻内存</li>\n<li>方法变量名转化成成员变量名称时，变量名称前加m以示区分（可以在eclipse中已经设置，自动化解决）</li>\n</ol>"},{"title":"Android 开源项目分类汇总","comments":1,"fancybox":false,"toc":true,"date":"2016-03-25T14:15:00.000Z","description":null,"top":null,"_content":"## 目前包括：\n>1. Android 开源项目第一篇——个性化控件(View)篇\n>*包括：ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style、其他*  \n>1. Android 开源项目第二篇——工具库篇\n>*包括：依赖注入、图片缓存、网络请求、数据库 ORM 工具包、Android 公共库、高版本向低版本兼容库、多媒体、事件总线、传感器、安全、插件化、文件、其他*  \n>1. Android 开源项目第三篇——优秀项目篇\n>*比较有意思的完整的 Android 项目*  \n>1. Android 开源项目第四篇——开发及测试工具篇\n>*包括：开发效率工具、开发自测相关、测试工具、开发及编译环境、其他*  \n>1. Android 开源项目第五篇——优秀个人和团体篇\n>*乐于分享并且有一些很不错的开源项目的个人和组织，包括 JakeWharton、Chris Banes、Koushik Dutta 等大牛*  \n<!--more-->\n\n### 提示\n以下链接网址若存在不能访问，请自行尝试翻墙，推荐使用GreenVPN\n[![好用的GreenVPN](/resources/greenvpn.gif)](http://gjsq.me/15038648)\n\n## 第一部分 个性化控件(View)\n主要介绍那些不错个性化的 View，包括 ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style 等等。  \n\n### 一、ListView\n1. android-pulltorefresh  \n一个强大的拉动刷新开源项目，支持各种控件下拉刷新，ListView、ViewPager、WebView、ExpandableListView、GridView、ScrollView、Horizontal  ScrollView、Fragment 上下左右拉动刷新，比下面 johannilsson 那个只支持 ListView 的强大的多。并且它实现的下拉刷新 ListView 在 item 不足一屏情况下也不会显示刷新提示，体验更好。  \n项目地址：https://github.com/chrisbanes/Android-PullToRefresh  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refreshview-demo.apk?raw=true  \nAPP 示例：新浪微博各个页面 \n\n1. android-pulltorefresh-listview  \n下拉刷新 ListView，这个被很多人使用的项目实际有不少 bug，推荐使用 [android-Ultra-Pull-to-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh)  \n项目地址：https://github.com/johannilsson/android-pulltorefresh  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refresh-listview-demo.apk?raw=true  \n\n3. android-Ultra-Pull-to-Refresh  \n下拉刷新，第一个项目已经停止维护了，并且使用起来相对复杂，定制性也差。这个是替代和改良方案。这个继承于 ViewGroup 可以包含任何 View。功能甚至比 SwipeRefreshLayout 强大。使用起来非常简单。良好的设计，如果你想定制自己的 UI 样式，非常简单，就像给 ListView 加一个 Header View 那么简单。支持 `API LEVEL >= 8`  \n项目地址：https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh  \n原理剖析文档：[android-Ultra-Pull-to-Refresh](http://a.codekk.com/detail/Android/Grumoon/android-Ultra-Pull-To-Refresh 源码解析)  \nDemo 地址：https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh/blob/master/ptr-demo/target/ultra-ptr-demo.apk?raw=true  \n\n1. Android-PullToRefreshRecyclerView  \n支持下拉刷新的RecyclerView，同时支持滑动到底部自动加载数据、给RecyclerView添加Header。并且不更改原有RecyclerView的逻辑。  \n项目地址：https://github.com/HomHomLin/Android-PullToRefreshRecyclerView。    \nDemo地址：https://github.com/HomHomLin/Android-PullToRefreshRecyclerView/blob/master/sample.apk  \n\n1. DragSortListView  \n拖动排序的 ListView，同时支持 ListView 滑动 item 删除，各个 Item 高度不一、单选、复选、CursorAdapter 做为适配器、拖动背景变化等  \n项目地址：https://github.com/bauerca/drag-sort-listview  \nDemo 地址：https://play.google.com/store/apps/details?id=com.mobeta.android.demodslv  \nAPP 示例：Wordpress Android  \n\n1. SwipeListView  \n支持定义 ListView 左右滑动事件，支持左右滑动位移，支持定义动画时间  \n项目地址：https://github.com/47deg/android-swipelistview  \nDemo 地址：https://play.google.com/store/apps/details?id=com.fortysevendeg.android.swipelistview  \nAPP 示例：微信 \n\n1. SlideAndDragListView  \n支持ListView的Item的拖动排序、左右滑动事件，可自定义左右滑动显示文字、图标、位移，同时支持onItemClick、onItemLongClick等监听器，提供丰富的回调接口。  \n项目地址：https://github.com/yydcdut/SlideAndDragListView  \nDemo 地址：https://github.com/yydcdut/SlideAndDragListView/blob/master/apk/sdlv.apk?raw=true  \nAPP 示例：Android 手机QQ 5.0  \n\n1. Android-SwipeToDismiss  \n滑动 Item 消失 ListView，支持 3.0 以下版本见：https://github.com/JakeWharton/SwipeToDismissNOA  \n项目地址：https://github.com/romannurik/Android-SwipeToDismiss  \nDemo 地址：https://github.com/JakeWharton/SwipeToDismissNOA/SwipeToDismissNOA.apk/qr_code  \n\n1. RecyclerViewSwipeDismiss  \n轻量级支持 support-v7 中的 RecyclerView 的滑动删除(Swipe to dismiss)行为，不需要修改源代码，只要简单的绑定`onTouchListener`  \n项目地址：https://github.com/CodeFalling/RecyclerViewSwipeDismiss  \n\n1. PinnedHeaderExpandableListView  \n首先它是一个 ExpandableListView，但是它的头部可以固定，其次，在它的上面还有一个头部可以来回伸缩  \n项目地址：https://github.com/singwhatiwanna/PinnedHeaderExpandableListView  \nAPP 示例：百度手机卫士垃圾清理界面  \n\n1. StickyListHeaders  \nGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView，支持快速滑动，支持 Android2.3 及以上  \n项目地址：https://github.com/emilsjolander/StickyListHeaders  \nAPP 示例：Android 4.0 联系人  \n\n1. pinned-section-listview  \nGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView  \n项目地址：https://github.com/beworker/pinned-section-listview  \n\n1. PinnedHeaderListView  \nGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView  \n项目地址：https://github.com/JimiSmith/PinnedHeaderListView  \n\n1. QuickReturn  \nListView/ScrollView 的 header 或 footer，当向下滚动时消失，向上滚动时出现  \n项目地址：https://github.com/lawloretienne/QuickReturn  \nDemo 地址：https://play.google.com/store/apps/details?id=com.etiennelawlor.quickreturn  \n\n1. QuickReturnHeader  \nListView/ScrollView 的 header 或 footer，当向下滚动时消失，向上滚动时出现  \n项目地址：https://github.com/ManuelPeinado/QuickReturnHeader  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/quick-return-header-demo.apk?raw=true  \nAPP 示例：google plus  \n\n1. IndexableListView  \nListView 右侧会显示 item 首字母快捷索引，点击可快速滑动到某个 item  \n项目地址：https://github.com/woozzu/IndexableListView  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/indexable-listview.apk?raw=true  \nAPP 示例：微信通讯录、小米联系人  \n\n1. CustomFastScrollView  \nListView 快速滑动，同时屏幕中间 PopupWindows 显示滑动到的 item 内容或首字母  \n项目地址：https://github.com/nolanlawson/CustomFastScrollViewDemo  \n\n1. Android-ScrollBarPanel  \nListView 滑动时固定的 Panel 指示显示在 scrollbar 旁边  \n项目地址：https://github.com/rno/Android-ScrollBarPanel  \n\n1. SlideExpandableListView  \n用户点击 listView item 滑出固定区域，其他 item 的区域收缩  \n项目地址：https://github.com/tjerkw/Android-SlideExpandableListView  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/slide-expandable-listView-demo.apk?raw=true  \n\n1. JazzyListView  \nListView 及 GridView item 以特殊动画效果进入屏幕，效果包括 grow、cards、curl、wave、flip、fly 等等  \n项目地址：https://github.com/twotoasters/JazzyListView  \nDemo 地址：https://play.google.com/store/apps/details?id=com.twotoasters.jazzylistview.sample  \n在线演示：http://lab.hakim.se/scroll-effects/  \n\n1. ListViewAnimations  \n带 Item 显示动画的 ListView，动画包括底部飞入、其他方向斜飞入、下层飞入、渐变消失、滑动删除等  \n项目地址：https://github.com/nhaarman/ListViewAnimations  \nDemo 地址：https://play.google.com/store/apps/details?id=com.haarman.listviewanimations  \nAPP 示例：Google plus、Google Now 卡片式进入、小米系统中应用商店、联系人、游戏中心、音乐、文件管理器的 ListView、Ultimate、Light Flow Lite、TreinVerkeer、Running Coach、Pearl Jam Lyrics、Calorie Chart、Car Hire、Super BART、DK FlashCards、Counter Plus、Voorlees Verhaaltjes 2.0  \n\n1. DevsmartLib-Android  \n横向 ListView  \n项目地址：https://github.com/dinocore1/DevsmartLib-Android  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/horizontal-listview-demo.apk?raw=true  \n\n1. TwoWayView  \n横向 ListView 的效果，继承自 AdapterView  \n项目地址：https://github.com/lucasr/twoway-view  \n\n1. HorizontalVariableListView  \n支持 Item 宽度不一致的 ListView  \n项目地址：https://github.com/sephiroth74/HorizontalVariableListView  \n\n1. LinearListView  \n用 LinearLayout 实现的 ListView，可解决多个 ListView 并存等问题。目前自己也有需要，等亲自尝试过后会再具体介绍  \n项目地址：https://github.com/frankiesardo/LinearListView  \n\n1. MultiChoiceAdapter  \n支持多选的 ListView Adapter  \n项目地址：https://github.com/ManuelPeinado/MultiChoiceAdapter  \nDemo 地址：https://play.google.com/store/apps/details?id=com.manuelpeinado.multichoiceadapter.demo  \n\n1. EnhancedListView  \n支持横向滑动删除列表项以及撤销删除的 ListView，该项目的前身是[SwipeToDismissUndoList](https://github.com/timroes/SwipeToDismissUndoList)  \n项目地址：https://github.com/timroes/EnhancedListView  \nDemo 地址：https://play.google.com/store/apps/details?id=de.timroes.android.listviewdemo&rdid=de.timroes.android.listviewdemo  \n\n1. ListBuddies  \n自动滚动的双列 ListView ，两个 ListView 滚动速度不一致，有视差效果  \n项目地址：https://github.com/jpardogo/ListBuddies  \nDemo 地址：https://play.google.com/store/apps/details?id=com.jpardogo.android.listbuddies  \n\n1. SwipeMenuListView  \n针对 ListView item 的侧滑菜单  \n项目地址：https://github.com/baoyongzhang/SwipeMenuListView  \nAPP 示例：手机 QQV5.0  \n\n1. PagingListView  \n分页加载的 ListView。当滑动到 ListView 底部最后一个元素时，显示一个进度行，然后加载下一页数据，并显示。  \n项目地址：https://github.com/nicolasjafelle/PagingListView  \n\n1. PullZoomView  \n支持下拉时 HeaderView 缩放的 ListView、ScrollView  \n项目地址：https://github.com/Frank-Zhu/PullZoomView  \n\n1. PullToZoomInListView  \n滑动 ListView 时使其 HeaderView 跟随滑动缩放  \n项目地址：https://github.com/matrixxun/PullToZoomInListView  \n\n1. CalendarListview  \n实现每个月一行日历效果的 ListView  \n项目地址：https://github.com/traex/CalendarListview  \n原理剖析文档：[CalendarListview](http://a.codekk.com/detail/Android/Rogary/CalendarListView%20%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90)  \n\n1. sticky-headers-recyclerview  \nGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ListView，采用 support-v7 中的 RecyclerView 实现  \n项目地址：https://github.com/timehop/sticky-headers-recyclerview  \n\n1. PullSeparateListView  \n到达顶部或底部继续拉动时，实现 Item 间的相互分离，两种模式：(1) 全部分离的模式，即屏幕内所有 Item 都会分离 (2)部分分离模式，以点击位置为分界点，部分 item 分离  \n项目地址：https://github.com/chiemy/PullSeparateListView  \n\n1. ExpandableLayout  \nHeader 和 Content Item 都可以展开的 ExpandableListview  \n项目地址：https://github.com/traex/ExpandableLayout  \n\n1. PagedHeadListView  \n支持 paginated header 以及 material page indicator 的 ListView.  \n项目地址：https://github.com/JorgeCastilloPrz/PagedHeadListView  \n\n1. CustomSwipeListView  \n支持左滑弹出自定义菜单，右滑删除且允许撤销，同时可以自定义滑动动画时间和滑动触发事件的时机等。  \n项目地址：https://github.com/xyczero/Android-CustomSwipeListView  \nDemo 地址：[Download here](http://7u2jsw.com1.z0.glb.clouddn.com/githubCustomSwipeListView.apk)  \n\n1. Pull-to-Refresh.Rentals-Android  \n提供一个简单可以自定义的下拉刷新实现，[Yalantis](http://yalantis.com/) 出品。  \n项目地址：https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android  \n\n1. ScrollerCalendar  \n实现每行显示一年的 12 个月份的 RecyclerView 年历  \n项目地址：https://github.com/guanchao/ScrollerCalendar  \n\n1. ExtractWordView  \n一个可以提取单词的 ListView,支持\"放大镜\"效果。  \n项目地址：https://github.com/jcodeing/ExtractWordView  \nDemo 地址：[Download here](https://raw.githubusercontent.com/jcodeing/ExtractWordView/master/ExtractWordView-demo.apk)  \n\n1. FlyRefresh  \n支持 ListView, GridView, RecyclerView, ScrollView 的下拉刷新  \n项目地址：https://github.com/race604/FlyRefresh  \n\n1. MVCHelper  \n实现下拉刷新，滚动底部自动加载更多，分页加载，自动切换显示网络失败布局，暂无数据布局，支持任意 view，真正的 MVC 架构  \n支持切换主流下拉刷新框架 Android-PullToRefresh-Library,android-Ultra-Pull-To-Refresh-library，SwipeRefreshLayout  \n项目地址：https://github.com/LuckyJayce/MVCHelper  \nDemo 地址：https://github.com/LuckyJayce/MVCHelper/blob/master/raw/MVCHelper_Demo.apk?raw=true  \n\n1. RecyclerViewSwipeDismiss  \n支持滑动 Item 操作、点击展开、拖动排序、展开后拖动排序等特性的 RecyclerView  \n项目地址：https://play.google.com/store/apps/details?id=com.h6ah4i.android.example.advrecyclerview  \n视频：http://www.youtube.com/watch?feature=player_embedded&v=S7cSwMArjUQ  \n\n1. WaterDropListView  \n模仿 iOS 下拉刷新“水滴”效果，支持下拉刷新和上拉加载  \n项目地址：https://github.com/THEONE10211024/WaterDropListView  \n\n1. PopupListView  \n實現ListItem 點擊後置頂並可顯示客製化添加的item的內部View 的ListView  \n项目地址：https://github.com/s8871404/PopupListView  \nDemo 地址：https://play.google.com/store/apps/details?id=com.baobomb.popuplistview_sample  \n\n1. CircleRefreshLayout  \n一个包含有趣的动画的自定义下拉刷新布局  \n项目地址：https://github.com/tuesda/CircleRefreshLayout  \n  \n1. EasyRecyclerView  \n一款简单易用的EasyRecyclerView\n1.提供EasyRecyclerView，不需要写太多RecyclerView的配置代码  \n2.提供好一个可以适配单布局和多布局的RecyclerViewAdapter  \n3.提供了分割线的实现类，只需要传入一个DrawableId  \n项目地址：https://github.com/CaMnter/EasyRecyclerView  \n\n1. CanRefresh\n可适配所有视图的下拉刷新上拉加载，并支持各种风格  \n项目地址：https://github.com/canyinghao/CanRefresh  \n\n### 二、ActionBar\n1. ActionBarSherlock  \n为 Android 所有版本提供统一的 ActionBar，解决 4.0 以下 ActionBar 的适配问题  \n项目地址：https://github.com/JakeWharton/ActionBarSherlock  \nDemo 地址：https://play.google.com/store/apps/details?id=com.actionbarsherlock.sample.demos  \n标签：兼容库, ActionBar  \n\n1. ActionBar-PullToRefresh  \n下拉刷新，ActionBar 出现加载中提示  \n项目地址：https://github.com/chrisbanes/ActionBar-PullToRefresh  \nDemo 地址：https://play.google.com/store/apps/details?id=uk.co.senab.actionbarpulltorefresh.samples.stock  \nAPP 示例：Gmail，Google Plus，知乎等  \n\n1. FadingActionBar  \nListView 向下滚动逐渐显现的 ActionBar  \n项目地址：https://github.com/ManuelPeinado/FadingActionBar  \nDemo 地址：https://play.google.com/store/apps/details?id=com.manuelpeinado.fadingactionbar.demo  \nAPP 示例：google music，知乎  \n\n1. NotBoringActionBar  \ngoogle music 下拉收缩的 ActionBar  \n项目地址：https://github.com/flavienlaurent/NotBoringActionBar  \nDemo 地址：http://flavienlaurent.com/blog/2013/11/20/making-your-action-bar-not-boring/  \nAPP 示例：Google 音乐  \n\n1. RefreshActionItem  \n带进度显示和刷新按钮的 ActionBar  \n项目地址：https://github.com/ManuelPeinado/RefreshActionItem  \nDemo 地址：https://play.google.com/store/apps/details?id=com.manuelpeinado.refreshactionitem.demo  \nAPP 示例：The New York Times，DevAppsDirect  \n\n1. GlassActionBar  \n类似玻璃的有一定透明度的 ActionBar  \n项目地址：https://github.com/ManuelPeinado/GlassActionBar  \nDemo 地址：https://play.google.com/store/apps/details?id=com.manuelpeinado.glassactionbardemo  \nAPP 示例：google music  \n\n### 三、Menu\n1. MenuDrawer  \n滑出式菜单，通过拖动屏幕边缘滑出菜单，支持屏幕上下左右划出，支持当前 View 处于上下层，支持 Windows 边缘、ListView 边缘、ViewPager 变化划出菜单等。  \n项目地址：https://github.com/SimonVT/android-menudrawer  \nDemo 地址：http://simonvt.github.io/android-menudrawer/  \nAPP 示例：Gmail、Google Music 等大部分 google app  \n\n1. SlidingMenu  \n滑出式菜单，通过拖动屏幕边缘滑出菜单，支持屏幕左右划出，支持菜单 zoom、scale、slide up 三种动画样式出现。与 MenuDrawer 相比而言，SlidingMenu 支持菜单动画样式出现，MenuDrawer 支持菜单 view 处于内容的上下层  \n项目地址：https://github.com/jfeinstein10/SlidingMenu  \n原理剖析文档：[SlidingMenu](http://a.codekk.com/detail/Android/huxian99/SlidingMenu 源码解析)  \nDemo 地址：https://play.google.com/store/apps/details?id=com.slidingmenu.example  \nAPP 示例：Foursquare, LinkedIn, Zappos, Rdio, Evernote Food, Plume, VLC for Android, ESPN ScoreCenter, MLS MatchDay, 9GAG, Wunderlist 2, The Verge, MTG Familiar, Mantano Reader, Falcon Pro (BETA), MW3 Barracks  \n\n1. ArcMenu  \n支持类似 Path 的左下角动画旋转菜单及横向划出菜单、圆心弹出菜单  \n项目地址：https://github.com/daCapricorn/ArcMenu  \nhttps://dl.dropboxusercontent.com/u/11369687/preview1.png  \nhttps://dl.dropboxusercontent.com/u/11369687/raymenu.png  \nAPP 示例：Path  \n\n1. android-satellite-menu  \n类似 Path 的左下角动画旋转菜单  \n项目地址：https://github.com/siyamed/android-satellite-menu  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/satellite-menu-demo.apk?raw=true  \nAPP 示例：Path  \n\n1. radial-menu-widget  \n圆形菜单，支持二级菜单  \n项目地址：https://code.google.com/p/radial-menu-widget/  \n\n1. Android Wheel Menu  \n圆形旋转选取菜单  \n项目地址：https://github.com/anupcowkur/Android-Wheel-Menu  \n\n1. FoldingNavigationDrawer  \n滑动并以折叠方式打开菜单  \n项目地址：https://github.com/tibi1712/FoldingNavigationDrawer-Android  \nDemo 地址：https://play.google.com/store/apps/details?id=com.ptr.folding.sample  \n\n1. AndroidResideMenu  \n仿 Dribbble 的边栏菜单  \n项目地址：https://github.com/SpecialCyCi/AndroidResideMenu  \n\n1. CircularFloatingActionMenu  \n一个可定制的圆形的浮动菜单控件，类似于 Path 的圆形菜单。这个控件的可定制性更强，可以很容易的定制菜单出现消失时的动画，起始角度和半径。  \n项目地址：https://github.com/oguzbilgener/CircularFloatingActionMenu  \n原理剖析文档：[CircularFloatingActionMenu](http://a.codekk.com/detail/Android/cpacm/CircularFloatingActionMenu 源码解析)  \nDemo 地址：https://github.com/oguzbilgener/CircularFloatingActionMenu/tree/master/samples  \n\n1. NavigationDrawerSI  \nNavigation Drawer 的一个简单实现，滑动并以折叠方式打开菜单  \n项目地址：https://github.com/mmBs/NavigationDrawerSI  \nDemo 地址：https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi  \nAPP 示例：https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi  \n\n1. DragLayout  \n使用 support.v4 包下的 ViewDragHelper 实现 QQ5.0 侧滑  \n项目地址：https://github.com/BlueMor/DragLayout  \n\n1. LDrawer  \nMaterial Design 形式的展开折叠 Icon  \n项目地址：https://github.com/ikimuhendis/LDrawer  \n\n1. Floating Action Button  \n悬浮的圆形菜单栏，支持组建滚动时自动隐藏及其他设置  \n项目地址：https://github.com/shamanland/floating-action-button  \n\n1. Side-Menu.Android  \n分类侧滑菜单，[Yalantis](http://yalantis.com/) 出品。  \n项目地址：https://github.com/Yalantis/Side-Menu.Android  \n原理剖析文档：[Side-Menu.Android](http://a.codekk.com/detail/Android/cpacm/Side Menu.Android 源码解析)  \n\n1. Context-Menu.Android  \n可以方便快速集成漂亮带有动画效果的上下文菜单，[Yalantis](http://yalantis.com/)出品。  \n项目地址：https://github.com/Yalantis/Context-Menu.Android  \n\n1. Droppy  \n支持多种样式的下拉菜单  \n项目地址：https://github.com/shehabic/Droppy  \n\n1. MaterialDrawer  \nMaterial Design 风格的导航抽屉，提供简便且强大的定制功能  \n项目地址：https://github.com/mikepenz/MaterialDrawer  \nDemo 地址：https://play.google.com/store/apps/details？id=com.mikepenz.materialdrawer.app  \n\n1. SlideBottomPanel  \n底部划出菜单，滑动时背景图透明度渐变，支持嵌套 LiewView 或 ScrollView  \n项目地址：[https://github.com/kingideayou/SlideBottomPanel](https://github.com/kingideayou/SlideBottomPanel)  \nDemo 地址：[SlideBottomPanelDemo 下载](https://github.com/kingideayou/SlideBottomPanel/raw/master/apk/SlideBottomPanelDemo.apk)  \n\n1. FlowingDrawer  \n带手势流动效果侧滑菜单\n项目地址：[https://github.com/mxn21/FlowingDrawer](https://github.com/mxn21/FlowingDrawer)\n\n### 四、ViewPager 、Gallery\n1. AdvancedPagerSlidingTabStrip   \n一个完美兼容ViewPager的导航栏组件；可以自定义TabView；能动态加载Tab上的Icon图片； 能显示Tab的消息数量和提示小圆点。  \n项目地址：https://github.com/HomHomLin/AdvancedPagerSlidingTabStrip\n\n1. ConvenientBanner  \n通用的广告栏控件，让你轻松实现广告头效果。支持无限循环，可以设置自动翻页和时间(而且非常智能，手指触碰则暂停翻页，离开自动开始翻页。你也可以设置在界面onPause的时候不进行自动翻页，onResume之后继续自动翻页)，并且提供多种翻页特效。 对比其他广告栏控件，大多都需要对源码进行改动才能加载网络图片，或者帮你集成不是你所需要的图片缓存库。而这个库能让有代码洁癖的你欢喜，不需要对库源码进行修改你就可以使用任何你喜欢的网络图片库进行配合。\n项目地址：https://github.com/saiwu-bigkoo/Android-ConvenientBanner  \n\n1. Android-ViewPagerIndicator  \n配合 ViewPager 使用的 Indicator，支持各种位置和样式  \n项目地址：https://github.com/JakeWharton/Android-ViewPagerIndicator  \nDemo 地址：https://play.google.com/store/apps/details?id=com.viewpagerindicator.sample  \nAPP 示例：太多了。。  \n\n1. JazzyViewPager  \n支持 Fragment 切换动画的 ViewPager，动画包括转盘、淡入淡出、翻页、层叠、旋转、方块、翻转、放大缩小等，效果类似桌面左右切换的各种效果，不过桌面并非用 ViewPager 实现而已  \n项目地址：https://github.com/jfeinstein10/JazzyViewPager  \nDemo 地址：https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true  \n\n1. JellyViewPager  \n特殊切换动画的 ViewPager  \n项目地址：https://github.com/chiemy/JellyViewPager  \n\n1. Android-DirectionalViewPager  \n支持横向和纵向(垂直)的 ViewPager  \n项目地址：https://github.com/JakeWharton/Android-DirectionalViewPager  \nDemo 地址：https://market.android.com/details?id=com.directionalviewpager.sample  \n\n1. FancyCoverFlow  \n支持 Item 切换动画效果的类似 Gallery View  \n项目地址：https://github.com/davidschreiber/FancyCoverFlow  \nDemo 地址：https://play.google.com/store/apps/details?id=at.technikum.mti.fancycoverflow.samples  \n\n1. AndroidTouchGallery  \n支持双击或双指缩放的 Gallery(用 ViewPager 实现)，相比下面的 PhotoView，在被放大后依然能滑到下一个 item，并且支持直接从 url 和文件中获取图片，  \n项目地址：https://github.com/Dreddik/AndroidTouchGallery  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/touch-gallery-demo.apk?raw=true  \nAPP 示例：类似微信中查看聊天记录图片时可双击放大，并且放大情况下能正常左右滑动到前后图片  \n\n1. Android Auto Scroll ViewPager  \nAndroid 自动滚动 轮播循环的 ViewPager  \n项目地址：https://github.com/Trinea/android-auto-scroll-view-pager  \nDemo 地址：https://play.google.com/store/apps/details?id=cn.trinea.android.demo  \n文档介绍：http://www.trinea.cn/android/auto-scroll-view-pager/  \n\n1. Android PagerSlidingTabStrip  \n配合 ViewPager 使用的 Indicator，支持 ViewPager Scroll 时 Indicator 联动  \n项目地址：https://github.com/astuetz/PagerSlidingTabStrip  \n原理剖析文档：[Android PagerSlidingTabStrip](http://a.codekk.com/detail/Android/ayyb1988/PagerSlidingTabStrip 源码解析)  \nDemo 地址：https://play.google.com/store/apps/details?id=com.astuetz.viewpager.extensions.sample  \n\n1. ViewPager3D  \nViewPager3D 效果  \n项目地址：https://github.com/inovex/ViewPager3D  \n\n1. AnimaTabsview  \n仿网易云音乐标签切换的动画,带透明小三角  \n项目地址：https://github.com/wuyexiong/transparent-over-animtabsview  \n在线演示：http://v.youku.com/v_show/id_XNzA4MjY5NjA0.html  \n\n1. LoopingViewPager  \n无限循环的 ViewPager  \n项目地址：https://github.com/imbryk/LoopingViewPager  \n\n1. android_page_curl  \n翻书卷曲效果  \n项目地址：https://github.com/harism/android_page_curl  \n在线演示：https://www.youtube.com/watch?v=iwu7P5PCpsw  \nAPP 示例：iReader  \n\n1. ViewPagerIndicator  \n简化并实现 android 的 TabHost 效果，顶部滑动 tab，引导页，支持自定义 tab 样式,自定义滑动块样式和位置,自定义切换 tab 的过渡动画,子界面的预加载和界面缓存,设置界面是否可滑动  \n项目地址：https://github.com/LuckyJayce/ViewPagerIndicator  \n\n1. ScreenSlideIndicator  \n轻量级的圆形 Indicadtor，位置可以自由调整，不会对 ViewPager 产生任何影响。  \n项目地址：[ScreenSlidePager](https://github.com/LyndonChin/Android-ScreenSlidePager)  \n\n1. SmartTabLayout  \n自定义的 Tab title strip，基于 Google Samples 中的 android-SlidingTabBasic 项目，滑动时 Indicator 可平滑过渡。  \n项目地址：https://github.com/ogaclejapan/SmartTabLayout  \nDemo 地址：https://play.google.com/store/apps/details?id=com.ogaclejapan.smarttablayout.demo  \n\n1. AndroidImageSlider  \nAndroid 图片滑动  \n项目地址：https://github.com/daimajia/AndroidImageSlider  \nApp示例：https://github.com/daimajia/AndroidImageSlider/releases/download/v1.0.8/demo-1.0.8.apk  \n\n1. RecyclerViewPager  \n完全继承自 RecyclerView，可以自定义触发翻页的距离，可自定义翻页速度，支持垂直方向的 ViewPager，支持 Fragment。  \n项目地址：[RecyclerViewPager](https://github.com/lsjwzh/RecyclerViewPager)  \n\n1. CircleIndicator  \n轻量级ViewPager指示器,支持三种不同的模式    \n项目地址：[CircleIndicator]( https://github.com/THEONE10211024/CircleIndicator)  \n\n1. EasySlidingTabs  \n一款简单、易用的滑动标签页  \n项目地址： https://github.com/CaMnter/EasySlidingTabs  \n\n### 五、GridView\n1. StaggeredGridView  \n允许非对齐行的 GridView，类似 Pinterest 的瀑布流，并且跟 ListView 一样自带 View 缓存，继承自 ViewGroup  \n项目地址：https://github.com/maurycyw/StaggeredGridView  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/staggered-gridview-demo.apk?raw=true  \nAPP 示例：Pinterest 等  \n\n1. AndroidStaggeredGrid  \n允许非对齐行的 GridView，类似 Pinterest 的瀑布流，继承自 AbsListView  \n项目地址：https://github.com/etsy/AndroidStaggeredGrid  \nAPP 示例：Pinterest 等  \n\n1. PinterestLikeAdapterView  \n允许非对齐行的 GridView，类似 Pinterest 的瀑布流，允许下拉刷新  \n项目地址：https://github.com/GDG-Korea/PinterestLikeAdapterView  \nAPP 示例：Pinterest 等  \n\n1. DraggableGridView  \nItem 可拖动交换位置的 GridView，实际是自己继承 ViewGroup 实现，类似桌面的单屏效果，可屏幕自动上下滚动进行 Item 移动交换，多屏效果见下面 PagedDragDropGrid  \n项目地址：https://github.com/thquinn/DraggableGridView  \nDemo 地址：https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true  \n也可以自定义item的宽高和每行的个数，并且修改交换逻辑，当移动到另一个item时就进行交换，删除滚动逻辑。\n项目地址：[DraggableGridView](https://github.com/andyken/DraggableGridView)  \n\n1. StickyGridHeaders  \nGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 GridView  \n项目地址：https://github.com/TonicArtos/StickyGridHeaders  \n\n1. PagedDragDropGrid  \nItem 可拖动交换位置、拖动删除的自定义控件，实际是自己继承 ViewGroup 实现，类似桌面的多屏效果，可拖动到屏幕边缘，屏幕自动左右滚动进行 Item 移动交换，可拖动进行删除，单屏效果见上面 DraggableGridView  \n项目地址：https://github.com/mrKlar/PagedDragDropGrid  \n在线演示：http://youtu.be/FYTSRfthSuQ  \n\n1. Android-DraggableGridViewPager  \nItem 可拖动交换位置的 GridView，实际是自己继承 ViewGroup 实现，类似桌面的多屏效果，可屏幕自动左右滚动进行 Item 移动交换，单屏效果见上面 DraggableGridView  \n项目地址：https://github.com/zzhouj/Android-DraggableGridViewPager  \nDemo 地址：https://github.com/Trinea/trinea-download/blob/master/draggable-grid-viewpager-demo.apk?raw=true  \n\n1. TwoWayGridView  \n可横向滚动的 GridView  \n项目地址：https://github.com/jess-anders/two-way-gridview  \n\n1. PagingGridView  \n分页加载的 GridView。当滑动到 GridView 底部最后一个行时，显示一个进度行，然后加载下一页数据，并显示。  \n项目地址：https://github.com/nicolasjafelle/PagingGridView  \n\n1. AsymmetricGridView  \n一个支持跨行和跨列可变 Item 大小的 GridView  \n项目地址：https://github.com/felipecsl/AsymmetricGridView  \nDemo 地址：https://play.google.com/store/apps/details?id=com.felipecsl.asymmetricgridview.app  \n\n1. GridView with Header and Footer  \n和`ListView`一样带头部和底部的`GridView`，用法和`ListView`一样  \n项目地址：https://github.com/liaohuqiu/android-GridViewWithHeaderAndFooter  \n\n### 六、ImageView\n1. PhotoView  \n支持双击或双指缩放的 ImageView，在 ViewPager 等 Scrolling view 中正常使用，相比上面的 AndroidTouchGallery，不仅支持 ViewPager，同时支持单个 ImageView  \n项目地址：https://github.com/chrisbanes/PhotoView  \n原理剖析文档：[PhotoView](http://a.codekk.com/detail/Android/dkmeteor/PhotoView 源码解析)  \nDemo 地址：https://play.google.com/store/apps/details?id=uk.co.senab.photoview.sample  \nAPP 示例：photup  \n\n1. Fresco-ImageView  \nFresco-ImageView是一种Android平台的图像控件，底层是对Fresco的封装，可以异步加载网络图片、项目资源和本地图片，并且支持双指缩放、图片的基本处理以及Fresco的所有特性。  \n项目地址：https://github.com/HomHomLin/FrescoImageView。  \n\n1. android-gif-drawable  \n支持 gif 显示的 view，用 jni 实现的，编译生成 so 库后直接 xml 定义 view 即可，而且本身不依赖于其他开源项目所以相对下面的 ImageViewEx 简单的多  \n项目地址：https://github.com/koral--/android-gif-drawable  \n\n1. ImageViewEx  \n支持 Gif 显示的 ImageView，依赖很多，编译过程很繁琐  \n项目地址：https://github.com/frapontillo/ImageViewEx  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/imageviewex-demo.apk?raw=true  \n\n1. RoundedImageView  \n带圆角的 ImageView  \n项目地址：https://github.com/vinc3m1/RoundedImageView  \n\n1. SelectableRoundedImageView  \nImageView 允许四个角的每一个有不同的半径值。也允许椭圆形、圆形的形状或者边  \n项目地址：https://github.com/pungrue26/SelectableRoundedImageView  \nDemo 地址：https://play.google.com/store/apps/details?id=com.joooonho  \n\n1. ColorArt  \n根据图片的均色设置背景色显示文字和图片，类似 itune11 中效果  \n项目地址：https://github.com/MichaelEvans/ColorArt  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/color-art-demo.apk?raw=true  \n\n1. CircleImageView  \n圆形的 ImageView  \n项目地址：https://github.com/hdodenhof/CircleImageView  \n\n1. ImageViewZoom  \n支持放大和平移的 ImageView  \n项目地址：https://github.com/sephiroth74/ImageViewZoom  \nAPP 示例：https://play.google.com/store/apps/details?id=com.aviary.android.feather  \n\n1. KenBurnsView  \n实现 Ken Burns effect 效果，达到身临其境效果的 ImageView  \n项目地址：https://github.com/flavioarfaria/KenBurnsView  \n\n1. CustomShapeImageView  \n各种形状的 ImageView, 相比上面的圆形 ImageView，多了更多形状  \n项目地址：https://github.com/MostafaGazar/CustomShapeImageView  \n\n1. Shape Image View  \n可以自定义各种形状的 ImageView, 并且支持边框  \n项目地址：https://github.com/siyamed/android-shape-imageview  \n\n1. TextDrawable  \n一个用于生成带有文本或者字母的图片的轻量级库。扩展自 Drawable，因此可用于现有/自定义/网络等 ImageView 类，并且包含一个流接口用于创建 drawables 以及一个定制的 ColorGenerator  \n项目地址：https://github.com/amulyakhare/TextDrawable  \n\n1. android-smart-image-view  \n可从 URL 或 contact address book 加载图片的 ImageView，支持缓存  \n项目地址：https://github.com/loopj/android-smart-image-view  \n\n1. PhotoView  \n支持双指/双击缩放的ImageView,支持从一个PhotoView缩放到另外一个PhotoView(点击图片放大预览),相对于其他PhototView有更加平滑的缩放,平移的动画,并且支持所有的ScaleType,可以作为普通的ImageView使用  \n项目地址：https://github.com/bm-x/PhotoView  \n\n### 七、ProgressBar\n1. SmoothProgressBar  \n水平进度条  \n项目地址：https://github.com/castorflex/SmoothProgressBar  \nDemo 地址：https://play.google.com/store/apps/details?id=fr.castorflex.android.smoothprogressbar.sample  \n\n1. MaterialProgessBar  \nMaterial Design 的进度条，支持 Android 4.0  \n项目地址：https://github.com/DreaminginCodeZH/MaterialProgressBar  \nDemo 地址：https://github.com/DreaminginCodeZH/MaterialProgressBar/blob/master/dist/sample.apk  \n\n1. ProgressWheel  \n支持进度显示的圆形 ProgressBar  \n项目地址：https://github.com/Todd-Davies/ProgressWheel  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/progress-wheel-demo.apk?raw=true  \n\n1. android-square-progressbar  \n在图片周围显示进度  \n项目地址：https://github.com/mrwonderman/android-square-progressbar  \nDemo 地址：https://play.google.com/store/apps/details?id=net.yscs.android.square_progressbar_example  \nAPP 示例：square  \n\n1. HoloCircularProgressBar  \nAndroid4.1 时钟 App 样式  \n项目地址：https://github.com/passsy/android-HoloCircularProgressBar  \nAPP 示例：Android4.1 时钟 App  \n\n1. ProgressButton  \n通过图钉的不同状态显示进度  \n项目地址：https://github.com/f2prateek/progressbutton  \n文档介绍：http://f2prateek.com/progressbutton/  \n\n1. GoogleProgressBar  \n类似 google 多个圆形卡片翻转的 progressBar  \n项目地址：https://github.com/jpardogo/GoogleProgressBar  \n\n1. TH-ProgressButton  \n带圆形进度显示的按钮  \n项目地址：https://github.com/torryharris/TH-ProgressButton  \n\n1. NumberProgressBar  \n带数字进度的进度条  \n项目地址：https://github.com/daimajia/NumberProgressBar  \n\n1. CircularProgressDrawable  \n带圆形进度显示的进度条  \n项目地址：https://github.com/Sefford/CircularProgressDrawable  \n\n1. Android-RoundCornerProgressBar  \nAndroid 圆角 ProgressBar，可自定义圆角颜色和半径，包括带 Icon 和不带 Icon 两种类型。  \n项目地址：https://github.com/akexorcist/Android-RoundCornerProgressBar  \n\n1. circular-progress-button  \n带进度显示的 Button  \n项目地址：https://github.com/dmytrodanylyk/circular-progress-button  \n\n1. WaveView  \n一个波纹效果的 View，可用来做 ProgressBar  \n项目地址：https://github.com/john990/WaveView  \nDemo 地址：https://raw.github.com/john990/WaveView/master/screenshot%26apk/demo.unaligned.apk  \n\n1. MaterialLoadingProgressBar  \n抽取自 SwipeRefreshLayout 的 Material Design 进度指示器  \n项目地址：https://github.com/lsjwzh/MaterialLoadingProgressBar  \n\n1. MetaballLoading  \nA 2d metaball loading\n项目地址：https://github.com/dodola/MetaballLoading\n\n1. SectorProgressView  \n一个圆形或环形的进度显示控件，用圆中扇形的角度大小来表示进度信息\n项目地址：https://github.com/timqi/SectorProgressView\nDemo：[apk download](https://github.com/timqi/SectorProgressView/raw/master/art/example.apk) \n\n1. CircularFillableLoaders  \n一个可以用于闪屏或者其他地方加载的控件\n项目地址：https://github.com/lopspower/CircularFillableLoaders\nDemo地址：(https://play.google.com/store/apps/details?id=com.mikhaellopez.circularfillableloaderssample) \n\n1. PinWheel  \n一个旋转的大风车Dialog \n项目地址：https://github.com/codingWang/PinWheel\n\n1. ColorArcProgressBar\n一个可定制的圆形进度条，通过xml参数配置可实现QQ健康中步数的弧形进度显示、仪盘表显示速度、最常见的下载进度条等功能。\n项目地址：https://github.com/Shinelw/ColorArcProgressBar\n\n### 八、TextView\n包括 TextView 及所有继承自 TextView 控件，如 EditText、Button、RadioButton  \n\n1. android-flowtextview  \n文字自动环绕其他 View 的 Layout  \n项目地址：https://github.com/deano2390/FlowTextView  \n\n1. Android Form EditText  \n验证输入合法性的编辑框，支持输入、英文、ip、url 等多种正则验证  \n项目地址：https://github.com/vekexasia/android-edittext-validator  \nDemo 地址：https://play.google.com/store/apps/details?id=com.andreabaccega.edittextformexample  \n\n1. Emojicon  \n支持 emojis 的 TextView 和 EditText  \n项目地址：https://github.com/rockerhieu/emojicon  \n文档介绍：http://rockerhieu.com/emojicon/  \n\n1. android-circlebutton  \nAndroid 圆形按钮，实际实现是继承自 ImageView  \n项目地址：https://github.com/markushi/android-circlebutton  \nDemo 地址：https://github.com/markushi/android-circlebutton/blob/master/example/example.apk  \n\n1. Segmented Radio Buttons for Android  \niOS’s segmented controls 的实现  \n项目地址：https://github.com/vinc3m1/android-segmentedradiobutton  \nDemo 地址：https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true  \n\n1. Chips EditText Library  \n支持国家名字联想从而选择显示该国国旗的 EditText，实际就是通过 SpannableStringBuilder 实现  \n项目地址：https://github.com/kpbird/chips-edittext-library  \nDemo 地址：https://github.com/kpbird/chips-edittext-library/tree/master/ChipsEditTextDemo/bin  \n\n1. AutoFitTextView  \n可固定边界内容字体大小自适应的 TextView  \n项目地址：https://github.com/grantland/android-autofittextview  \n\n1. Shimmer for Android  \n文字发淡光的 TextView  \n项目地址：https://github.com/RomainPiel/Shimmer-android  \n\n1. Titanic  \n可以显示水位上升下降(不知道该怎么描述 囧)的 TextView  \n项目地址：https://github.com/RomainPiel/Titanic  \n\n1. android-iconify  \n提供带 Icon 的 TextView,Menu,Button 等  \n项目地址：https://github.com/JoanZapata/android-iconify  \n\n1. Calligraphy  \n让我们在 android 开发中使用自定义字体变得更加简单  \n项目地址：https://github.com/chrisjenx/Calligraphy  \n\n1. CreditsRoll  \n类似星球大战字幕效果的 TextView  \n项目地址：https://github.com/frakbot/CreditsRoll  \n\n1. android-process-buton  \n带加载或提交进度的 Button  \n项目地址：https://github.com/dmytrodanylyk/android-process-buton  \n\n1. FButton  \n扁平化的 Button  \n项目地址：https://github.com/hoang8f/android-flat-button  \nDemo 地址：https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo  \n\n1. FloatingActionButton  \n一个类似 Android 版 Google+浮动功能按钮的控件，可以响应 ListView 的滚动事件。当列表向上滚动的时候会自动显示，向下滚动的时候自动隐藏。  \n项目地址：https://github.com/makovkastar/FloatingActionButton  \nDemo 地址：https://github.com/makovkastar/FloatingActionButton/tree/master/  \n\n1. Android Saripaar  \nAndroid 表单验证  \n项目地址：https://github.com/ragunathjawahar/android-saripaar/  \n\n1. JumpingBeans  \n文字像 Mexican beans 一样跳动  \n项目地址：https://github.com/frakbot/JumpingBeans  \nDemo 地址：http://play.google.com/store/apps/details?id=net.frakbot.jumpingbeans.demo  \n\n1. FancyButtons  \n一个不用图片就可以帮助我们创建出漂亮按钮的库。  \n项目地址：https://github.com/medyo/fancybuttons  \nDemo 地址：https://github.com/medyo/fancybuttons/tree/master/samples  \n\n1. Android-RobotoTextView  \n一个实现了所有 Roboto 字体的 TextView，包括新出的 Roboto Slab 字体。  \n项目地址：https://github.com/johnkil/Android-RobotoTextView  \nDemo 地址：http://play.google.com/store/apps/details?id=com.devspark.robototextview  \nDemo 项目：https://github.com/johnkil/Android-RobotoTextView/tree/master/robototextview-sample  \n\n1. Android-WizardPager  \n一个表单向导库  \n项目地址：https://github.com/romannurik/android-wizardpager  \nDemo 项目：https://github.com/str4d/android-wizardpager/tree/textfield  \n\n1. RippleView  \n一个实现了 Android L 上才引入的点击按钮后出现水波纹效果的按钮  \n项目地址：https://github.com/siriscac/RippleView  \nDemo 项目：https://github.com/siriscac/RippleView/tree/master/RippleViewExample  \n\n1. RippleEffect  \n一个实现 Material Design Ripple 效果的库，支持 Android API 9+以上版本。  \n项目地址：https://github.com/traex/RippleEffect  \nDemo 项目：https://github.com/traex/RippleEffect/tree/master/sample  \n\n1. RippleCompat\n使用易于移植的方式为UI控件实现波纹效应，可以适配控件原背景及Palette支持。api简单，可自定义效果，兼容至Android API 7+。\n项目地址：https://github.com/desmond1121/RippleCompat\nDemo 项目：https://github.com/desmond1121/RippleCompat/tree/master/app\n\n1. Android Floating Label Widgets  \n包含一系列控件，这些控件特点是：有默认值，当值不为空时默认值浮动到上面变为提示  \n项目地址：https://github.com/marvinlabs/android-floatinglabel-widgets  \nDemo 地址：https://play.google.com/store/apps/details?id=com.marvinlabs.widget.floatinglabel.demo  \n在线演示：http://www.youtube.com/watch?v=hpZD9gJcRg0&feature=youtu.be  \n\n1. MaterialEditText  \nEditText 的 Material Design 实现。包含 [Google Material Design Spec](http://www.google.com/design/spec/components/text-fields.html)中的 UI 效果和一些新增特性。  \n项目地址：https://github.com/rengwuxian/MaterialEditText  \n\n1. MaterialEditText  \n实现 [Material Design](http://www.google.com/design/spec/components/text-fields.html) 中 Ripple 效果线条背景的 EditText。直接替换原生 EditText 即可集成。  \n项目地址：https://github.com/DreamingInCodeZH/MaterialEditText    \n\n1. MultiActionTextView  \n可以分别给 TextView 中的某几个字设置点击事件的 TextView  \n项目地址：https://github.com/ajaysahani/MultiActionTextView  \n\n1. ToggleButton  \n状态切换的 Button，类似 iOS，用 View 实现  \n项目地址：https://github.com/zcweng/ToggleButton  \n\n1. SwitchButton  \n状态切换的 Button，类似 iOS，拥有良好的用户界面  \n项目地址：https://github.com/kyleduo/SwitchButton  \n\n1. SlideSwitch  \n状态切换的开关，可以设置为类似 IOS 的圆形，也可以设置为矩形，用 View 实现  \n项目地址：https://github.com/Leaking/SlideSwitch  \n\n1. ExpandableTextView  \n可展开和收缩内容的 TextView。  \n项目地址：https://github.com/Manabu-GT/ExpandableTextView  \n\n1. TagCloudView(支持 SingleLine 模式的标签云)  \n标签云效果，只需要一行代码即可设置为 SingleLine 模式，轻松实现知乎问题话题列表效果。SingleLine 模式时末尾文字及图片可自定义。\n项目地址：https://github.com/kingideayou/TagCloudView  \n示例APK地址：https://github.com/kingideayou/TagCloudView/raw/master/apk/Demo.apk  \nAPP示例：知乎  \n\n1. BubbleTextView \nAndroid Bubble View \n项目地址：https://github.com/dupengtao/BubbleTextView \n\n1. shadow-layout\nAndroid Shadow Layout\n解决了`CardView`：1.不能画圆的阴影。2.设置阴影的位置。3.设置阴影颜色。\n项目地址：https://github.com/dmytrodanylyk/shadow-layout\n\n### 九、ScrollView\n1. Discrollview  \n支持滚动时 Item 淡入淡出，平移，缩放效果的 ScrollView  \n项目地址：https://github.com/flavienlaurent/discrollview  \nDemo 地址：https://github.com/flavienlaurent/discrollview/raw/master/sample.apk  \n\n1. PullScrollView  \n仿照新浪微博 Android 客户端个人中心的 ScrollView，下拉背景伸缩回弹效果。  \n项目地址：https://github.com/MarkMjw/PullScrollView  \n\n1. ArcLayout  \n一个非常简单的弧布局库  \n项目地址：https://github.com/ogaclejapan/ArcLayout  \nDemo 地址：https://play.google.com/store/apps/details?id=com.ogaclejapan.arclayout.demo  \n\n1. ParallaxScrollView  \n支持视差滚动的 ScrollView ，背景图片的滚动速度小于 ScrollView 中子控件的滚动速度  \n项目地址：https://github.com/chrisjenx/ParallaxScrollView  \nDemo 地址：http://cloud.github.com/downloads/chrisjenx/ParallaxScrollView/ParallaxScrollViewDemo-v1.0.5.apk  \n\n1. AKParallax-Android  \n支持视差滚动的 ScrollView  \n项目地址：https://github.com/ideaismobile/AKParallax-Android  \nDemo 地址：https://play.google.com/store/apps/details?id=com.appkraft.parallax_sample  \n\n1. Android-ObservableScrollView  \n监听滚动视图滚动事件的库，帮助与 Toolbar 的交互动效处理与 Material Design 的实现  \n项目地址：https://github.com/ksoichiro/Android-ObservableScrollView  \nDemo 地址：https://play.google.com/store/apps/details?id=com.github.ksoichiro.android.observablescrollview.samples2  \n\n1. OverScrollView  \n有弹性的 ScrollView，实现了当手指滑动到 ScrollView 的顶部、底部时，可以继续的向上、向下拉伸。当释放手指的时候，向上、下回弹  \n项目地址：https://github.com/EverythingMe/OverScrollView  \n\n### 十、TimeView\n包括 TimePicker、DatePicker、CalendarView、Clock 等时间相关控件  \n\n1. android-times-square  \nAndroid 日历时间部件，支持选取单个日期，多个日期，及日期区间段和对话框形式显示  \n项目地址：https://github.com/square/android-times-square  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/times-square-demo.apk?raw=true  \n\n1. android-calendar-card  \n日历  \n项目地址：https://github.com/kenumir/android-calendar-card  \nDemo 地址：https://play.google.com/store/apps/details?id=com.wt.calendarcardsample  \n\n1. AndroidWheel  \nAndroid Wheel 支持城市、多种日期时间、密码、图片  \n项目地址：https://code.google.com/p/android-wheel/  \n\n1. GoogleDateTimePickers  \n时间选择部件  \n项目地址：https://github.com/Mirkoddd/GoogleDateTimePickers  \n文档介绍：https://play.google.com/store/apps/details?id=com.mirko.sample&hl=it  \n\n1. DateTimePicker  \n日期选择部件(Google Agenda 的样式风格)  \n项目地址：https://github.com/flavienlaurent/datetimepicker  \nDemo 地址：https://raw.github.com/biboune/datetimepicker/master/datetimepicker-sample.apk  \n\n1. android-betterpickers  \n提供日期、数字、时间（数字方式和钟表方式）、重复周期（闹钟的周期重复）、HMS（时、分、秒）的选择，支持以 DialogFragment 的弹窗选择  \n项目地址：https://github.com/derekbrameyer/android-betterpickers  \nDemo 地址：https://play.google.com/store/apps/details?id=com.doomonafireball.betterpickers.sample  \n\n1. Android Week View  \n日期控件，支持周，天视图，支持自定义样式  \n项目地址：https://github.com/alamkanak/Android-Week-View  \n\n1. PickerView  \n仿 iOS 的 PickerView 控件，有时间选择和选项选择并支持一二三级联动效果，TimePopupWindow 时间选择器，支持年月日时分，年月日，时分等格式；OptionsPopupWindow 选项选择器，支持一，二，三级选项选择，并且可以设置是否联动  \n项目地址：https://github.com/saiwu-bigkoo/Android-PickerView  \n\n1. CountdownView  \nAndroid 倒计时控件，使用Canvas绘制，支持多种样式  \n项目地址：https://github.com/iwgang/CountdownView  \n\n### 十一、TipView\n包括 Toast、角标、UndoBar 等提示性控件  \n\n1. SVProgressHUD \nSVProgressHUD For Android 精仿iOS的提示库 SVProgressHUD，api也几乎一样。  \n项目地址：https://github.com/saiwu-bigkoo/Android-SVProgressHUD  \n\n1. Crouton  \n丰富样式的 Toast，允许 alert、comfirm、info 样式及点击消失样式，允许设置 Toast 显示时间，允许自定义 View。 本文 32. SuperToasts 为其扩展版  \n项目地址：https://github.com/keyboardsurfer/Crouton  \nDemo 地址：http://play.google.com/store/apps/details?id=de.keyboardsurfer.app.demo.crouton  \n\n1. supertooltips  \n带动画效果的 Tips 显示  \n项目地址：https://github.com/nhaarman/supertooltips  \nDemo 地址：https://play.google.com/store/apps/details?id=com.haarman.supertooltips  \n\n1. Android ViewBadger  \n为其他 View 添加角标（消息圆点）等  \n项目地址：https://github.com/jgilfelt/android-viewbadger  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/android-viewbadger.apk?raw=true  \n\n1. SuperToasts  \n更丰富样式的 toast，支持 Button、Progress、Horizontal Progress 样式、支持进入动画、支持撤销及其动画设置  \n项目地址：https://github.com/JohnPersano/SuperToasts  \nDemo 地址：https://play.google.com/store/apps/details?id=com.supertoastsdemo  \n\n1. UndoBar  \n屏幕底部显示取消或是确认的 PopupWindows  \n项目地址：https://github.com/soarcn/UndoBar  \n\n1. UndoBar  \n屏幕底部显示取消或是确认某操作  \n项目地址：https://github.com/jenzz/Android-UndoBar  \n\n1. Android-ActionItemBadge  \n可以在 ActionBar 的 MenuItem 上显示一个小角标  \n项目地址：https://github.com/mikepenz/Android-ActionItemBadge  \n\n1. SnackBar  \nMaterial Design 风格的 Toast，类似 Google inbox 中的提示  \n项目地址：https://github.com/MrEngineer13/SnackBar  \nDemo 地址：https://play.google.com/store/apps/details?id=com.mrengineer13.snackbar.sample  \n\n1. HeadsUp  \n在 2.3 上使用 android  5.0 的 HeadsUp 效果  \n项目地址：https://github.com/zzz40500/HeadsUp  \n\n### 十二、FlipView\n1. android-flip  \n类似 Flipboard 翻转动画的实现  \n项目地址：https://github.com/openaphid/android-flip  \nDemo 地址：https://github.com/openaphid/android-flip/blob/master/FlipView/Demo/APK/Aphid-FlipView-Demo.apk?raw=true  \nAPP 示例：flipboard  \n\n1. FlipImageView  \n支持 x、y、z 及动画选择的翻转动画的实现  \n项目地址：https://github.com/castorflex/FlipImageView  \nDemo 地址：https://play.google.com/store/apps/details?id=fr.castorflex.android.flipimageview  \n\n1. FoldableLayout  \nFlip 翻转效果的 ListView，目前还不支持 ListView 缓存  \n项目地址：https://github.com/alexvasilkov/FoldableLayout  \nDemo 地址：http://play.google.com/store/apps/details?id=com.alexvasilkov.foldablelayout.sample  \n\n1. FlipViewPager.Draco  \nFlip 翻转效果的 ViewPager  \n项目地址：https://github.com/Yalantis/FlipViewPager.Draco  \n\n### 十三、ColorPickView\n1. ColorPickerView  \n颜色选择器，支持 PopupWindows 或新的 Activity 中打开  \n项目地址：https://code.google.com/p/color-picker-view/  \n\n1. HoloColorPicker  \n颜色选择器  \n项目地址：https://github.com/LarsWerkman/HoloColorPicker  \nDemo 地址：https://docs.google.com/file/d/0BwclyDTlLrdXRzVnTGJvTlRfU2s/edit  \n\n1. ColorPickerPreference  \n颜色选择器  \n项目地址：https://github.com/attenzione/android-ColorPickerPreference  \n\n1. ColorPicker  \n颜色选择器（Google Agenda 中的样式风格）  \n项目地址：https://github.com/flavienlaurent/colorpicker  \nDemo 地址：https://raw.github.com/biboune/colorpicker/master/colorpicker-sample.apk  \n\n### 十四、GraphView\n1. MPAndroidChart  \n强大的图表绘制工具，支持折线图、面积图、散点图、时间图、柱状图、条图、饼图、气泡图、圆环图、范围（高至低）条形图、网状图等；支持图的拖拽缩放；支持 Android 2.2 以上，支持横纵轴缩放，多指缩放，展现动画、高亮、保存到 sdcard、从文件读取图表  \n项目地址：https://github.com/PhilJay/MPAndroidChart  \nDemo 地址：https://play.google.com/store/apps/details?id=com.xxmassdeveloper.mpchartexample  \nDemo 项目：https://github.com/PhilJay/MPAndroidChart/tree/master/MPChartExample  \n在线演示：https://www.youtube.com/watch?v=ufaK_Hd6BpI  \n\n1. achartengine  \n强大的图表绘制工具，支持折线图、面积图、散点图、时间图、柱状图、条图、饼图、气泡图、圆环图、范围（高至低）条形图、拨号图/表、立方线图及各种图的结合  \n项目地址：https://code.google.com/p/achartengine/  \n官网网址：http://www.achartengine.org/  \nAPP 示例：Wordpress Android，Google Analytics  \n\n1. GraphView  \n绘制图表和曲线图的 View，可用于 Android 上的曲形图、柱状图、波浪图展示  \n项目地址：https://github.com/jjoe64/GraphView  \nDemo 项目：https://github.com/jjoe64/GraphView-Demos  \nAPP 示例：Wordpress Android，Google Analytics  \n\n1. HoloGraphLibrary  \n绘制现状图、柱状图、饼状图  \n项目地址：https://bitbucket.org/danielnadeau/holographlibrary/src  \n文档介绍：https://bitbucket.org/danielnadeau/holographlibrary/wiki/Home  \n\n1. XCL-Charts  \nXCL-Charts 基于原生的 Canvas 来绘制各种图表,在设计时，尽量在保证开发效率的同时，给使用者提供足够多的定制化能力。因此使用简便,同时具有相当灵活的定制能力。目前支持 3D/非 3D 柱形图(Bar Chart)、3D/非 3D 饼图(Pie Chart)、堆积图(Stacked Bar Chart)、面积图(Area Chart)、 折线图(Line Chart)、曲线图(Spline Chart)、环形图(Dount Chart)、南丁格尔玫瑰图(Rose Chart)、仪表盘(Dial Chart)、刻度盘(Gauge Chart)、雷达图(Radar Chart)、圆形图(Circle Chart)等图表。其它特性还包括支持图表缩放、手势移动、动画显示效果、高密度柱形显示、图表分界定制线、多图表的混合显示及同数据源不同类型图表切换等。  \n项目地址：https://github.com/xcltapestry/XCL-Charts  \nDemo 地址：https://github.com/xcltapestry/XCL-Charts/blob/master/XCL-Charts-demo/bin/XCL-Charts-demo.apk?raw=true  \n\n1. EazeGraph  \nAndroid 图表库，支持柱状图、分层柱状图、饼状图、线性图  \n项目地址：https://github.com/blackfizz/EazeGraph  \nDemo 地址：https://play.google.com/store/apps/details?id=org.eazegraph.app  \n\n1. WilliamChart  \n绘制图表的库，支持 LineChartView、BarChartView 和 StackBarChartView 三中图表类型，并且支持 Android 2.2 及以上的系统。  \n项目地址：https://github.com/diogobernardino/WilliamChart  \nDemo 地址：https://play.google.com/store/apps/details?id=com.db.williamchartdemo  \nDemo 项目：https://github.com/diogobernardino/WilliamChart/tree/master/sample  \n\n1. HelloCharts for Android  \n支持折线图、柱状图、饼图、气泡图、组合图；支持预览、放大缩小，滚动，部分图表支持动画；支持 Android 2.2 以上  \n项目地址：https://github.com/lecho/hellocharts-android  \nDemo 地址：https://play.google.com/store/apps/details?id=lecho.lib.hellocharts.samples  \n在线演示：https://www.youtube.com/watch?v=xbSBjyjH2SY  \n\n1. PieChartView  \n比较简单直接的饼状统计报表图，使用方便，设置相应的属性参数即可  \n项目地址：https://github.com/wuseal/PieChartView  \nDemo 地址：https://github.com/wuseal/PieChartView  \n\n### 十五、UI Style\n不同样式的系统 UI 风格，如 IOS、Bootstrap 风格  \n\n1. UITableView  \nios 风格控件，包括 Button、ListView、TableView  \n项目地址：https://github.com/thiagolocatelli/android-uitableview  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/ui-tableview-demo.apk?raw=true  \n\n1. ATableView  \nios 风格控件  \n项目地址：https://github.com/dmacosta/ATableView  \nDemo 地址：https://play.google.com/store/apps/details?id=com.nakardo.atableview.demo  \n\n1. Cards-UI  \n卡片式 View，支持单个卡片，item 为卡片的 ListView  \n项目地址：https://github.com/afollestad/Cards-UI  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/cards-ui-demo.apk?raw=true  \n\n1. cardslib  \n卡片式 View，支持单个卡片，item 为卡片的 ListView 和 GridView  \n项目地址：https://github.com/gabrielemariotti/cardslib  \nDemo 地址：https://play.google.com/store/apps/details?id=it.gmariotti.cardslib.demo  \n\n1. Android-Bootstrap  \nBootstrap 风格的按钮  \n项目地址：https://github.com/Bearded-Hen/Android-Bootstrap  \n\n1. Material Design Android Library  \nAndroid L 中 Material Design 风格的组件适配到 Android 2.2+  \n项目地址：https://github.com/navasmdc/MaterialDesignLibrary  \n\n1. Android FlatUI  \nAndroid 扁平化风格的组件，支持一些自定义样式  \n项目地址：https://github.com/eluleci/FlatUI  \n\n1. cheesesquare  \n全新 Android 设计库演示 Demo，包括 Collapsing Toolbar、FloatingActionButton、View anchoring、NavigationView、Snackbar  \n项目地址：https://github.com/chrisbanes/cheesesquare  \n\n### 十六、其他\n1. SnappingStepper   \n一种漂亮的UI控件，能更灵活的控制数字的增减。可用于购物车商品数量控制。  \n项目地址：https://github.com/saiwu-bigkoo/Android-SnappingStepper  \n\n1. SwipeBackLayout  \n左右或向上滑动返回的 Activity  \n项目地址：https://github.com/Issacw0ng/SwipeBackLayout  \nDemo 地址：https://play.google.com/store/apps/details?id=me.imid.swipebacklayout.demo  \nAPP 示例：知乎  \n\n1. android-styled-dialogs  \n可自定义样式的 dialog，默认与 Holo 主题样式一致，在 Android2.2 以上同一样式  \n项目地址：https://github.com/inmite/android-styled-dialogs  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/styled-dialogs-demo.apk?raw=true  \n\n1. Android Sliding Up Panel  \n可拖动的 View，能在当前 Activity 上扶起一个可拖动的 Panel  \n项目地址：https://github.com/umano/AndroidSlidingUpPanel  \nDemo 地址：https://play.google.com/store/apps/details?id=com.sothree.umano  \nAPP 示例：Google Music 精简播放栏  \n\n1. TableFixHeaders  \n第一列固定的 Table  \n项目地址：https://github.com/InQBarna/TableFixHeaders  \nDemo 地址：http://bit.ly/13buAIq  \n\n1. Inscription  \n可用于展示应用 change 和 new feature 信息  \n项目地址：https://github.com/MartinvanZ/Inscription  \n\n1. ActivityTransition  \nActivity 切换动画，包括渐变、flip、某个位置进入等等  \n项目地址：https://github.com/ophilbert/ActivityTransition  \n文档介绍：https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true  \n\n1. EasyAndroidAnimations  \n针对 View 的各种动画  \n项目地址：https://github.com/2359media/EasyAndroidAnimations  \n\n1. ViewAnimation    \n对android view 动画进行封装,实现起更简单，自带三种常见运动路径，其他的可自定义  \n项目地址：https://github.com/guohuanwen/ViewAniamtion  \nAPP 示例：QQ名片圈圈效果  \n\n1. AndroidLoadingAnimation  \n多种android加载动画  \n项目地址：https://github.com/guohuanwen/AndroidLoadingAnimation  \n\n1. android-lockpattern  \nAndroid 的图案密码解锁  \n项目地址：https://code.google.com/p/android-lockpattern/  \n原理剖析文档：[android-lockpattern](http://a.codekk.com/detail/Android/爱早起/Android Lock Pattern 源码解析)  \nDemo 地址：https://play.google.com/store/apps/details?id=group.pals.android.lib.ui.lockpattern.demo  \n文档介绍：https://code.google.com/p/android-lockpattern/wiki/QuickUse  \nAPP 示例：Android 开机的图案密码解锁，支付宝的密码解锁  \n\n1. PatternLock  \n另一个 Android 图案解锁库  \n项目地址：https://github.com/DreaminginCodeZH/PatternLock  \nDemo 地址：https://github.com/DreaminginCodeZH/PatternLock/raw/master/dist/sample.apk  \nAPP 示例：Android 开机的图案密码解锁，支付宝的密码解锁  \n\n1. RangeBar  \n类似于 SeekBar，不同的是可以选择一个范围内的值而不是单个值  \n项目地址：https://github.com/edmodo/range-bar  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/range-bar-demo.apk?raw=true  \n\n1. ChromeView  \n利用 Chromium 实现的 WebView，解决各个 Android 版本 WebView 不同的问题，同时利用最新 Chrome 代码  \n项目地址：https://github.com/pwnall/chromeview  \n\n1. android-phased-seek-bar  \n支持预先定义状态的 SeekBar  \n项目地址：https://github.com/ademar111190/android-phased-seek-bar  \n\n1. Android Slider Preference Library  \n可添加到设置中的基于对话框的 RankBar 小部件  \n项目地址：https://github.com/jayschwa/AndroidSliderPreference  \n\n1. ShowcaseView library  \n用于高亮显示应用程序的特定部分，从而突出突出重点  \n项目地址：https://github.com/amlcurran/ShowcaseView  \n\n1. android-segmented-control  \nAndroid 上的 Segmented Controls，相当于 RadioButton 组  \n项目地址：https://github.com/hoang8f/android-segmented-control  \n\n1. Swipeable Cards  \n类似 Tinder 的卡片效果，可以加载图片并动画效果展示，向左滑动表示喜欢，向右表示不喜欢  \n项目地址：https://github.com/kikoso/Swipeable-Cards  \nDemo 地址：https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo  \n\n1. EdgeEffectOverride  \n改变 ScrollView, ListView, ExpandableListView, GridView, ViewPager 等滚动控件滚动到边缘的颜色效果  \n项目地址：https://github.com/AndroidAlliance/EdgeEffectOverride  \n\n1. android-pinned-header-listviews  \n使 ExpandListView 的 Group 滑动到顶端时会固定不动直到另外一个 Group 到达顶端  \n项目地址：https://github.com/rtyley/android-pinned-header-listviews  \n\n1. AndroidSwipeLayout  \n滑动 Layout，支持单个 View，ListView，GridView  \n项目地址：https://github.com/daimajia/AndroidSwipeLayout  \nDemo 地址：[Download Demo](https://github.com/daimajia/AndroidSwipeLayout/releases/download/v1.0.0/AndroidSwipeLayout-Demo-1.0.1-snapshot.apk)  \n\n1. DynamicCardLayout  \n在 Android 中实现的类似 Windows8 的瓷片布局  \n项目地址：https://github.com/dodola/DynamicCardLayout  \n\n1. Emoticons-Keyboard  \n带表情情符号的自定义键盘  \n项目地址：https://github.com/chiragjain/Emoticons-Keyboard  \n\n1. Android Typeface Helper  \n可以帮你轻松实现自定义字体的库  \n项目地址：https://github.com/norbsoft/android-typeface-helper  \n\n1. Android-Anim-Playground  \n几个动画效果，其中第二个基于 android-svg 的绘制效果非常好  \n项目地址：https://github.com/Tibolte/Android-Anim-Playground  \n\n1. AlertView \n仿iOS的AlertViewController 几乎完美还原iOS 的 AlertViewController ，同时支持Alert和ActionSheet模式，每一个细节都是精雕细琢，并把api封装成懒到极致模式，一行代码就可以进行弹窗.  \n项目地址：https://github.com/saiwu-bigkoo/Android-AlertView  \n\n1. NiftyDialogEffects  \n支持自定义飞入动画样式的 Dialog  \n项目地址：https://github.com/sd6352051/NiftyDialogEffects  \n在线演示：http://tympanus.net/Development/ModalWindowEffects/  \n\n1. PostOffice  \n创建 Holo 及 Material Design 样式的 Dialog  \n项目地址：https://github.com/r0adkll/PostOffice  \n\n1. Swipecards  \n类似 Tinder 的卡片效果，可以加载图片并动画效果展示，向左滑动表示喜欢，向右表示不喜欢，根据 Kikoso's Swipeable-Cards 改造而来  \n项目地址：https://github.com/Diolor/Swipecards  \n\n1. SeekArc  \n圆形的 SeekBar  \n项目地址：https://github.com/TriggerTrap/SeekArc  \n\n1. BlurDialogFragment  \n显示  DialogFragment 时背景模糊效果  \n项目地址：https://github.com/tvbarthel/BlurDialogFragment  \nDemo 地址：https://play.google.com/store/apps/details?id=fr.tvbarthel.lib.blurdialogfragment.sample  \n\n1. range-seek-bar  \n随机值选取的 SeekBar  \n项目地址：https://github.com/yahoo/android-range-seek-bar  \n\n1. MaterialRangeBar  \n可以选择一个范围内的值而不是单个值的 SeekBar，RangeBar 的 Material Design 风格适配  \n项目地址：https://github.com/oli107/material-range-bar  \n\n1. MaterialList  \nMaterial Design 风格的 CardView  \n项目地址：https://github.com/dexafree/MaterialList  \nDemo 地址：https://play.google.com/store/apps/details?id=com.dexafree.materiallistviewexample  \n\n1. road-trip  \n设置 path 的各种动画效果，以及如何实现复杂路径动画，类似于 ios 中的指纹注册界面的指纹动画效果  \n项目地址：https://github.com/romainguy/road-trip  \n\n1. dialogplus  \n一个简单的 Android 对话框，支持不同的弹出模式  \n项目地址：https://github.com/orhanobut/dialogplus  \n\n1. FlowLayout  \n一个简单的流式布局，用法类似 LinearLayout，但是能够让子元素根据宽度自动换行  \n项目地址：[FLowLayout](https://github.com/LyndonChin/AndroidFlowLayout)  \n\n1. CircleSeekbar  \n一个环形Seekbar组件,支持叠加复合使用  \n项目地址：[CircleSeekbar](https://github.com/feeeei/CircleSeekbar)  \n\n1. FinestWebView  \n美麗的和可定制的Android的活動，顯示在一個應用程序的網頁。  \n项目地址: https://github.com/TheFinestArtist/FinestWebView-Android  \nSample 地址: https://play.google.com/store/apps/details?id=com.thefinestartist.finestwebview.sample  \n\n1. YouTubePlayerActivity  \n只需通過一個URL來在新的活動播放YouTube視頻。它支持屏幕方向，媒體音量控制等。  \n项目地址: https://github.com/TheFinestArtist/YouTubePlayerActivity  \nSample 地址: https://play.google.com/store/apps/details?id=com.thefinestartist.ytpa.sample  \n\n1. material-camera  \nmaterial风格的camera。能使camera使用起来更简单的库。  \n项目地址：https://github.com/afollestad/material-camera   \n\n1. material-dialogs  \n各种material风格的dialog。\n漂亮的的、易于使用的和可定制的Dialog API，你能够使用Material designed风格的Dialog到API 8。  \n项目地址：https://github.com/afollestad/material-dialogs   \nSample地址：https://github.com/afollestad/material-dialogs/blob/master/sample/sample.apk  \n  \n1. NotifyUtil  \n最常见的通知样式库  \n项目地址:https://github.com/wenmingvs/NotifyUtil  \ndemo地址：https://github.com/wenmingvs/NotifyUtil#notifydemo  \n\n1. CanPhotos\n使用fresco选取多张图片并可预览图片  \n项目地址：https://github.com/canyinghao/CanPhotos   \n\n1. CanDialog\n仿照系统Dialog所写，继承于FrameLayout，添加一些动画，一些显示类型。  \n项目地址：https://github.com/canyinghao/CanDialog  \n\n## 第二部分 工具库\n主要包括那些不错的开发库，包括依赖注入框架、图片缓存、网络请求、数据库 ORM 建模、Android 公共库、Android 高版本向低版本兼容、多媒体相关及其他。  \n\n### 一、依赖注入 DI\n通过依赖注入减少 View、服务、资源简化初始化，事件绑定等重复繁琐工作  \n\n1. AndroidAnnotations(Code Diet)  \nandroid 快速开发框架  \n项目地址：https://github.com/excilys/androidannotations  \n文档介绍：https://github.com/excilys/androidannotations/wiki  \n官网网址：http://androidannotations.org/  \n特点：(1) 依赖注入：包括 view，extras，系统服务，资源等等  \n(2) 简单的线程模型，通过 annotation 表示方法运行在 ui 线程还是后台线程  \n(3) 事件绑定：通过 annotation 表示 view 的响应事件，不用在写内部类  \n(4) REST 客户端：定义客户端接口，自动生成 REST 请求的实现  \n(5) 没有你想象的复杂：AndroidAnnotations 只是在在编译时生成相应子类  \n(6) 不影响应用性能：仅 50kb，在编译时完成，不会对运行时有性能影响。  \n其他：与 roboguice 的比较：roboguice 通过运行时读取 annotations 进行反射，所以可能影响应用性能，而 AndroidAnnotations 在编译时生成子类，所以对性能没有影响  \n\n1. roboguice  \n帮你处理了很多代码异常，利用 annotation 使得更少的代码完成项目  \n项目地址：https://github.com/roboguice/roboguice  \n文档介绍：https://github.com/roboguice/roboguice/wiki  \n\n1. butterknife  \n利用 annotation 帮你快速完成 View 的初始化，减少代码  \n项目地址：https://github.com/JakeWharton/butterknife  \n文档介绍：http://jakewharton.github.io/butterknife/  \n\n1. Dagger  \n依赖注入，适用于 Android 和 Java  \n项目地址：https://github.com/square/dagger  \n原理剖析文档：[Dagger](http://a.codekk.com/detail/Android/扔物线/Dagger 源码解析)  \n文档介绍：http://square.github.io/dagger/  \n\n1. AutoParcel  \n注解自动生成Parcelable实现代码的库     \n项目地址：https://github.com/frankiesardo/auto-parcel    \n这篇文章详细介绍了它的使用方法：[AutoParcel](https://passy.svbtle.com/simpler-android-apis-with-autoparcel)     \n作者认为使用AutoParcel的好处是，可以简化构造函数，方便IDE代码自动完成，方便测试，前向兼容，生成不可变的对象。      \n文档介绍：https://github.com/frankiesardo/auto-parcel\n\n\n\n### 二、图片缓存\n1. Android-Universal-Image-Loader  \n图片缓存，目前使用最广泛的图片缓存，支持主流图片缓存的绝大多数特性。  \n项目地址：https://github.com/nostra13/Android-Universal-Image-Loader  \n原理剖析文档：[Android-Universal-Image-Loader](http://a.codekk.com/detail/Android/huxian99/Android Universal Image Loader 源码分析)  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/universal-imageloader-demo.apk?raw=true  \n文档介绍：http://www.intexsoft.com/blog/item/74-universal-image-loader-part-3.html  \n\n1. picasso  \nsquare 开源的图片缓存  \n项目地址：https://github.com/square/picasso  \n文档介绍：http://square.github.io/picasso/  \n特点：(1)可以自动检测 adapter 的重用并取消之前的下载  \n(2)图片变换  \n(3)可以加载本地资源  \n(4)可以设置占位资源  \n(5)支持 debug 模式  \n\n1. Cube ImageLoader  \n阿里巴巴一淘使用的图片加载，综合了 Android-Universal-Image-Loader 和 square 等组件优点，简单易用，良好的中文文档支持  \n项目地址：https://github.com/etao-open-source/cube-sdk  \nDemo 地址：https://github.com/liaohuqiu/cube-sdk/raw/master/cube-sdk-sample.apk  \n文档介绍：http://cube-sdk.liaohuqiu.net/  \n\n1. fresco  \n一款强大的图片缓存工具，由 Facebook 开发  \n项目地址：https://github.com/facebook/fresco  \n文档介绍：http://frescolib.org/  \n特点：(1) 两个内存缓存加上磁盘缓存构成了三级缓存  \n(2) 支持流式，可以类似网页上模糊渐进式显示图片  \n(3) 对多帧动画图片支持更好，如 Gif、WebP  \n(4) 更多样的显示，如圆角、进度条、点击重试、自定义对焦点  \n(5) 更多样的加载，如支持 EXIF、全面支持 WebP  \n(6) 支持 Android 2.3+  \n\n1. Glide  \nGlide 是一个 android 平台上的快速和高效的开源的多媒体资源管理库,提供 多媒体文件的压缩,内存和磁盘缓存, 资源池的接口。  \n它可以最大性能地在 Android 设备上读取、解码、显示图片和视频。Glide 可以将远程的图片、视频、动画图片等缓存在设备本地便于提高用户浏览图片的流畅体验。  \n项目地址：https://github.com/bumptech/glide  \n特点：  \n(1) GIF 动画的解码  \n(2) 本地视频剧照的解码  \n(3) 支持缩略图  \n(4) Activity 生命周期的集成  \n(5) 转码的支持  \n(6) 动画的支持  \n(7) OkHttp 和 Volley 的支持  \n\n### 三、网络请求\n1. Volley  \nGoogle 提供的网络通信库，使得网络请求更简单、更快速  \n项目地址：https://android.googlesource.com/platform/frameworks/volley  \n文档介绍：http://commondatastorage.googleapis.com/io-2013/presentations/110%20-%20Volley-%20Easy,%20Fast%20Networking%20for%20Android.pdf  \n\n1. Asynchronous Http Client for Android  \nAndroid 异步 Http 请求  \n项目地址：https://github.com/loopj/android-async-http  \n文档介绍：http://loopj.com/android-async-http/  \n特点：(1) 在匿名回调中处理请求结果  \n(2) 在 UI 线程外进行 http 请求  \n(3) 文件断点上传  \n(4) 智能重试  \n(5) 默认 gzip 压缩  \n(6) 支持解析成 Json 格式  \n(7) 可将 Cookies 持久化到 SharedPreferences  \n\n1. android-query  \n异步加载，更少代码完成 Android 加载  \n项目地址：https://github.com/androidquery/androidquery 或 https://code.google.com/p/android-query/  \nDemo 地址：https://play.google.com/store/apps/details?id=com.androidquery  \n文档介绍：https://code.google.com/p/android-query/#Why_AQuery?  \n特点：https://code.google.com/p/android-query/#Why_AQuery?  \n\n1. Async Http Client  \nJava 异步 Http 请求  \n项目地址：https://github.com/AsyncHttpClient/async-http-client  \n文档介绍：http://sonatype.github.io/async-http-client/  \n\n1. Ion  \n支持图片、json、http post 等异步请求  \n项目地址：https://github.com/koush/ion  \n文档介绍：https://github.com/koush/ion#more-examples  \n\n1. Http Request  \n项目地址：https://github.com/kevinsawicki/http-request  \n文档介绍：https://github.com/kevinsawicki/http-request#examples  \n\n1. okhttp  \nsquare 开源的 http 工具类  \n项目地址：https://github.com/square/okhttp  \n文档介绍：http://square.github.io/okhttp/  \n特点：(1) 支持 SPDY( http://zh.wikipedia.org/wiki/SPDY )协议。SPDY 协议是 Google 开发的基于传输控制协议的应用层协议，通过压缩，多路复用(一个 TCP 链接传送网页和图片等资源)和优先级来缩短加载时间。  \n(2) 如果 SPDY 不可用，利用连接池减少请求延迟  \n(3) Gzip 压缩  \n(4) Response 缓存减少不必要的请求  \n\n1. Retrofit  \nRESTFUL API 设计  \n项目地址：https://github.com/square/retrofit  \n文档介绍：http://square.github.io/retrofit/  \n\n1. RoboSpice  \nAndroid 异步网络请求工具，支持缓存、REST 等等  \n项目地址：https://github.com/stephanenicolas/robospice  \nDemo 地址：https://github.com/stephanenicolas/RoboDemo/downloads  \n\n1. TwistVolley  \nTwistVolley 是对 Volley 的一个封装库。提供类似 Picasso 一样的串联式 API。使得使用 Volley 更加方便。  \n项目地址：https://github.com/TwistedEquations/TwistVolley  \n\n### 四、数据库 orm 工具包\norm 的 db 工具类，简化建表、查询、更新、插入、事务、索引的操作 \n\n1. greenDAO  \nAndroid Sqlite orm 的 db 工具类  \n项目地址：https://github.com/greenrobot/greenDAO  \n文档介绍：http://greendao-orm.com/documentation/  \n官网网址：http://greendao-orm.com/  \n特点：(1) 性能佳  \n(2) 简单易用的 API  \n(3) 内存小好小  \n(4) 库大小小  \n\n1. GreenDaoUpgradeHelper  \ngreenDAO的数据库升级帮助类，只需一行代码解决数据库升级  \n项目地址：https://github.com/yuweiguocn/GreenDaoUpgradeHelper\n\n1. ActiveAndroid  \nAndroid Sqlite orm 的 db 工具类  \n项目地址：https://github.com/pardom/ActiveAndroid  \n文档介绍：https://github.com/pardom/ActiveAndroid/wiki/_pages  \n\n1. Sprinkles  \nAndroid Sqlite orm 的 db 工具类，比较显著的特点就是配合 https://github.com/square/retrofit 能保存从服务器获取的数据  \n项目地址：https://github.com/emilsjolander/sprinkles  \n文档介绍：http://emilsjolander.github.io/blog/2013/12/18/android-with-sprinkles/  \n\n1. Realm  \n移动端的数据库，适用于 Phone、Tablet、Wearable，支持 ORM，线程安全、支持连表及数据库加密，比 SQLite 性能更好  \n项目地址：https://github.com/realm/realm-java  \n文档介绍：http://realm.io/docs/java/0.72.0/  \n\n1. ormlite-android  \n项目地址：https://github.com/j256/ormlite-android  \n文档介绍：http://ormlite.com/sqlite_java_android_orm.shtml  \n\n1. Schematic  \n根据 SQLite 生成 ContentProvider  \n项目地址：https://github.com/SimonVT/schematic  \n\n1. DBFlow  \nAndroid SQLite ORM 工具库。综合了 Active Android, Schematic, Ollie,Sprinkles 等库的优点；通过注解实现，性能好；能生成 ContentProvider。  \n项目地址：https://github.com/Raizlabs/DBFlow  \n文档介绍：https://github.com/Raizlabs/DBFlow#usage-docs  \n\n1. SnappyDB\nSnappyDB是一个key-value数据库，非常流行的NoSQL数据库。\n项目地址：https://github.com/nhachicha/SnappyDB\n演示Demo：https://play.google.com/store/apps/details?id=com.snappydb.snippets.app\n\n### 五、Android 公共库\n1. Guava  \nGoogle 的基于 java1.6 的类库集合的扩展项目，包括 collections, caching, primitives support, concurrency libraries, common annotations, string processing, I/O 等等. 这些高质量的 API 可以使你的 JAVa 代码更加优雅，更加简洁  \n项目地址：https://code.google.com/p/guava-libraries/  \n文档介绍：https://code.google.com/p/guava-libraries/wiki/GuavaExplained  \n\n1. AndroidCommon  \nAndroid 公共库  \n项目地址：https://github.com/Trinea/AndroidCommon  \nDemo 地址：https://play.google.com/store/apps/details?id=cn.trinea.android.demo  \n文档介绍：http://www.trinea.cn/android/android-common-lib/  \n包括：a. ImageCache 图片缓存，包含内存和 Sdcard 缓存  \nhttp://www.trinea.cn/android/android-imagecache/  \n特点：(1)支持预取新图片，支持等待队列  \n(2)包含二级缓存，可自定义文件名保存规则  \n(3)可选择多种缓存算法(FIFO、LIFO、LRU、MRU、LFU、MFU 等 13 种)或自定义缓存算法  \n(4)可方便的保存及初始化恢复数据  \n(5)支持不同类型网络处理  \n(6)可根据系统配置初始化缓存等  \n\n1. HttpCache Http 缓存  \n文档介绍：http://www.trinea.cn/android/android-http-cache  \n特点是：(1) 根据 cache-control、expires 缓存 http 请求  \n(2) 支持同步、异步 Http 请求  \n(3) 在匿名回调中处理请求结果  \n(4) 在 UI 线程外进行 http 请求  \n(5) 默认 gzip 压缩  \n(2) 公共 View(下拉及底部加载更多 ListView、底部加载更多 ScrollView、滑动一页 Gallery)  \n(3) Android 常用工具类(网络、下载、Android 资源操作、shell、文件、Json、随机数、Collection 等等)  \n\n1. DropDownListView 下拉刷新及滑动到底部加载更多 ListView  \n文档介绍：http://www.trinea.cn/android/dropdown-to-refresh-and-bottom-load-more-listview/  \n\n1. shipfaster  \n整合了 Dagger Otto Retrofit Robolectric Picasso OkHttp，方便快速开发  \n项目地址：https://github.com/pyricau/shipfaster  \n\n1. CleanAndroidCode  \n整合了 Dagger Otto AndroidAnnotations，方便快速开发  \n项目地址：https://github.com/pyricau/CleanAndroidCode  \n\n1. xUtils  \n基于 Afinal，包含 DbUtils、ViewUtils、HttpUtils、BitmapUtils 四大模块，可用于快速开发  \n项目地址：https://github.com/wyouflf/xUtils  \n原理剖析文档：[xUtils](http://a.codekk.com/detail/Android/Caij/xUtils 源码解析)  \n\n1. Afinal  \nAfinal 是一个 android 的 ioc，orm 框架，内置了四大模块功能：FinalAcitivity,FinalBitmap,FinalDb,FinalHttp。通过 finalActivity，我们可以通过注解的方式进行绑定 ui 和事件。通过 finalBitmap，我们可以方便的加载 bitmap 图片，而无需考虑 oom 等问题。通过 finalDB 模块，我们一行代码就可以对 android 的 sqlite 数据库进行增删改查。通过 FinalHttp 模块，我们可以以 ajax 形式请求 http 数据  \n项目地址：https://github.com/yangfuhai/afinal  \n官网网址：http://www.afinal.org  \n\n1. UltimateAndroid  \nUltimateAndroid 是一个快速开发 Android 应用的框架，框架目前主要包含的功能有 View Injection,ORM,异步网络请求和图片加载，自动化脚本测试,磁盘 LRU 等功能.同时提供了类似于 TripleDes、Webview 快速设置、Md5 处理、String 处理,Https 处理等常用工具类，还有超过 100 多种 UI 控件效果。  \n项目地址：https://github.com/cymcsg/UltimateAndroid  \n官网网址：http://blog.marshalchen.com/UltimateAndroid/  \n\n1. SAF  \nSAF(Simple Android Framework)是一个简单的 android 框架，它为开发 Android app 提供了基础性组件。  \n项目地址：https://github.com/fengzhizi715/SAF  \n官网网址：http://www.salesuite.cn/  \n包括：(1)Event Bus(事件总线)  \n(2) Rest Client(http 的框架)  \n(3) Image Cache(图片缓存)  \n(4) Dependency Injection(依赖注入)  \n(5) Sqlite ORM(sqlite 的 orm)  \n(6) Router(Activity、Fragment 的 Router)  \n(7) Utils(各种常用的工具类)  \n\n1. Barber  \nCustom View 神器。通过简单的注解帮助你大大减少 Custom View 中的代码量。由于和 ButterKnife 一样使用了 Annotation Proccessor ，所以对程序性能没有影响。  \n项目地址：https://github.com/hzsweers/barber  \n\n1. device-year-class  \nA library that analyzes an Android device's specifications and calculates which year the device would be considered \"high end”.(facebook 开发的检测手机主流配置工具)  \n项目地址：https://github.com/facebook/device-year-class  \n\n1. RxAndroid   \n对RxJava在Android上的扩展，使得Android上也很容易实现reactive components，简化线程操作，从而写出很漂亮的代码。   \n项目地址：https://github.com/ReactiveX/RxAndroid   \n文档介绍：[给Android 开发者的 RxJava 详解](http://gank.io/post/560e15be2dca930e00da1083)  \n\n1. MultiImageSelector   \n一个本地图片选择器，支持图片的单选和多选，直接返回所选图片的路径。   \n项目地址：https://github.com/lovetuzitong/MultiImageSelector.git \n\n### 六、Android 高版本向低版本兼容\n1. Nine Old Androids  \n将 Android 3.0(Honeycomb)所有动画 API(ObjectAnimator ValueAnimator 等)兼容到 Android1.0  \n项目地址：https://github.com/JakeWharton/NineOldAndroids  \n原理剖析文档：[Nine Old Androids](http://a.codekk.com/detail/Android/Mr.Simple/NineOldAnimations 源码解析)  \nDemo 地址：https://play.google.com/store/apps/details?id=com.jakewharton.nineoldandroids.sample  \n文档介绍：http://nineoldandroids.com/  \n\n1. HoloEverywhere  \n将 Android 3.0 的 Holo 主题兼容到 Android2.1++  \n项目地址：https://github.com/Prototik/HoloEverywhere  \nDemo 地址：https://raw.github.com/Prototik/HoloEverywhere/repo/org/holoeverywhere/demo/2.1.0/demo-2.1.0.apk  \n文档介绍：http://android-developers.blogspot.com/2012/01/holo-everywhere.html  \n\n1. SherlockNavigationDrawer  \n将 Android NavigationDrawer 和 ActionbarSherlock 结合，解决 4.0 以下 NavigationDrawer 的适配问题  \n项目地址：https://github.com/tobykurien/SherlockNavigationDrawer  \n文档介绍：http://developer.android.com/training/implementing-navigation/nav-drawer.html  \n\n1. Notifications4EveryWhere  \n将 Android 4.1 的 Notification 兼容到 Android2.2++  \n项目地址：https://github.com/youxiachai/Notifications4EveryWhere  \n\n1. Android Switch Widget Backport  \n将 Android Switch 和 SwitchPreference 的兼容到 Android2.1++  \n项目地址：https://github.com/BoD/android-switch-backport  \nDemo 地址：https://play.google.com/store/apps/details?id=org.jraf.android.backport.switchwidget.sample  \n文档介绍：https://github.com/BoD/android-switch-backport#using-the-switch  \n\n1. android-datepicker  \n将 Android 4.0 的 datepicker 兼容到 Android2.2++  \n项目地址：https://github.com/SimonVT/android-datepicker  \n\n1. Transitions Everywhere  \nAndroid 4.4 的 Transitions API 兼容到 Android 2.2 以上  \n项目地址：https://github.com/andkulikov/transitions-everywhere  \n\n1. KShareViewActivityManager  \n一个兼容Android 5.0 以下Shared Element Transition （页面间共享元素位移动画）库  \n项目地址：https://github.com/kot32go/KShareViewActivityManager  \n\n### 七、多媒体相关\n1. cocos2d-x  \n跨平台的 2d 游戏框架，支持 Android、IOS、Linux、Windows 等众多平台  \n项目地址：https://github.com/cocos2d/cocos2d-x  \n文档介绍：http://www.cocos2d-x.org/wiki  \n官网网址：http://www.cocos2d-x.org/  \n\n1. JustWeEngine  \nAndroid的轻量级游戏框架，能大大缩减编写原生游戏的代码量和难度，仍在持续更新中。  \n项目地址: https://github.com/lfkdsk/JustWeEngine  \nDemo地址: https://github.com/lfkdsk/EngineDemo  \n\n1. Vitamio  \n是一款 Android 与 iOS 平台上的全能多媒体开发框架  \n项目地址：https://github.com/yixia/VitamioBundle  \n网站介绍：http://www.vitamio.org/docs/  \n特点：(1) 全面支持硬件解码与 GPU 渲染  \n(2) 能够流畅播放 720P 甚至 1080P 高清 MKV，FLV，MP4，MOV，TS，RMVB 等常见格式的视频  \n(3) 在 Android 与 iOS 上跨平台支持 MMS, RTSP, RTMP, HLS(m3u8)等常见的多种视频流媒体协议，包括点播与直播。 \n\n1. VDPlayerSDK  \n最容易集成的开源播放器组件，支持直播，支持软硬解切换，支持清晰度切换  \n项目地址：https://github.com/SinaVDDeveloper/  \nDemo 地址：https://github.com/SinaVDDeveloper/demo  \n文档介绍：https://github.com/SinaVDDeveloper/sinavideo_playersdk  \n特点：  \n(1) 使用自定义控件方式提供播放器UI，不需要视频相关知识，能编写android应用就能使用  \n(2) 软硬解切换、点播直播支持  \n(3) 解码内核小于4M，更方便集成到非专业视频app中  \n(4) 修正一些vitaimio的问题，比如m3u8可以拖动等等\n\n1. VideoPlayerManager  \n帮助实现VideoPlayer控制，使得它更容易使用ListView和recyclerview。它还可以跟踪滚动列表中可见的项。当列表中的新项可见域最大时，该库给出了接口来跟踪它。  \n项目地址：https://github.com/danylovolokh/VideoPlayerManager  \n文档介绍：https://medium.com/@v.danylo/implementing-video-playback-in-a-scrolled-list-listview-recyclerview-d04bc2148429#.hs5n0geqn  \n\n1. UniversalVideoView  \nAndroid上定义播放器控件,支持自定义控制UI, 全屏播放, 重力感应自动切换横竖屏.  \n项目地址：https://github.com/linsea/UniversalVideoView  \n\n1. PhotoProcessing  \n利用 ndk 处理图片库，支持 Instafix、Ansel、Testino、XPro、Retro、BW、Sepia、Cyano、Georgia、Sahara、HDR、Rotate(旋转)、Flip(翻转)等各种特效  \n项目地址：https://github.com/lightbox/PhotoProcessing  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/photo-processing.apk?raw=true  \n\n1. Android StackBlur  \n图片模糊效果工具类  \n项目地址：https://github.com/kikoso/android-stackblur  \nDemo 地址：https://github.com/kikoso/android-stackblur/blob/master/StackBlurDemo/bin/StackBlurDemo.apk?raw=true  \n文档介绍：https://github.com/kikoso/android-stackblur#usage  \n\n1. Bitmap Smart Clipping using OpenCV  \n图片智能裁剪保留重要部分显示  \n项目地址：https://github.com/beartung/tclip-android  \n利用淘宝的 http://code.taobao.org/p/tclip/ 库完成  \n一淘玩客正在使用的图片裁剪，自动识别图片中的重要区域，并且在图片裁剪时保留重要区域  \n特点：(1). 能进行人脸识别。图片中有人脸，将自动视为人脸区域为重要区域，将不会被裁剪掉  \n(2).自动其它重要区域。如果图片中未识别出人脸，则会根据特征分布计算出重区域  \n\n1. Cropper  \n图片局部剪切工具，可触摸控制选择区域或旋转  \n项目地址：https://github.com/edmodo/cropper  \n文档介绍：https://github.com/edmodo/cropper/wiki  \n\n1. uCrop  \nYalantis 出品的强大的图片裁剪库 ，支持缩放，旋转图片，支持各种比例的裁剪框  \n项目地址：https://github.com/Yalantis/uCrop  \n\n1. android-crop  \n图片裁剪 Activity\n项目地址：https://github.com/jdamcd/android-crop  \n\n1. TileView  \n可分块显示大图，支持 2D 拖动、双击、双指放大、双指捏合  \n项目地址：https://github.com/moagrius/TileView  \nDemo 地址：http://moagrius.github.io/TileView/TileViewDemo.apk  \n\n1. BlurEffectForAndroidDesign  \n图片模糊效果  \n项目地址：https://github.com/PomepuyN/BlurEffectForAndroidDesign  \n\n1. android-eye  \nPC 端网页查看同一局域网内的手机摄像头内容，可以用来监控哦  \n项目地址：https://github.com/Teaonly/android-eye  \nDemo 地址：https://play.google.com/store/apps/details?id=teaonly.droideye  \n\n1. libpng for Android  \nPNG 图片的 jni 库，支持几乎 png 的所有特性  \n项目地址：https://github.com/julienr/libpng-android  \n文档介绍：http://www.libpng.org/pub/png/libpng.html  \n\n1. android-gpuimage  \n基于 GPU 的图片滤镜  \n项目地址：https://github.com/CyberAgent/android-gpuimage  \n\n1. AndroidFaceCropper  \n图片脸部自动识别，将识别后的局部图片返回  \n项目地址：https://github.com/lafosca/AndroidFaceCropper  \n\n1. Android Video Crop  \n利用 TextureView 播放和剪切视频，类似 ImageView.setScaleType  \n项目地址：https://github.com/dmytrodanylyk/android-video-crop  \nDemo 地址：https://github.com/lafosca/AndroidFaceCropper/releases/download/1.0/FaceCropper-sample-debug-unaligned.apk  \n\n1. svg-android  \nAndroid Svg 矢量图形支持  \n项目地址：https://github.com/japgolly/svg-android https://github.com/japgolly/svg-android  \n\n1. Android Visualizer  \n从 Android MediaPlayer 获得音频，然后像 iTunes 及 WinAmp 一样展示音轨  \n项目地址：https://github.com/felixpalmer/android-visualizer  \n\n1. ExoPlayer  \n包括仪表板和 SmoothStreaming 自适应回放，缓存持久化和自定义渲染器，方便自定义和扩展，并且可以通过应用商店更新  \n项目地址：https://github.com/google/ExoPlayer  \n\n1. DanmakuFlameMaster  \nandroid 上开源弹幕解析绘制引擎项目  \n项目地址：https://github.com/ctiao/DanmakuFlameMaster  \n\n1. OpenDanmaku  \nandroid 上一个轻量级的更简单的开源弹幕控件  \n项目地址：https://github.com/linsea/OpenDanmaku  \n\n### 八、事件总线(订阅者模式)\n通过发布/订阅事件解耦事件发送和接受，从而简化应用程序组件(Activities, Fragments 及后台线程)之间的通信  \n\n1. EventBus  \ngreenrobot 的开源项目  \n项目地址：https://github.com/greenrobot/EventBus  \n原理剖析文档：[EventBus](http://a.codekk.com/detail/Android/Trinea/EventBus 源码解析)  \n文档介绍：https://github.com/greenrobot/EventBus#general-usage-and-api  \n特点：(1) 支持在不同类型的线程中处理订阅，包括发布所在线程，UI 线程、单一后台线程、异步线程  \n(2) 支持事件优先级定义，支持优先级高的订阅者取消事件继续传递，支持粘性事件，是不是跟系统的有序广播、粘性广播很像啊  \n(3) 不是基于 annotations  \n(4) 性能更优  \n(5) 体积小  \n(6) 支持单例创建或创建多个对象  \n(7) 支持根据事件类型订阅  \n\n1. Otto  \nSquare 的开源项目，基于 Guava 的 Android 优化  \n项目地址：https://github.com/square/otto  \n文档介绍：http://square.github.io/otto/  \n[EventBus 与 Otto 的功能及性能对比文档](https://github.com/greenrobot/EventBus#comparison-with-squares-otto)  \n[EventBus 与 Otto 性能对比 Demo Apk](https://play.google.com/store/apps/details?id=de.greenrobot.eventperf)  \n\n### 九、传感器\n1. Great Android Sensing Toolkit  \nAndroid 感应器工具包，包含示例及使用过程中可能需要的算法  \n项目地址：https://github.com/gast-lib/gast-lib  \nDemo 地址：https://play.google.com/store/apps/details?id=root.gast.playground  \n文档介绍：https://github.com/gast-lib/gast-lib#documentation  \n\n1. SensorManager  \nAndroid 传感器管理  \n项目地址：https://github.com/nlathia/SensorManager  \n文档介绍：https://docs.google.com/document/d/1TqThJULb-4e6TGb1gdkAaPCfyuXStjJpbnt7a0OZ9OE/edit  \n\n1. GPSLogger  \n记录 GPS 信息  \n项目地址：https://github.com/mendhak/gpslogger  \nDemo 地址：https://play.google.com/store/apps/details?id=com.mendhak.gpslogger  \n文档介绍：http://code.mendhak.com/gpslogger/  \n\n1. Pedometer  \n计步器，使用硬件计步感应器  \n项目地址：https://github.com/j4velin/Pedometer  \n\n1. leapcast  \nChromeCast 模拟器的 App  \n项目地址：https://github.com/dz0ny/leapcast  \n\n1. Arduino-Communicator  \n与 Arduino 通信的 App  \n项目地址：https://github.com/jeppsson/Arduino-Communicator  \n\n1. android-pedometer  \nAndroid 计步器  \n项目地址：https://github.com/bagilevi/android-pedometer  \nDemo 地址：http://pedometer.googlecode.com/files/Pedometer-1.4.apk  \n\n1. OwnTracks for Android  \n自己的轨迹记录  \n项目地址：https://github.com/owntracks/android  \n\n1. Shake Detector library for Android  \nAndroid 手机震动摇晃检测库，提供供 UI 线程调用的回调接口  \n项目地址：https://github.com/tbouron/ShakeDetector  \nDemo 地址：https://play.google.com/store/apps/details?id=com.github.tbouron.shakedetector.example  \n\n1. Android heart rate monitor  \nAndroid 心跳检测  \n项目地址：https://github.com/phishman3579/android-heart-rate-monitor  \n\n1. Bluetooth LE Library for Android  \n蓝牙源信息，包括宝库 Mac、更新时间、RSSI、UUID、信号源距离、影响范围等信息  \n项目地址：https://github.com/alt236/Bluetooth-LE-Library---Android  \nDemo 地址：https://play.google.com/store/apps/details?id=uk.co.alt236.btlescan  \n\n1. farebot  \n通过 NFC 从公交卡中读取数据的一个应用  \n项目地址：https://github.com/codebutler/farebot  \n\n### 十、安全\n1. SQLCipher  \nSqlite 加密工具  \n项目地址：https://github.com/sqlcipher/sqlcipher  \n文档介绍：http://sqlcipher.net/sqlcipher-for-android/  \n\n1. Conceal  \n快速高效的进行文件加密解密  \n项目地址：https://github.com/facebook/conceal  \n文档介绍：https://github.com/facebook/conceal#usage  \n\n1. Android-PasscodeLock  \n应用锁，每次启动或从任何 Activity 启动应用都需要输入四位数字的密码方可进入  \n项目地址：https://github.com/wordpress-mobile/Android-PasscodeLock  \nDemo 地址：https://play.google.com/store/apps/details?id=org.wordpress.android  \nAPP 示例：Wordpress Android，支付宝，挖财  \n\n1. GlowPadBackport  \n将 Android4.2 的锁屏界面解锁扩展到 Android1.6 及 1.6+  \n项目地址：https://github.com/rock3r/GlowPadBackport  \nDemo 地址：https://play.google.com/store/apps/details?id=net.sebastianopoggi.samples.ui.GlowPadSample  \n\n1. GlowPadView  \nAndroid 4 锁屏界面解锁  \n项目地址：https://github.com/nadavfima/GlowPadView  \n\n1. Android-InsecureBank  \n关于 Android 不安全性的示例  \n项目地址：https://github.com/dineshshetty/Android-InsecureBankv2  \n\n### 十一、插件化\n更多见：[Android 插件化作用、概念以及不错的资料(包括开源项目)和解决方案](http://www.trinea.cn/android/android-plugin/)  \n\n1. dynamic-load-apk  \nAndroid 动态加载 Apk，热部署，利用 ClassLoader 以及 Activity 代理的方式解决  \n项目地址：https://github.com/singwhatiwanna/dynamic-load-apk  \n原理剖析文档：[dynamic-load-apk](http://a.codekk.com/detail/Android/FFish/DynamicLoadApk 源码解析)  \n文档介绍：http://blog.csdn.net/singwhatiwanna/article/details/22597587  \n\n1. Android Dynamic Loader  \n点评的实现方式，和上面不同的是：他不是用代理 Activity 的方式实现而是用 Fragment 以及 Schema 的方式实现  \n项目地址：https://github.com/mmin18/AndroidDynamicLoader  \nDemo 地址：https://github.com/mmin18/AndroidDynamicLoader/raw/master/host.apk  \n\n1. xCombine  \nAndroid App 插件式插件开发，插件必须先安装，更推荐看上面两个开源项目  \n项目地址：https://github.com/wyouflf/xCombine  \n文档介绍：http://my.oschina.net/u/1171837/blog/155377  \n\n1. Android Plugin Framework  \nAndroid 插件式开发，开放的源码目前不完整  \n项目地址：https://github.com/umeng/apf  \n\n1. Android OpenAtlas  \nAndroid插件框架，基于OSGI，非代理方式，组件需要在宿主中声明  \n项目地址：https://github.com/bunnyblue/OpenAtlas  \nDemo 地址：https://github.com/bunnyblue/OpenAtlasExtension/blob/master/Dist/OpenAtlasLauncher.apk \n\n1. multidex  \n安装多 dex 的 classloader  \n项目地址：https://github.com/casidiablo/multidex  \n\n1. ANR-WatchDog  \nAndroid ANR 监听，通过监听自己的 UI Thread 是否被执行确定是否发生了 ANR，并可以设置相关事件  \n项目地址：https://github.com/SalomonBrys/ANR-WatchDog  \n\n### 十二、文件\n对不同文档类型的处理，包括 PDF、Word、EPub、Html、Zip 等  \n\n1. purePDF  \n允许从任何运行的 SWF 文件读取和创建 PDF 文档  \n项目地址：https://github.com/sephiroth74/purePDF  \n\n1. android-pdfview  \n快速解析 pdf 的 view，默认支持手势缩放和相关动画  \n项目地址：https://github.com/JoanZapata/android-pdfview  \n\n1. Office 365 SDK for Android Preview  \n可支持 Microsoft SharePoint Lists, Microsoft SharePoint Files, Microsoft Exchange Calendar, Microsoft Exchange Contacts, Microsoft Exchange Mail  \n项目地址：https://github.com/OfficeDev/Office-365-SDK-for-Android  \n\n1. OpenSpritz-Android  \nEPub 阅读器  \n项目地址：https://github.com/OnlyInAmerica/OpenSpritz-Android  \n\n1. jsoup  \n一个解析 html 的 java 库，可方便的提取和操作数据  \n项目地址：https://github.com/jhy/jsoup  \n官网网址：http://jsoup.org/  \n作用：(1) 从一个 url、文件或 string 获得 html 并解析  \n(2) 利用 dom 遍历或 css 选择器查找、提取数据  \n(3) 操作 html 元素  \n(4) 根据白名单去除用于提交的非法数据防止 xss 攻击  \n(5) 输出整齐的 html  \n\n1. ZIP  \njava 压缩和解压库  \n项目地址：https://github.com/zeroturnaround/zt-zip  \n文档介绍：https://github.com/zeroturnaround/zt-zip#examples  \n作用：(1) 解压和压缩，并支持文件夹内递归操作  \n(2) 支持包含和排除某些元素  \n(3) 支持重命名元素  \n(4) 支持遍历 zip 包内容  \n(5) 比较两个 zip 包等功能  \n\n1. Image File Selector  \n轻量级的图片文件选择器，用系统api选取，压缩和裁切图片，可以方便的得要指定尺寸的图片  \n项目地址：https://github.com/sw926/ImageFileSelector  \n\t\n### 十三、其他\n\n1. FragmentStack  \n一个封装了启动模式的Fragment便捷使用库,方便构建单Activity+多Fragment轻量级框架  \n项目地址：https://github.com/Mr-wangyong/FragmentStack  \nApp示例：[南瓜电影](http://www.wandoujia.com/apps/cn.vcinema.cinema)  \n\n1. CustomTabsHelper\n快速集成 CustomTabs 的工具类  \n项目地址：https://github.com/DreaminginCodeZH/CustomTabsHelper  \n\n1. Salvage view  \n带 View 缓存的 Viewpager PagerAdapter，很方便使用  \n项目地址：https://github.com/JakeWharton/salvage  \n\n1. Android Priority Job Queue  \nAndroid 后台任务队列  \n项目地址：https://github.com/path/android-priority-jobqueue  \n文档介绍：https://github.com/path/android-priority-jobqueue#getting-started  \n\n1. Cobub Razor  \n开源的 mobile 行为分析系统，包括 web 端、android 端，支持 ios 和 window phone  \n项目地址：https://github.com/cobub/razor  \nDemo 地址：http://demo.cobub.com/razor  \n官网网址：http://dev.cobub.com/  \n\n1. Countly  \nAndroid 移动端数据采集分析系统  \n项目地址：https://github.com/Countly/countly-sdk-android  \n官网网址：https://count.ly/  \n\n1. aFileChooser  \n文件选择器，可内嵌到程序中，而无需使用系统或三方文件选择器。  \n项目地址：https://github.com/iPaulPro/aFileChooser  \n\n1. androidpn  \n基于 xmpp 协议的消息推送解决方案，包括服务器端和 android 端。  \n项目地址：https://github.com/dannytiehui/androidpn  \n\n1. Bolts  \nAndroid 的异步编程模式  \n项目地址：https://github.com/BoltsFramework/Bolts-Android/  \n与 AsyncTask 比较：(1) 使用的是无大小限制的线程池  \n(2) 任务可组合可级联，防止了代码耦合  \n\n1. CastCompanionLibrary-android  \n使 Android 程序中更快的接入 Google Cast  \n项目地址：https://github.com/googlecast/CastCompanionLibrary-android  \n文档介绍：https://developers.google.com/cast/  \n\n1. CastVideos-android  \n从 Android 设备分享 Video 通过 Google Cast  \n项目地址：https://github.com/googlecast/CastVideos-android  \n文档介绍：https://developers.google.com/cast/  \n\n1. Uninstall_Statics  \nAndroid 应用自身被卸载监听及打开浏览器等反馈功能实现  \n项目地址：https://github.com/sevenler/Uninstall_Statics  \n文档介绍：http://www.cnblogs.com/zealotrouge/p/3157126.html  http://www.cnblogs.com/zealotrouge/p/3159772.html  \n1. Memento  \n保证在系统配置改变时，Activity 中的某些数据可以简单安全的保持不变  \n项目地址：https://github.com/mttkay/memento  \n文档介绍：https://github.com/mttkay/memento#usage  \n\n1. FreeFlow  \n布局引擎，更简单的创建自定义布局，并且当数据和布局改变时更美观的过渡动画  \n项目地址：https://github.com/Comcast/FreeFlow  \nDemo 地址：https://github.com/Comcast/FreeFlow/releases  \n\n1. Android Gesture Detectors Framework  \nAndroid 手势框架，支持双指旋转、移动、平移、缩放等  \n项目地址：https://github.com/Almeros/android-gesture-detectors  \n\n1. Mapbox Android SDK  \nAndroid Map 的替代版  \n项目地址：https://github.com/mapbox/mapbox-android-sdk  \n\n1. Activity animation  \nActivity 跳转动画，支持各个方向波浪的效果  \n项目地址：https://github.com/flavienlaurent/activityanimation  \n在线演示：https://www.youtube.com/watch?v=-E0sc6w_Jck  \n\n1. KryoNet  \n通过 NIO 提供客户端和服务器端 TCP/UDP 网络传输的 Java 库  \n项目地址：https://github.com/EsotericSoftware/kryonet  \n\n1. Rebound  \n一个模仿弹簧反弹的 Java 库，可用于创建动画  \n项目地址：https://github.com/facebook/rebound  \n\n1. Android Social Networks  \n社交网络接入统一管理器，可方便的从 Twitter, LinkedIn, Facebook, Google Plus 登陆、获得个人信息、发送消息、发送专篇、添加或删除好友  \n项目地址：https://github.com/antonkrasov/AndroidSocialNetworks  \nDemo 地址：https://play.google.com/store/apps/details?id=com.github.androidsocialnetworks.apidemos  \n\n1. SmartAppUpdates  \nAndroid App 增量升级，包含前后端方案、Demo、以及 so 库，可用于商店或大体积 App 差分升级  \n项目地址：https://github.com/cundong/SmartAppUpdates  \n\n1. Magnet  \n创建类似 Facebook 聊天桌面悬浮窗的效果  \n项目地址：https://github.com/premnirmal/Magnet  \n\n1. AcDisplay  \n将 Android 的通知都集中到锁屏显示  \n项目地址：https://github.com/AChep/AcDisplay  \nDemo 地址：https://play.google.com/store/apps/details?id=com.achep.acdisplay  \n\n1. QrCodeScan  \nZXing 和 ZBar 结合的二维码扫描项目，提高了扫描效率  \n项目地址：https://github.com/SkillCollege/QrCodeScan  \n\n1. Android-ScreenShot  \n实现 android 系统截屏功能  \n项目地址：https://github.com/Android-ScreenShot/AndroidScreenShotService  \n文档介绍：http://blog.csdn.net/buptgshengod/article/details/39155979  \n\n1. card.io SDK for Android  \n信用卡扫描 Android SDK  \n项目地址：https://github.com/card-io/card.io-Android-SDK  \nDemo 项目：https://github.com/card-io/card.io-Android-SDK/tree/master/SampleApp  \n\n1. ASNE  \nTwitter, Facebook, Google Plus, LinkedIn, Instagram, Vkontakte, Odnoklassniki 的集成库，包括他们的大多数功能  \n项目地址：https://github.com/gorbin/ASNE  \nDemo 地址：https://play.google.com/store/apps/details?id=com.gorbin.androidsocialnetworksextended.asne  \n\n1. Android Signature Pad  \nAndroid 自定义的签名 View，可自定义笔颜色和大小  \n项目地址：https://github.com/gcacace/android-signaturepad  \nDemo 项目：https://github.com/gcacace/android-signaturepad/tree/master/SignaturePad-Example  \n\n1. Teleport  \nAndroid Wear 数据同步和消息传送库  \n项目地址：https://github.com/Mariuxtheone/Teleport  \n\n1. DebugLog  \n可以帮你创建更简单和更容易理解的调试日志，能够友好的显示调试信息所在类和函数。  \n项目地址：https://github.com/MustafaFerhan/DebugLog  \n\n1. Logger  \n简单、美观而且十分强大的 Android 日志工具  \n项目地址：https://github.com/orhanobut/logger  \nDemo 地址：https://github.com/orhanobut/logger/tree/master/app  \n\n1. jlog  \n可以灵活配置的日志工具，支持JSON打印，日志保存到指定文件，日志显示调用位置（混淆模式下依然有效）  \n项目地址：https://github.com/JiongBull/jlog  \nDemo 地址：[apk地址](https://raw.githubusercontent.com/JiongBull/jlog/master/apk/JLog_sample.apk)  \n\n1. Phrase  \nsquare 组开源大牛写的字符串替换类  \n项目地址：https://github.com/square/phrase  \n\n1. ColorPhrase  \n模仿 phrase 写的对字符串个别字符颜色改变的类，高效强大！  \n项目地址：https://github.com/THEONE10211024/ColorPhrase  \n\n1. PinyinSearch  \n一个为 T9 搜索和 Qwerty 搜索,提供数据解析与匹配等方法的拼音搜索 java 库。  \n项目地址： https://github.com/handsomezhou/PinyinSearchLibrary  \nDemo 地址： [ContactsSearch](https://github.com/handsomezhou/PinyinSearchLibrary/blob/master/external_res/bin/ContactsSearch.apk?raw=true)    [AppSearch](https://github.com/handsomezhou/PinyinSearchLibrary/blob/master/external_res/bin/AppSearch.apk?raw=true)  \nAPP 示例： 通讯录应用，微信电话本  \n\n1. PrainView  \nPaintView 是一个画图工具:  \n可直接使用设定按钮来实现已拥有的方法，且拓展性强  \n基础功能：更换颜色、更换橡皮、以及更换橡皮和笔的粗细、清屏、倒入图片  \n特殊功能：保存画笔轨迹帧动画、帧动画导入导出、ReDo和UnDo  \n项目地址：[Paintview](https://github.com/lfkdsk/JustWeTools)  \ndemo地址：[apk地址](https://github.com/lfkdsk/JustWeTools/blob/master/demo/DrawAPicture.apk)  \n原理解析：[PaintView 绘图控件解析](http://www.cnblogs.com/lfk-dsk/p/4768850.html)  \n\n1. CodeView  \nCodeView代码查看／修改工具: 基于WebView制作的代码编辑器,实现代码高亮，暗色主题  \n项目地址：[CodeView](https://github.com/lfkdsk/JustWeTools)  \ndemo地址：[apk地址](https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk)  \n\n1. ExplorerView  \n文件浏览器：继承自ListView，可拓展性强，可进行文件类型分析  \n项目地址：[CodeView](https://github.com/lfkdsk/JustWeTools)  \ndemo地址：[apk地址](https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk)  \n\n1. ReadView  \n小说阅读器，支持文字字体、颜色、背景、进度等多种调整，支持一键设置。  \n项目地址：[ReadView](https://github.com/lfkdsk/JustWeTools)  \ndemo地址：[apk地址](https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk)  \n\n1. MarkDownView  \n支持MarkDown语法的渲染器,基于WebView的MarkDown渲染器,支持标准化的MarkDown语法,\n调用接口和CodeView保持一致使用简便  \n项目地址：[ReadView](https://github.com/lfkdsk/JustWeTools)  \ndemo地址：[apk地址](https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk)  \n\n1. VerTextView竖行排版的TextView:  \n支持竖行排版，添加了下划线功能，开启简便，下划线粗细、颜色、间距均可自定义，  \n接口调用方式与TextView相似，使用简便。  \n项目地址：[ReadView](https://github.com/lfkdsk/JustWeTools)  \ndemo地址：[apk地址](https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk)  \n\n1. GHDownload下载框架  \n支持单线程和多线程断点下载，简单易用。  \n项目地址：[GHDownload](https://github.com/guanchao/GHDownload)  \n\n\n## 第三部分 优秀项目\n主要介绍那些 Android 还不错的完整项目，目前包含的项目主要依据是项目有意思或项目分层规范比较好。  \n\n### 一、系统及平台\n1. Linux  \n项目地址：https://github.com/torvalds/linux  \n1. Android  \n项目地址：https://android.googlesource.com/  \n\n### 二、项目\n1. ZXing  \n二维码扫描工具  \n项目地址：https://github.com/zxing/zxing 或 https://code.google.com/p/zxing/  \nAPK 地址：https://play.google.com/store/apps/details?id=com.google.zxing.client.android  \n其他：现在市面上很多应用的二维码扫描功能都是从这个修改而来  \n\n1. photup  \n编辑机批量上传照片到 facebook 上  \n项目地址：https://github.com/chrisbanes/photup  \nAPK 地址：https://play.google.com/store/apps/details?id=uk.co.senab.photup  \n其他：代码分包合理，很棒。不过这个项目依赖的开源项目比较多，比较难编译  \n\n1. github-android  \nGithub 的 Android 客户端项目  \n项目地址：https://github.com/github/android  \nAPK 地址：https://play.google.com/store/apps/details?id=com.github.mobile  \n\n1. Notes  \nMIUI 便签  \n项目地址：https://github.com/MiCode/Notes  \nAPK 地址：https://github.com/Trinea/TrineaDownload/blob/master/miui-note-demo.apk?raw=true  \n其他：项目分包比较合理，相比较 miui 的文件管理器 https://github.com/MiCode/FileExplorer 代码规范较好得多  \n\n1. weicuiyuan  \n四次元-新浪微博客户端  \n项目地址：https://github.com/qii/weiciyuan  \nAPK 地址：https://play.google.com/store/apps/details?id=org.qii.weiciyuan  \n\n1. Douya  \n豆芽——Material Design 的豆瓣客户端  \n项目地址：https://github.com/DreaminginCodeZH/Douya  \n\n1. gnucash-android  \n一个记账理财软件  \n项目地址：https://github.com/codinguser/gnucash-android  \nAPK 地址：http://play.google.com/store/apps/details?id=org.gnucash.android  \n\n1. AntennaPod  \n支持 rss 订阅、音乐订阅  \n项目地址：https://github.com/danieloeh/AntennaPod  \nAPK 地址：https://play.google.com/store/apps/details?id=de.danoeh.antennapod  \n\n1. ChaseWhisplyProject  \n打鬼游戏  \n项目地址：https://github.com/tvbarthel/ChaseWhisplyProject  \nAPK 地址：https://play.google.com/store/apps/details?id=fr.tvbarthel.games.chasewhisply  \n\n1. Tweet Lanes  \n功能完整的 Twitter 客户端  \n项目地址：https://github.com/chrislacy/TweetLanes  \nAPK 地址：https://play.google.com/store/apps/details?id=com.tweetlanes.android  \n\n1. Financius  \n简单易用的记账程序  \n项目地址：https://github.com/mvarnagiris/Financius  \nAPK 地址：https://play.google.com/store/apps/details?id=com.code44.finance  \n\n1. todo.txt-android  \ntodo.txt 的官方 Android 应用  \n项目地址：https://github.com/ginatrapani/todo.txt-android  \nAPK 地址：https://play.google.com/store/apps/details?id=com.todotxt.todotxttouch  \n\n1. simpletask  \n基于 todo.txt 官方应用的另一个客户端  \n项目地址：https://github.com/mpcjanssen/simpletask-android  \nAPK 地址：https://play.google.com/store/apps/details?id=nl.mpcjanssen.todotxtholo  \n\n1. Muzei Live Wallpaper  \n定时更换桌面精美壁纸  \n项目地址：https://github.com/romannurik/muzei  \nAPK 地址：https://play.google.com/store/apps/details?id=net.nurik.roman.muzei  \n\n1. Scanbook  \n扫描搜索查询图书信息  \n项目地址：https://github.com/JayFang1993/ScanBook  \nAPK 地址：http://www.wandoujia.com/apps/com.scanbook  \n\n1. iosched  \nThe Google I/O 2014 Android App  \n项目地址：https://github.com/google/iosched  \nAPK 地址：https://play.google.com/store/apps/details?id=com.google.samples.apps.iosched  \n\n## 第四部分 开发工具及测试工具\n主要介绍和 Android 开发工具和测试工具相关的开源项目。  \n\n### 一、开发效率工具\n1. Parceler  \n通过注解及工具类自动完成实体类 Parcelable 及值传递  \n项目地址：https://github.com/johncarl81/parceler  \n\n1. Json2Java  \n根据 JSon 数据自动生成对应的 Java 实体类，还支持 Parcel、Gson Annotations 对应代码自动生成。期待后续的提取父类以及多 url 构建整个工程的功能  \n项目地址：https://github.com/jonfhancock/JsonToJava  \n在线演示：http://jsontojava.appspot.com/  \n\n1. IntelliJ Plugin for Android Parcelable boilerplate code generation  \nAndroid studio 插件，生成 Parcelable 代码  \n项目地址：https://github.com/mcharmas/android-parcelable-intellij-plugin  \n\n1. Android Holo Colors IntelliJ Plugin  \nAndroid studio 插件，生成 holo 样式 9 patch 图片  \n项目地址：https://github.com/jeromevdl/android-holo-colors-idea-plugin  \n\n1. Android Drawable Factory  \n用于生成各个分辨率的图片  \n项目地址：https://github.com/tizionario/AndroidDrawableFactory  \n\n1. SelectorChapek for Android  \nAndroid Studio 插件，可根据固定文件名格式资源自动生成 drawable selectors xml 文件。  \n项目地址：https://github.com/inmite/android-selector-chapek  \n\n1. Android Action Bar Style Generator  \nAndroid ActionBar 样式生成器，可在线选择 ActionBar 样式自动生成所需要的图片资源及 xml 文件  \n项目地址：https://github.com/jgilfelt/android-actionbarstylegenerator  \n在线演示：http://jgilfelt.github.io/android-actionbarstylegenerator/  \n\n1. ButterKnifeZelezny  \n用于快速生成[ButterKnife](https://github.com/JakeWharton/butterknife)View 注入代码的 Android Studio/IDEA 插件  \n项目地址：https://github.com/inmite/android-butterknife-zelezny  \n\n1. RoboCoP  \n利用 Gradle task 根据固定格式的 json 文件生成 ContentProvider  \n项目地址：https://github.com/mediarain/RoboCoP  \n\n1. appiconsizes  \n用于生成各个分辨率的图片  \n项目地址：http://www.appiconsizes.com/  \n\n1. AndroidUtiles \n集合了所有常用的安卓工具类\n项目地址：https://github.com/l123456789jy/Lazy\n\n1. Gradle Retrolambda Plugin  \n[Retrolambda](https://github.com/orfjackal/retrolambda)是将 Java8 的 Lambdas 应用于 Java7 的工具，本项目是 Gradle 插件，通过 Retrolambda 从而使 Java 或 Android 项目用 Java8 的 Lambdas 编写，将编译后的字节码转换为 Java6 和 7 的字节码从而正常运行  \n项目地址：https://github.com/evant/gradle-retrolambda  \n\n1. Dagger IntelliJ Plugin  \ndagger 的 intellij 插件  \n项目地址：https://github.com/square/dagger-intellij-plugin  \n\n1. Android Gen Drawable Maven plugin  \n在编译时根据 SVG 描述文件生成不同分辨率的 jpg、png 或点 9 图片  \n项目地址：https://github.com/avianey/androidgendrawable-maven-plugin  \n\n1. Android Asset Studio  \n各种 Android 资源自动生成器，包括启动图标、ActionBar 图标、通知栏图标、点 9 等  \n项目地址：https://github.com/romannurik/AndroidAssetStudio  \n在线演示：http://romannurik.github.io/AndroidAssetStudio/  \n\n1. jsonschema2pojo  \n根据 Json 内容生成 java 对象，支持 jackjson 和 gson  \n项目地址：https://github.com/joelittlejohn/jsonschema2pojo  \n在线演示：http://www.jsonschema2pojo.org/  \n\n1. GsonFormat  \n根据 JSONObject 格式的字符串,自动生成实体类参数的 Android Studio/IntelliJ IDEA 插件  \n项目地址：https://github.com/zzz40500/GsonFormat  \n\n1. 9-Patch-Resizer  \n自动生成 png 及点 9 图片的不同分辨率版本  \n项目地址：https://github.com/redwarp/9-Patch-Resizer  \n\n1. AndroidLocalizationer  \n可用于将项目中的 string 资源自动翻译为其他语言的 Android Studio/IntelliJ IDEA 插件  \n项目地址：https://github.com/westlinkin/AndroidLocalizationer  \n\n1. Material Palette  \n一个将现有的色彩方案组合成材料设计的调色板方案，提供下载。选取两个主要色彩后便可以提供下载，提供下载的格式可以是 android 的资源 xml 文件，以色彩的方式提供，也可以是 CSS、SVG、PNG 等常见格式文件。  \n项目地址：http://www.materialpalette.com/  \n\n### 二、开发自测相关\n1. Quality Tools for Android  \nAndroid 测试及自测工具集合和示例  \n项目地址：https://github.com/stephanenicolas/Quality-Tools-for-Android  \n\n1. android-test-kit  \nGoogle 的 Android 测试工具  \n包括 GoogleInstrumentationTestRunner(增强版的 InstrumentationTestRunner)和 Espresso(用于快速写出可靠测试用例的 API)  \n项目地址：https://code.google.com/p/android-test-kit/  \n文档介绍：https://code.google.com/p/android-test-kit/w/list  \n\n1. robolectric  \n测试用例编写框架  \n项目地址：https://github.com/robolectric/robolectric  \nDemo 地址：https://github.com/robolectric/robolectricsample  \n文档介绍：http://robolectric.org/  \n特点：(1). 不需要模拟器在一般 JVM 就可以运行测试用例  \n(2). 能完成在真机上的大部分测试包括感应器  \n其他的测试用例及相关模块 Mock 可见：[android-mock](https://code.google.com/p/android-mock/), [mockito](https://code.google.com/p/mockito/), [easy-mock](https://github.com/easymock/easymock)  \n\n1. Android FEST  \n提供一些列方便的断言，可用于提高编写 Android 自测代码效率  \n项目地址：https://github.com/square/fest-android  \n\n1. BoundBox  \n可用于测试类各种访问权限的属性、方法。实际是通过 BoundBox 这个 annotation 生成一个属性和方法都是 public 权限的中间类并对此类进行测试完成的  \n项目地址：https://github.com/stephanenicolas/boundbox  \n\n1. Hugo  \n用于打印函数信息及执行时间的工具，仅在 debug 模式生效  \n项目地址：https://github.com/JakeWharton/hugo  \n\n1. scalpel  \n在应用下面添加一层用于界面调试  \n项目地址：https://github.com/JakeWharton/scalpel  \n\n1. Android Screenshot library  \nAndroid 截图工具类，用于在持续集成时截图  \n项目地址：https://github.com/rtyley/android-screenshot-lib  \n\n1. sonar-android-lint-plugin  \n将 android lint 的错误在 sonar 中展现  \n项目地址：https://github.com/SonarCommunity/sonar-android  \n\n### 三、测试工具\n1. Spoon  \n可用于 android 不同机型设备自动化测试，能将应用 apk 和测试 apk 运行在不同机器上并生成相应测试报告。  \n项目地址：https://github.com/square/spoon  \n\n1. Tencent APT  \nAPT 是腾讯开源的一个 Android 平台高效性能测试组件，提供丰富实用的功能，适用于开发自测、定位性能瓶颈；测试人员完成性能基准测试、竞品对比测试  \n项目地址：https://github.com/stormzhang/APT  \n\n1. Emmagee  \n网易开源的性能测试工具，包括 CPU、内存、网络流量、启动时间、电池状态等  \n项目地址：https://github.com/NetEase/Emmagee  \n\n1. Android py-uiautomator  \npy-uiautomator 是一个对 Android uiautomator 用 python 进行封装的测试框架.  \n项目地址：https://github.com/xiaocong/uiautomator  \n\n1. Augmented Traffic Control  \n模拟网络状况，包括带宽、时延抖动、丢包率、错包率、包重排率  \n项目地址：https://github.com/facebook/augmented-traffic-control  \n\n1. stetho  \n强大的 Android Debug 工具。支持网络请求监控以及数据库查看，可以和 Chrome DevTools 结合或者命令行模式。  \n项目地址：https://github.com/facebook/stetho  \n\n### 四、开发及编译环境\n1. Buck  \nfacebook 开源的 Android 编译工具，效率是 ant 的两倍。主要优点在于：  \n(1) 加快编译速度，通过并行利用多核 cpu 和跟踪不变资源减少增量编译时间实现  \n(2) 可以在编译系统中生成编译规则而无须另外的系统生成编译规则文件  \n(3) 编译同时可生成单元测试结果  \n(4) 既可用于 IDE 编译也可用于持续集成编译  \n(5) facebook 持续优化中  \n项目地址：https://github.com/facebook/buck  \n\n1. Android Maven Plugin  \nAndroid Maven 插件，可用于对 android 三方依赖进行管理。在 J2EE 开发中，maven 是非常成熟的依赖库管理工具，可统一管理依赖库。  \n项目地址：https://github.com/jayway/maven-android-plugin  \n\n1. umeng-muti-channel-build-tool  \n渠道打包工具  \n项目地址：https://github.com/umeng/umeng-muti-channel-build-tool  \n另可参见 Google 的构建系统 Gradle：http://tools.android.com/tech-docs/new-build-system/user-guide  \n\n1. Genymotion  \n目前最好用最快的 android 模拟器  \n项目地址：http://www.genymotion.com/  \nAndroid studio 集成控件： http://plugins.jetbrains.com/plugin/7269?pr=idea  \nCyril Mottier 推荐：http://cyrilmottier.com/2013/06/27/a-productive-android-development-environment/  \n\n1. gradle-mvn-push  \n方便的将 Gradle 的 Artifacts 上传到 Maven 仓库  \n项目地址：https://github.com/chrisbanes/gradle-mvn-push  \n文档介绍：https://github.com/chrisbanes/gradle-mvn-push#usage  \n\n1. Android Emulator Plugin for Jenkins  \nAndroid 模拟器 jenkins 插件，用于 Jenkins 做持续集成时跑模拟器测试  \n项目地址：https://github.com/jenkinsci/android-emulator-plugin  \n\n1. Android Maven Plugin  \n管理应用所需要的依赖库。包括的构建工具有 Maven、Gradle、ant、sbt  \n项目地址：https://github.com/mosabua/maven-android-sdk-deployer  \n\n1. SDK Manager Plugin  \n下载和管理 Android SDK 的 Gradle 插件  \n项目地址：https://github.com/JakeWharton/sdk-manager-plugin  \n\n1. Gradle Protobuf Plugin  \n将.proto 文件转换成 Java 文件的 gradle 插件  \n项目地址：https://github.com/andrewkroh/gradle-protobuf-plugin  \n\n1. ChromeADB  \nChrome 的 Adb 插件，当登录后，能看到所有连接的设备并操作，可以看应用、进程、内存及磁盘使用情况等  \n项目地址：https://github.com/importre/chromeadb  \n\n### 五、其他\n1. GT  \nAPP的随身调试平台，它是直接运行在手机上的“集成调试环境”(IDTE, Integrated Debug Environment)。  \n项目地址：https://github.com/TencentOpen/GT  \n文档介绍：http://gt.qq.com/docs.html  \n\n1. ViewServer  \n允许 app 运行在任何手机上都可以用 HierarchyViewer 查看  \n项目地址：https://github.com/romainguy/ViewServer  \n\n1. GridWichterle for Android  \n在整个系统上显示一个 grid，用来帮助查看应用布局及使得布局更美观，可设置 grid 网格大小和颜色，android 推荐 48dp 和 8dp，可见 Android Design Guidelines – Metrics and Grids，比起 hierarchyviewer 相差甚远，不过偶尔可用来作为布局查看工具。  \n项目地址：https://github.com/inmite/android-grid-wichterle  \nDemo 地址：https://play.google.com/store/apps/details?id=eu.inmite.android.gridwichterle  \n\n1. Catlog  \n手机端 log 查看工具，支持不同颜色显示、关键字过滤、级别过滤、进程 id 过滤、录制功能等  \n项目地址：https://github.com/nolanlawson/Catlog  \n在线演示：https://play.google.com/store/apps/details?id=com.nolanlawson.logcat  \n\n1. PID Cat  \n根据 package 查看 logcat 日志  \n项目地址：https://github.com/JakeWharton/pidcat  \n\n1. ACRA  \n应用崩溃信息日志上报到 GoogleDoc 工具，网页版展现结果三方开源地址 https://github.com/BenoitDuffez/crashreportsviewer  \n项目地址：https://github.com/ACRA/acra  \n文档介绍：https://github.com/ACRA/acra/wiki/BasicSetup  \n\n1. Crashlytics  \n提供丰富的应用崩溃信息日志收集  \n轻量级，丰富，可自定义应用崩溃信息收集器，附有邮件通知  \n项目地址：http://www.crashlytics.com/  \n集成插件：[Android Studio, Eclipse and IntelliJ](http://try.crashlytics.com/sdk-android/?utm_source=blog&utm_medium=blog&utm_campaign=Announcing_android_studio_wp&utm_content=CTA_button)  \n\n1. Android Resource Navigator  \nchrome 插件，可以方便的查看 github 上 android 源码工程的 styles.xml 和 themes.xml。主要功能：  \n(1) 快速打开 android styles.xml themes.xml  \n(2) 方便在资源间跳转。styles.xml themes.xml 文件中资源链接跳转，可以方便跳转到某个资源  \n(3) 方便查找某个 style 和 theme。chrome 地址栏输入 arn+tab+搜索内容回车即可  \n(4) 自动下载不同分辨率下的 drawable  \n(5) 通过映射查找那些不是按照固定命名规则命名的 style 和 theme  \n项目地址：https://github.com/jgilfelt/android-resource-navigator  \n在线演示：https://chrome.google.com/webstore/detail/android-resource-navigato/agoomkionjjbejegcejiefodgbckeebo?hl=en&gl=GB  \n\n1. android-resource-remover  \n根据 lint 的提示删除项目中无用的资源，减少包的大小  \n项目地址：https://github.com/KeepSafe/android-resource-remover  \n\n1. Telescope  \n通过手势截图以特定主题发送到特定邮箱地址报告 Bug  \n项目地址：https://github.com/mattprecious/telescope  \n\n1. Complete Android Fragment & Activity Lifecycle  \n完整的 Android Fragment/Activity 生命周期图  \n项目地址：https://github.com/xxv/android-lifecycle  \n\n1. Bugsnag Notifier for Android  \n通过`Thread.UncaughtExceptionHandler`捕获应用未处理的异常崩溃 Bug 并用 Notification 展示同时上传到后台服务器  \n项目地址：https://github.com/bugsnag/bugsnag-android  \n文档介绍：https://github.com/bugsnag/bugsnag-android#installation--setup  \n\n1. Material Design Icons  \nGoogle Material Design 规范中的 Icon  \n项目地址：https://github.com/google/material-design-icons  \n\n1. scrollscreenshot  \nAndroid 滚动屏幕自动截图 jar 包，支持纵向、横向滚动截屏拼接  \n项目地址：https://github.com/PGSSoft/scrollscreenshot  \n\n1. droidicon  \n1600+的海量 Icon，包括 750+的 Material Design icons  \n项目地址：https://github.com/theDazzler/droidicon  \n\n1. leakcanary  \nAndroid 内存泄露检测工具，集成方便，出现泄露后报告直观  \n项目地址：https://github.com/square/leakcanary  \n\n1. CacheUtilsLibrary  \n将任何Java Object类型的数据序列化后写入缓存文件，将来使用时读取缓存文件并反序列化成对应Java Object的库  \n项目地址：https://github.com/westlinkin/CacheUtilsLibrary\n\n1. BlockCanary  \nBlockCanary是一个Android平台的一个非侵入式的性能监控组件，应用只需要实现一个抽象类，提供一些该组件需要的上下文环境，就可以在平时使用应用的时候检测主线程上的各种卡慢问题，并通过组件提供的各种信息分析出原因并进行修复。  \n项目地址: https://github.com/moduth/blockcanary  \n\n## 第五部分  \n主要介绍那些乐于分享并且有一些很不错的开源项目的个人和组织。Follow 大神，深挖大神的项目和 following，你会发现很多。  \n\n### 一、个人  \n1. JakeWharton  \n就职于 Square，绝对牛逼的大神，项目主要集中在 Android 版本兼容，ViewPager 及开发工具上  \nGithub 地址：https://github.com/JakeWharton  \n代表作：ActionBarSherlock，Android-ViewPagerIndicator，Nine Old Androids，SwipeToDismissNOA，hugo，butterknife，Android-DirectionalViewPager, scalpel    \npidcat 另外对 square 及其他开源项目有很多贡献  \n主页：http://jakewharton.com/  \n\n1. Chris Banes  \nGithub 地址：https://github.com/chrisbanes  \n代表作：ActionBar-PullToRefresh，PhotoView，Android-BitmapCache，Android-PullToRefresh  \n主页：http://chris.banes.me/  \n\n1. Koushik Dutta  \n就职于 ClockworkMod  \nGithub 地址：https://github.com/koush  \n代表作：Superuser，AndroidAsync，UrlImageViewHelper，ion, 另外对 https://github.com/CyanogenMod 的开源项目有很多贡献  \n主页：http://koush.com/  \n\n1. Simon Vig  \nGithub 地址：https://github.com/SimonVT  \n代表作：android-menudrawer，MessageBar  \n主页：http://simonvt.net/  \n\n1. Manuel Peinado  \nGithub 地址：https://github.com/ManuelPeinado  \n代表作：FadingActionBar，GlassActionBar，RefreshActionItem，QuickReturnHeader  \n\n1. Emil Sj?lander  \nGithub 地址：https://github.com/emilsjolander  \n代表作：StickyListHeaders，sprinkles，android-FlipView  \n主页：http://emilsjolander.se/  \n\n1. greenrobot  \nGithub 地址：https://github.com/greenrobot  \n代表作：greenDAO，EventBus  \n主页：http://greenrobot.de/  \n\n1. Jeff Gilfelt  \nGithub 地址：https://github.com/jgilfelt  \n代表作：android-mapviewballoons，android-viewbadger，android-actionbarstylegenerator，android-sqlite-asset-helper  \n主页：http://jeffgilfelt.com  \n\n1. Romain Guy  \nAndroid team 成员(2013.10 已离开 Android team，仍在 Google)  \nGithub 地址：https://github.com/romainguy  \n代表作：ViewServer  \n主页：http://www.curious-creature.org/category/android/  \n個人攝影作品：http://www.flickr.com/photos/romainguy  \n\n1. sephiroth74  \n就职于 Aviary.com  \nGithub 地址：https://github.com/sephiroth74  \n代表作：ImageViewZoom，HorizontalVariableListView，AndroidWheel，purePDF  \n主页：http://www.sephiroth.it/  \n\n1. Cyril Mottier  \nGoogle 开发者专家认证，发布一些 Android 技巧及文章  \nGithub 地址：https://github.com/cyrilmottier  \n代表作：GreenDroid，Polaris  \n主页：http://cyrilmottier.com/  \n\n### 二、组织  \n1. Square  \n有态度有良心的企业，很多不错的分享  \nGithub 地址：https://github.com/square  \n代表作：okhttp、fest-android，android-times-square、picasso、dagger、spoon 等等  \n主页：http://square.github.io/  \n\n1. Inmite s.r.o.  \nGithub 地址：https://github.com/inmite  \n代表作：android-styled-dialogs，android-grid-wichterle，android-selector-chapek  \n主页：http://www.inmite.eu/  \n\n### 三、博客  \n[部分国外著名 Android 开发者信息](https://github.com/android-cn/android-dev-com)  \n\n## 注意\n> 本文转自——**[Trinea 汇总的开源项目](https://github.com/Trinea/android-open-project)**\n> 欢迎大家关注他的微信公众号：codekk。二维码如下：  \n>  专注于 Android 开源分享、源码解析、框架设计、Android 内推。  \n>   ![img](http://www.trinea.cn/wp-content/uploads/2016/01/weixin-codekk-160.jpg)  \n>    他的网站：[www.codekk.com](http://a.codekk.com)\n>  **关于trinea，欢迎关注**  \n>  微博：<a title=\"Android 技术及移动互联网分享\" href=\"http://weibo.com/trinea?s=6cm7D0\" target=\"_blank\">Trinea</a>&nbsp;&nbsp;&nbsp;&nbsp;主页：<a title=\"关注于 Android、Java、性能优化、开源项目\" href=\"http://www.trinea.cn/\" target=\"_blank\">trinea.cn</a> \n\n## 推荐\n> [Android 开源项目源码解析(Volley、UIL、Dagger、EventBus、插件化库等分析)](http://a.codekk.com)\n> \n> [Android 职位内部推荐(阿里、腾讯、百度、京东、滴滴、美团、58、华为、网易、魅族等)](http://j.codekk.com)","source":"_posts/2016-03-25.android-open-project.md","raw":"---\ntitle: Android 开源项目分类汇总\ncomments: true\nfancybox: false\ntoc: true\ndate: 2016-03-25 22:15:00\ntags: \n- Android\n- 开源项目汇总\ncategories:\n- Android\ndescription:\npermalink: android-open-project\ntop: \n---\n## 目前包括：\n>1. Android 开源项目第一篇——个性化控件(View)篇\n>*包括：ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style、其他*  \n>1. Android 开源项目第二篇——工具库篇\n>*包括：依赖注入、图片缓存、网络请求、数据库 ORM 工具包、Android 公共库、高版本向低版本兼容库、多媒体、事件总线、传感器、安全、插件化、文件、其他*  \n>1. Android 开源项目第三篇——优秀项目篇\n>*比较有意思的完整的 Android 项目*  \n>1. Android 开源项目第四篇——开发及测试工具篇\n>*包括：开发效率工具、开发自测相关、测试工具、开发及编译环境、其他*  \n>1. Android 开源项目第五篇——优秀个人和团体篇\n>*乐于分享并且有一些很不错的开源项目的个人和组织，包括 JakeWharton、Chris Banes、Koushik Dutta 等大牛*  \n<!--more-->\n\n### 提示\n以下链接网址若存在不能访问，请自行尝试翻墙，推荐使用GreenVPN\n[![好用的GreenVPN](/resources/greenvpn.gif)](http://gjsq.me/15038648)\n\n## 第一部分 个性化控件(View)\n主要介绍那些不错个性化的 View，包括 ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style 等等。  \n\n### 一、ListView\n1. android-pulltorefresh  \n一个强大的拉动刷新开源项目，支持各种控件下拉刷新，ListView、ViewPager、WebView、ExpandableListView、GridView、ScrollView、Horizontal  ScrollView、Fragment 上下左右拉动刷新，比下面 johannilsson 那个只支持 ListView 的强大的多。并且它实现的下拉刷新 ListView 在 item 不足一屏情况下也不会显示刷新提示，体验更好。  \n项目地址：https://github.com/chrisbanes/Android-PullToRefresh  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refreshview-demo.apk?raw=true  \nAPP 示例：新浪微博各个页面 \n\n1. android-pulltorefresh-listview  \n下拉刷新 ListView，这个被很多人使用的项目实际有不少 bug，推荐使用 [android-Ultra-Pull-to-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh)  \n项目地址：https://github.com/johannilsson/android-pulltorefresh  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refresh-listview-demo.apk?raw=true  \n\n3. android-Ultra-Pull-to-Refresh  \n下拉刷新，第一个项目已经停止维护了，并且使用起来相对复杂，定制性也差。这个是替代和改良方案。这个继承于 ViewGroup 可以包含任何 View。功能甚至比 SwipeRefreshLayout 强大。使用起来非常简单。良好的设计，如果你想定制自己的 UI 样式，非常简单，就像给 ListView 加一个 Header View 那么简单。支持 `API LEVEL >= 8`  \n项目地址：https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh  \n原理剖析文档：[android-Ultra-Pull-to-Refresh](http://a.codekk.com/detail/Android/Grumoon/android-Ultra-Pull-To-Refresh 源码解析)  \nDemo 地址：https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh/blob/master/ptr-demo/target/ultra-ptr-demo.apk?raw=true  \n\n1. Android-PullToRefreshRecyclerView  \n支持下拉刷新的RecyclerView，同时支持滑动到底部自动加载数据、给RecyclerView添加Header。并且不更改原有RecyclerView的逻辑。  \n项目地址：https://github.com/HomHomLin/Android-PullToRefreshRecyclerView。    \nDemo地址：https://github.com/HomHomLin/Android-PullToRefreshRecyclerView/blob/master/sample.apk  \n\n1. DragSortListView  \n拖动排序的 ListView，同时支持 ListView 滑动 item 删除，各个 Item 高度不一、单选、复选、CursorAdapter 做为适配器、拖动背景变化等  \n项目地址：https://github.com/bauerca/drag-sort-listview  \nDemo 地址：https://play.google.com/store/apps/details?id=com.mobeta.android.demodslv  \nAPP 示例：Wordpress Android  \n\n1. SwipeListView  \n支持定义 ListView 左右滑动事件，支持左右滑动位移，支持定义动画时间  \n项目地址：https://github.com/47deg/android-swipelistview  \nDemo 地址：https://play.google.com/store/apps/details?id=com.fortysevendeg.android.swipelistview  \nAPP 示例：微信 \n\n1. SlideAndDragListView  \n支持ListView的Item的拖动排序、左右滑动事件，可自定义左右滑动显示文字、图标、位移，同时支持onItemClick、onItemLongClick等监听器，提供丰富的回调接口。  \n项目地址：https://github.com/yydcdut/SlideAndDragListView  \nDemo 地址：https://github.com/yydcdut/SlideAndDragListView/blob/master/apk/sdlv.apk?raw=true  \nAPP 示例：Android 手机QQ 5.0  \n\n1. Android-SwipeToDismiss  \n滑动 Item 消失 ListView，支持 3.0 以下版本见：https://github.com/JakeWharton/SwipeToDismissNOA  \n项目地址：https://github.com/romannurik/Android-SwipeToDismiss  \nDemo 地址：https://github.com/JakeWharton/SwipeToDismissNOA/SwipeToDismissNOA.apk/qr_code  \n\n1. RecyclerViewSwipeDismiss  \n轻量级支持 support-v7 中的 RecyclerView 的滑动删除(Swipe to dismiss)行为，不需要修改源代码，只要简单的绑定`onTouchListener`  \n项目地址：https://github.com/CodeFalling/RecyclerViewSwipeDismiss  \n\n1. PinnedHeaderExpandableListView  \n首先它是一个 ExpandableListView，但是它的头部可以固定，其次，在它的上面还有一个头部可以来回伸缩  \n项目地址：https://github.com/singwhatiwanna/PinnedHeaderExpandableListView  \nAPP 示例：百度手机卫士垃圾清理界面  \n\n1. StickyListHeaders  \nGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView，支持快速滑动，支持 Android2.3 及以上  \n项目地址：https://github.com/emilsjolander/StickyListHeaders  \nAPP 示例：Android 4.0 联系人  \n\n1. pinned-section-listview  \nGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView  \n项目地址：https://github.com/beworker/pinned-section-listview  \n\n1. PinnedHeaderListView  \nGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView  \n项目地址：https://github.com/JimiSmith/PinnedHeaderListView  \n\n1. QuickReturn  \nListView/ScrollView 的 header 或 footer，当向下滚动时消失，向上滚动时出现  \n项目地址：https://github.com/lawloretienne/QuickReturn  \nDemo 地址：https://play.google.com/store/apps/details?id=com.etiennelawlor.quickreturn  \n\n1. QuickReturnHeader  \nListView/ScrollView 的 header 或 footer，当向下滚动时消失，向上滚动时出现  \n项目地址：https://github.com/ManuelPeinado/QuickReturnHeader  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/quick-return-header-demo.apk?raw=true  \nAPP 示例：google plus  \n\n1. IndexableListView  \nListView 右侧会显示 item 首字母快捷索引，点击可快速滑动到某个 item  \n项目地址：https://github.com/woozzu/IndexableListView  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/indexable-listview.apk?raw=true  \nAPP 示例：微信通讯录、小米联系人  \n\n1. CustomFastScrollView  \nListView 快速滑动，同时屏幕中间 PopupWindows 显示滑动到的 item 内容或首字母  \n项目地址：https://github.com/nolanlawson/CustomFastScrollViewDemo  \n\n1. Android-ScrollBarPanel  \nListView 滑动时固定的 Panel 指示显示在 scrollbar 旁边  \n项目地址：https://github.com/rno/Android-ScrollBarPanel  \n\n1. SlideExpandableListView  \n用户点击 listView item 滑出固定区域，其他 item 的区域收缩  \n项目地址：https://github.com/tjerkw/Android-SlideExpandableListView  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/slide-expandable-listView-demo.apk?raw=true  \n\n1. JazzyListView  \nListView 及 GridView item 以特殊动画效果进入屏幕，效果包括 grow、cards、curl、wave、flip、fly 等等  \n项目地址：https://github.com/twotoasters/JazzyListView  \nDemo 地址：https://play.google.com/store/apps/details?id=com.twotoasters.jazzylistview.sample  \n在线演示：http://lab.hakim.se/scroll-effects/  \n\n1. ListViewAnimations  \n带 Item 显示动画的 ListView，动画包括底部飞入、其他方向斜飞入、下层飞入、渐变消失、滑动删除等  \n项目地址：https://github.com/nhaarman/ListViewAnimations  \nDemo 地址：https://play.google.com/store/apps/details?id=com.haarman.listviewanimations  \nAPP 示例：Google plus、Google Now 卡片式进入、小米系统中应用商店、联系人、游戏中心、音乐、文件管理器的 ListView、Ultimate、Light Flow Lite、TreinVerkeer、Running Coach、Pearl Jam Lyrics、Calorie Chart、Car Hire、Super BART、DK FlashCards、Counter Plus、Voorlees Verhaaltjes 2.0  \n\n1. DevsmartLib-Android  \n横向 ListView  \n项目地址：https://github.com/dinocore1/DevsmartLib-Android  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/horizontal-listview-demo.apk?raw=true  \n\n1. TwoWayView  \n横向 ListView 的效果，继承自 AdapterView  \n项目地址：https://github.com/lucasr/twoway-view  \n\n1. HorizontalVariableListView  \n支持 Item 宽度不一致的 ListView  \n项目地址：https://github.com/sephiroth74/HorizontalVariableListView  \n\n1. LinearListView  \n用 LinearLayout 实现的 ListView，可解决多个 ListView 并存等问题。目前自己也有需要，等亲自尝试过后会再具体介绍  \n项目地址：https://github.com/frankiesardo/LinearListView  \n\n1. MultiChoiceAdapter  \n支持多选的 ListView Adapter  \n项目地址：https://github.com/ManuelPeinado/MultiChoiceAdapter  \nDemo 地址：https://play.google.com/store/apps/details?id=com.manuelpeinado.multichoiceadapter.demo  \n\n1. EnhancedListView  \n支持横向滑动删除列表项以及撤销删除的 ListView，该项目的前身是[SwipeToDismissUndoList](https://github.com/timroes/SwipeToDismissUndoList)  \n项目地址：https://github.com/timroes/EnhancedListView  \nDemo 地址：https://play.google.com/store/apps/details?id=de.timroes.android.listviewdemo&rdid=de.timroes.android.listviewdemo  \n\n1. ListBuddies  \n自动滚动的双列 ListView ，两个 ListView 滚动速度不一致，有视差效果  \n项目地址：https://github.com/jpardogo/ListBuddies  \nDemo 地址：https://play.google.com/store/apps/details?id=com.jpardogo.android.listbuddies  \n\n1. SwipeMenuListView  \n针对 ListView item 的侧滑菜单  \n项目地址：https://github.com/baoyongzhang/SwipeMenuListView  \nAPP 示例：手机 QQV5.0  \n\n1. PagingListView  \n分页加载的 ListView。当滑动到 ListView 底部最后一个元素时，显示一个进度行，然后加载下一页数据，并显示。  \n项目地址：https://github.com/nicolasjafelle/PagingListView  \n\n1. PullZoomView  \n支持下拉时 HeaderView 缩放的 ListView、ScrollView  \n项目地址：https://github.com/Frank-Zhu/PullZoomView  \n\n1. PullToZoomInListView  \n滑动 ListView 时使其 HeaderView 跟随滑动缩放  \n项目地址：https://github.com/matrixxun/PullToZoomInListView  \n\n1. CalendarListview  \n实现每个月一行日历效果的 ListView  \n项目地址：https://github.com/traex/CalendarListview  \n原理剖析文档：[CalendarListview](http://a.codekk.com/detail/Android/Rogary/CalendarListView%20%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90)  \n\n1. sticky-headers-recyclerview  \nGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ListView，采用 support-v7 中的 RecyclerView 实现  \n项目地址：https://github.com/timehop/sticky-headers-recyclerview  \n\n1. PullSeparateListView  \n到达顶部或底部继续拉动时，实现 Item 间的相互分离，两种模式：(1) 全部分离的模式，即屏幕内所有 Item 都会分离 (2)部分分离模式，以点击位置为分界点，部分 item 分离  \n项目地址：https://github.com/chiemy/PullSeparateListView  \n\n1. ExpandableLayout  \nHeader 和 Content Item 都可以展开的 ExpandableListview  \n项目地址：https://github.com/traex/ExpandableLayout  \n\n1. PagedHeadListView  \n支持 paginated header 以及 material page indicator 的 ListView.  \n项目地址：https://github.com/JorgeCastilloPrz/PagedHeadListView  \n\n1. CustomSwipeListView  \n支持左滑弹出自定义菜单，右滑删除且允许撤销，同时可以自定义滑动动画时间和滑动触发事件的时机等。  \n项目地址：https://github.com/xyczero/Android-CustomSwipeListView  \nDemo 地址：[Download here](http://7u2jsw.com1.z0.glb.clouddn.com/githubCustomSwipeListView.apk)  \n\n1. Pull-to-Refresh.Rentals-Android  \n提供一个简单可以自定义的下拉刷新实现，[Yalantis](http://yalantis.com/) 出品。  \n项目地址：https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android  \n\n1. ScrollerCalendar  \n实现每行显示一年的 12 个月份的 RecyclerView 年历  \n项目地址：https://github.com/guanchao/ScrollerCalendar  \n\n1. ExtractWordView  \n一个可以提取单词的 ListView,支持\"放大镜\"效果。  \n项目地址：https://github.com/jcodeing/ExtractWordView  \nDemo 地址：[Download here](https://raw.githubusercontent.com/jcodeing/ExtractWordView/master/ExtractWordView-demo.apk)  \n\n1. FlyRefresh  \n支持 ListView, GridView, RecyclerView, ScrollView 的下拉刷新  \n项目地址：https://github.com/race604/FlyRefresh  \n\n1. MVCHelper  \n实现下拉刷新，滚动底部自动加载更多，分页加载，自动切换显示网络失败布局，暂无数据布局，支持任意 view，真正的 MVC 架构  \n支持切换主流下拉刷新框架 Android-PullToRefresh-Library,android-Ultra-Pull-To-Refresh-library，SwipeRefreshLayout  \n项目地址：https://github.com/LuckyJayce/MVCHelper  \nDemo 地址：https://github.com/LuckyJayce/MVCHelper/blob/master/raw/MVCHelper_Demo.apk?raw=true  \n\n1. RecyclerViewSwipeDismiss  \n支持滑动 Item 操作、点击展开、拖动排序、展开后拖动排序等特性的 RecyclerView  \n项目地址：https://play.google.com/store/apps/details?id=com.h6ah4i.android.example.advrecyclerview  \n视频：http://www.youtube.com/watch?feature=player_embedded&v=S7cSwMArjUQ  \n\n1. WaterDropListView  \n模仿 iOS 下拉刷新“水滴”效果，支持下拉刷新和上拉加载  \n项目地址：https://github.com/THEONE10211024/WaterDropListView  \n\n1. PopupListView  \n實現ListItem 點擊後置頂並可顯示客製化添加的item的內部View 的ListView  \n项目地址：https://github.com/s8871404/PopupListView  \nDemo 地址：https://play.google.com/store/apps/details?id=com.baobomb.popuplistview_sample  \n\n1. CircleRefreshLayout  \n一个包含有趣的动画的自定义下拉刷新布局  \n项目地址：https://github.com/tuesda/CircleRefreshLayout  \n  \n1. EasyRecyclerView  \n一款简单易用的EasyRecyclerView\n1.提供EasyRecyclerView，不需要写太多RecyclerView的配置代码  \n2.提供好一个可以适配单布局和多布局的RecyclerViewAdapter  \n3.提供了分割线的实现类，只需要传入一个DrawableId  \n项目地址：https://github.com/CaMnter/EasyRecyclerView  \n\n1. CanRefresh\n可适配所有视图的下拉刷新上拉加载，并支持各种风格  \n项目地址：https://github.com/canyinghao/CanRefresh  \n\n### 二、ActionBar\n1. ActionBarSherlock  \n为 Android 所有版本提供统一的 ActionBar，解决 4.0 以下 ActionBar 的适配问题  \n项目地址：https://github.com/JakeWharton/ActionBarSherlock  \nDemo 地址：https://play.google.com/store/apps/details?id=com.actionbarsherlock.sample.demos  \n标签：兼容库, ActionBar  \n\n1. ActionBar-PullToRefresh  \n下拉刷新，ActionBar 出现加载中提示  \n项目地址：https://github.com/chrisbanes/ActionBar-PullToRefresh  \nDemo 地址：https://play.google.com/store/apps/details?id=uk.co.senab.actionbarpulltorefresh.samples.stock  \nAPP 示例：Gmail，Google Plus，知乎等  \n\n1. FadingActionBar  \nListView 向下滚动逐渐显现的 ActionBar  \n项目地址：https://github.com/ManuelPeinado/FadingActionBar  \nDemo 地址：https://play.google.com/store/apps/details?id=com.manuelpeinado.fadingactionbar.demo  \nAPP 示例：google music，知乎  \n\n1. NotBoringActionBar  \ngoogle music 下拉收缩的 ActionBar  \n项目地址：https://github.com/flavienlaurent/NotBoringActionBar  \nDemo 地址：http://flavienlaurent.com/blog/2013/11/20/making-your-action-bar-not-boring/  \nAPP 示例：Google 音乐  \n\n1. RefreshActionItem  \n带进度显示和刷新按钮的 ActionBar  \n项目地址：https://github.com/ManuelPeinado/RefreshActionItem  \nDemo 地址：https://play.google.com/store/apps/details?id=com.manuelpeinado.refreshactionitem.demo  \nAPP 示例：The New York Times，DevAppsDirect  \n\n1. GlassActionBar  \n类似玻璃的有一定透明度的 ActionBar  \n项目地址：https://github.com/ManuelPeinado/GlassActionBar  \nDemo 地址：https://play.google.com/store/apps/details?id=com.manuelpeinado.glassactionbardemo  \nAPP 示例：google music  \n\n### 三、Menu\n1. MenuDrawer  \n滑出式菜单，通过拖动屏幕边缘滑出菜单，支持屏幕上下左右划出，支持当前 View 处于上下层，支持 Windows 边缘、ListView 边缘、ViewPager 变化划出菜单等。  \n项目地址：https://github.com/SimonVT/android-menudrawer  \nDemo 地址：http://simonvt.github.io/android-menudrawer/  \nAPP 示例：Gmail、Google Music 等大部分 google app  \n\n1. SlidingMenu  \n滑出式菜单，通过拖动屏幕边缘滑出菜单，支持屏幕左右划出，支持菜单 zoom、scale、slide up 三种动画样式出现。与 MenuDrawer 相比而言，SlidingMenu 支持菜单动画样式出现，MenuDrawer 支持菜单 view 处于内容的上下层  \n项目地址：https://github.com/jfeinstein10/SlidingMenu  \n原理剖析文档：[SlidingMenu](http://a.codekk.com/detail/Android/huxian99/SlidingMenu 源码解析)  \nDemo 地址：https://play.google.com/store/apps/details?id=com.slidingmenu.example  \nAPP 示例：Foursquare, LinkedIn, Zappos, Rdio, Evernote Food, Plume, VLC for Android, ESPN ScoreCenter, MLS MatchDay, 9GAG, Wunderlist 2, The Verge, MTG Familiar, Mantano Reader, Falcon Pro (BETA), MW3 Barracks  \n\n1. ArcMenu  \n支持类似 Path 的左下角动画旋转菜单及横向划出菜单、圆心弹出菜单  \n项目地址：https://github.com/daCapricorn/ArcMenu  \nhttps://dl.dropboxusercontent.com/u/11369687/preview1.png  \nhttps://dl.dropboxusercontent.com/u/11369687/raymenu.png  \nAPP 示例：Path  \n\n1. android-satellite-menu  \n类似 Path 的左下角动画旋转菜单  \n项目地址：https://github.com/siyamed/android-satellite-menu  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/satellite-menu-demo.apk?raw=true  \nAPP 示例：Path  \n\n1. radial-menu-widget  \n圆形菜单，支持二级菜单  \n项目地址：https://code.google.com/p/radial-menu-widget/  \n\n1. Android Wheel Menu  \n圆形旋转选取菜单  \n项目地址：https://github.com/anupcowkur/Android-Wheel-Menu  \n\n1. FoldingNavigationDrawer  \n滑动并以折叠方式打开菜单  \n项目地址：https://github.com/tibi1712/FoldingNavigationDrawer-Android  \nDemo 地址：https://play.google.com/store/apps/details?id=com.ptr.folding.sample  \n\n1. AndroidResideMenu  \n仿 Dribbble 的边栏菜单  \n项目地址：https://github.com/SpecialCyCi/AndroidResideMenu  \n\n1. CircularFloatingActionMenu  \n一个可定制的圆形的浮动菜单控件，类似于 Path 的圆形菜单。这个控件的可定制性更强，可以很容易的定制菜单出现消失时的动画，起始角度和半径。  \n项目地址：https://github.com/oguzbilgener/CircularFloatingActionMenu  \n原理剖析文档：[CircularFloatingActionMenu](http://a.codekk.com/detail/Android/cpacm/CircularFloatingActionMenu 源码解析)  \nDemo 地址：https://github.com/oguzbilgener/CircularFloatingActionMenu/tree/master/samples  \n\n1. NavigationDrawerSI  \nNavigation Drawer 的一个简单实现，滑动并以折叠方式打开菜单  \n项目地址：https://github.com/mmBs/NavigationDrawerSI  \nDemo 地址：https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi  \nAPP 示例：https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi  \n\n1. DragLayout  \n使用 support.v4 包下的 ViewDragHelper 实现 QQ5.0 侧滑  \n项目地址：https://github.com/BlueMor/DragLayout  \n\n1. LDrawer  \nMaterial Design 形式的展开折叠 Icon  \n项目地址：https://github.com/ikimuhendis/LDrawer  \n\n1. Floating Action Button  \n悬浮的圆形菜单栏，支持组建滚动时自动隐藏及其他设置  \n项目地址：https://github.com/shamanland/floating-action-button  \n\n1. Side-Menu.Android  \n分类侧滑菜单，[Yalantis](http://yalantis.com/) 出品。  \n项目地址：https://github.com/Yalantis/Side-Menu.Android  \n原理剖析文档：[Side-Menu.Android](http://a.codekk.com/detail/Android/cpacm/Side Menu.Android 源码解析)  \n\n1. Context-Menu.Android  \n可以方便快速集成漂亮带有动画效果的上下文菜单，[Yalantis](http://yalantis.com/)出品。  \n项目地址：https://github.com/Yalantis/Context-Menu.Android  \n\n1. Droppy  \n支持多种样式的下拉菜单  \n项目地址：https://github.com/shehabic/Droppy  \n\n1. MaterialDrawer  \nMaterial Design 风格的导航抽屉，提供简便且强大的定制功能  \n项目地址：https://github.com/mikepenz/MaterialDrawer  \nDemo 地址：https://play.google.com/store/apps/details？id=com.mikepenz.materialdrawer.app  \n\n1. SlideBottomPanel  \n底部划出菜单，滑动时背景图透明度渐变，支持嵌套 LiewView 或 ScrollView  \n项目地址：[https://github.com/kingideayou/SlideBottomPanel](https://github.com/kingideayou/SlideBottomPanel)  \nDemo 地址：[SlideBottomPanelDemo 下载](https://github.com/kingideayou/SlideBottomPanel/raw/master/apk/SlideBottomPanelDemo.apk)  \n\n1. FlowingDrawer  \n带手势流动效果侧滑菜单\n项目地址：[https://github.com/mxn21/FlowingDrawer](https://github.com/mxn21/FlowingDrawer)\n\n### 四、ViewPager 、Gallery\n1. AdvancedPagerSlidingTabStrip   \n一个完美兼容ViewPager的导航栏组件；可以自定义TabView；能动态加载Tab上的Icon图片； 能显示Tab的消息数量和提示小圆点。  \n项目地址：https://github.com/HomHomLin/AdvancedPagerSlidingTabStrip\n\n1. ConvenientBanner  \n通用的广告栏控件，让你轻松实现广告头效果。支持无限循环，可以设置自动翻页和时间(而且非常智能，手指触碰则暂停翻页，离开自动开始翻页。你也可以设置在界面onPause的时候不进行自动翻页，onResume之后继续自动翻页)，并且提供多种翻页特效。 对比其他广告栏控件，大多都需要对源码进行改动才能加载网络图片，或者帮你集成不是你所需要的图片缓存库。而这个库能让有代码洁癖的你欢喜，不需要对库源码进行修改你就可以使用任何你喜欢的网络图片库进行配合。\n项目地址：https://github.com/saiwu-bigkoo/Android-ConvenientBanner  \n\n1. Android-ViewPagerIndicator  \n配合 ViewPager 使用的 Indicator，支持各种位置和样式  \n项目地址：https://github.com/JakeWharton/Android-ViewPagerIndicator  \nDemo 地址：https://play.google.com/store/apps/details?id=com.viewpagerindicator.sample  \nAPP 示例：太多了。。  \n\n1. JazzyViewPager  \n支持 Fragment 切换动画的 ViewPager，动画包括转盘、淡入淡出、翻页、层叠、旋转、方块、翻转、放大缩小等，效果类似桌面左右切换的各种效果，不过桌面并非用 ViewPager 实现而已  \n项目地址：https://github.com/jfeinstein10/JazzyViewPager  \nDemo 地址：https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true  \n\n1. JellyViewPager  \n特殊切换动画的 ViewPager  \n项目地址：https://github.com/chiemy/JellyViewPager  \n\n1. Android-DirectionalViewPager  \n支持横向和纵向(垂直)的 ViewPager  \n项目地址：https://github.com/JakeWharton/Android-DirectionalViewPager  \nDemo 地址：https://market.android.com/details?id=com.directionalviewpager.sample  \n\n1. FancyCoverFlow  \n支持 Item 切换动画效果的类似 Gallery View  \n项目地址：https://github.com/davidschreiber/FancyCoverFlow  \nDemo 地址：https://play.google.com/store/apps/details?id=at.technikum.mti.fancycoverflow.samples  \n\n1. AndroidTouchGallery  \n支持双击或双指缩放的 Gallery(用 ViewPager 实现)，相比下面的 PhotoView，在被放大后依然能滑到下一个 item，并且支持直接从 url 和文件中获取图片，  \n项目地址：https://github.com/Dreddik/AndroidTouchGallery  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/touch-gallery-demo.apk?raw=true  \nAPP 示例：类似微信中查看聊天记录图片时可双击放大，并且放大情况下能正常左右滑动到前后图片  \n\n1. Android Auto Scroll ViewPager  \nAndroid 自动滚动 轮播循环的 ViewPager  \n项目地址：https://github.com/Trinea/android-auto-scroll-view-pager  \nDemo 地址：https://play.google.com/store/apps/details?id=cn.trinea.android.demo  \n文档介绍：http://www.trinea.cn/android/auto-scroll-view-pager/  \n\n1. Android PagerSlidingTabStrip  \n配合 ViewPager 使用的 Indicator，支持 ViewPager Scroll 时 Indicator 联动  \n项目地址：https://github.com/astuetz/PagerSlidingTabStrip  \n原理剖析文档：[Android PagerSlidingTabStrip](http://a.codekk.com/detail/Android/ayyb1988/PagerSlidingTabStrip 源码解析)  \nDemo 地址：https://play.google.com/store/apps/details?id=com.astuetz.viewpager.extensions.sample  \n\n1. ViewPager3D  \nViewPager3D 效果  \n项目地址：https://github.com/inovex/ViewPager3D  \n\n1. AnimaTabsview  \n仿网易云音乐标签切换的动画,带透明小三角  \n项目地址：https://github.com/wuyexiong/transparent-over-animtabsview  \n在线演示：http://v.youku.com/v_show/id_XNzA4MjY5NjA0.html  \n\n1. LoopingViewPager  \n无限循环的 ViewPager  \n项目地址：https://github.com/imbryk/LoopingViewPager  \n\n1. android_page_curl  \n翻书卷曲效果  \n项目地址：https://github.com/harism/android_page_curl  \n在线演示：https://www.youtube.com/watch?v=iwu7P5PCpsw  \nAPP 示例：iReader  \n\n1. ViewPagerIndicator  \n简化并实现 android 的 TabHost 效果，顶部滑动 tab，引导页，支持自定义 tab 样式,自定义滑动块样式和位置,自定义切换 tab 的过渡动画,子界面的预加载和界面缓存,设置界面是否可滑动  \n项目地址：https://github.com/LuckyJayce/ViewPagerIndicator  \n\n1. ScreenSlideIndicator  \n轻量级的圆形 Indicadtor，位置可以自由调整，不会对 ViewPager 产生任何影响。  \n项目地址：[ScreenSlidePager](https://github.com/LyndonChin/Android-ScreenSlidePager)  \n\n1. SmartTabLayout  \n自定义的 Tab title strip，基于 Google Samples 中的 android-SlidingTabBasic 项目，滑动时 Indicator 可平滑过渡。  \n项目地址：https://github.com/ogaclejapan/SmartTabLayout  \nDemo 地址：https://play.google.com/store/apps/details?id=com.ogaclejapan.smarttablayout.demo  \n\n1. AndroidImageSlider  \nAndroid 图片滑动  \n项目地址：https://github.com/daimajia/AndroidImageSlider  \nApp示例：https://github.com/daimajia/AndroidImageSlider/releases/download/v1.0.8/demo-1.0.8.apk  \n\n1. RecyclerViewPager  \n完全继承自 RecyclerView，可以自定义触发翻页的距离，可自定义翻页速度，支持垂直方向的 ViewPager，支持 Fragment。  \n项目地址：[RecyclerViewPager](https://github.com/lsjwzh/RecyclerViewPager)  \n\n1. CircleIndicator  \n轻量级ViewPager指示器,支持三种不同的模式    \n项目地址：[CircleIndicator]( https://github.com/THEONE10211024/CircleIndicator)  \n\n1. EasySlidingTabs  \n一款简单、易用的滑动标签页  \n项目地址： https://github.com/CaMnter/EasySlidingTabs  \n\n### 五、GridView\n1. StaggeredGridView  \n允许非对齐行的 GridView，类似 Pinterest 的瀑布流，并且跟 ListView 一样自带 View 缓存，继承自 ViewGroup  \n项目地址：https://github.com/maurycyw/StaggeredGridView  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/staggered-gridview-demo.apk?raw=true  \nAPP 示例：Pinterest 等  \n\n1. AndroidStaggeredGrid  \n允许非对齐行的 GridView，类似 Pinterest 的瀑布流，继承自 AbsListView  \n项目地址：https://github.com/etsy/AndroidStaggeredGrid  \nAPP 示例：Pinterest 等  \n\n1. PinterestLikeAdapterView  \n允许非对齐行的 GridView，类似 Pinterest 的瀑布流，允许下拉刷新  \n项目地址：https://github.com/GDG-Korea/PinterestLikeAdapterView  \nAPP 示例：Pinterest 等  \n\n1. DraggableGridView  \nItem 可拖动交换位置的 GridView，实际是自己继承 ViewGroup 实现，类似桌面的单屏效果，可屏幕自动上下滚动进行 Item 移动交换，多屏效果见下面 PagedDragDropGrid  \n项目地址：https://github.com/thquinn/DraggableGridView  \nDemo 地址：https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true  \n也可以自定义item的宽高和每行的个数，并且修改交换逻辑，当移动到另一个item时就进行交换，删除滚动逻辑。\n项目地址：[DraggableGridView](https://github.com/andyken/DraggableGridView)  \n\n1. StickyGridHeaders  \nGroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 GridView  \n项目地址：https://github.com/TonicArtos/StickyGridHeaders  \n\n1. PagedDragDropGrid  \nItem 可拖动交换位置、拖动删除的自定义控件，实际是自己继承 ViewGroup 实现，类似桌面的多屏效果，可拖动到屏幕边缘，屏幕自动左右滚动进行 Item 移动交换，可拖动进行删除，单屏效果见上面 DraggableGridView  \n项目地址：https://github.com/mrKlar/PagedDragDropGrid  \n在线演示：http://youtu.be/FYTSRfthSuQ  \n\n1. Android-DraggableGridViewPager  \nItem 可拖动交换位置的 GridView，实际是自己继承 ViewGroup 实现，类似桌面的多屏效果，可屏幕自动左右滚动进行 Item 移动交换，单屏效果见上面 DraggableGridView  \n项目地址：https://github.com/zzhouj/Android-DraggableGridViewPager  \nDemo 地址：https://github.com/Trinea/trinea-download/blob/master/draggable-grid-viewpager-demo.apk?raw=true  \n\n1. TwoWayGridView  \n可横向滚动的 GridView  \n项目地址：https://github.com/jess-anders/two-way-gridview  \n\n1. PagingGridView  \n分页加载的 GridView。当滑动到 GridView 底部最后一个行时，显示一个进度行，然后加载下一页数据，并显示。  \n项目地址：https://github.com/nicolasjafelle/PagingGridView  \n\n1. AsymmetricGridView  \n一个支持跨行和跨列可变 Item 大小的 GridView  \n项目地址：https://github.com/felipecsl/AsymmetricGridView  \nDemo 地址：https://play.google.com/store/apps/details?id=com.felipecsl.asymmetricgridview.app  \n\n1. GridView with Header and Footer  \n和`ListView`一样带头部和底部的`GridView`，用法和`ListView`一样  \n项目地址：https://github.com/liaohuqiu/android-GridViewWithHeaderAndFooter  \n\n### 六、ImageView\n1. PhotoView  \n支持双击或双指缩放的 ImageView，在 ViewPager 等 Scrolling view 中正常使用，相比上面的 AndroidTouchGallery，不仅支持 ViewPager，同时支持单个 ImageView  \n项目地址：https://github.com/chrisbanes/PhotoView  \n原理剖析文档：[PhotoView](http://a.codekk.com/detail/Android/dkmeteor/PhotoView 源码解析)  \nDemo 地址：https://play.google.com/store/apps/details?id=uk.co.senab.photoview.sample  \nAPP 示例：photup  \n\n1. Fresco-ImageView  \nFresco-ImageView是一种Android平台的图像控件，底层是对Fresco的封装，可以异步加载网络图片、项目资源和本地图片，并且支持双指缩放、图片的基本处理以及Fresco的所有特性。  \n项目地址：https://github.com/HomHomLin/FrescoImageView。  \n\n1. android-gif-drawable  \n支持 gif 显示的 view，用 jni 实现的，编译生成 so 库后直接 xml 定义 view 即可，而且本身不依赖于其他开源项目所以相对下面的 ImageViewEx 简单的多  \n项目地址：https://github.com/koral--/android-gif-drawable  \n\n1. ImageViewEx  \n支持 Gif 显示的 ImageView，依赖很多，编译过程很繁琐  \n项目地址：https://github.com/frapontillo/ImageViewEx  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/imageviewex-demo.apk?raw=true  \n\n1. RoundedImageView  \n带圆角的 ImageView  \n项目地址：https://github.com/vinc3m1/RoundedImageView  \n\n1. SelectableRoundedImageView  \nImageView 允许四个角的每一个有不同的半径值。也允许椭圆形、圆形的形状或者边  \n项目地址：https://github.com/pungrue26/SelectableRoundedImageView  \nDemo 地址：https://play.google.com/store/apps/details?id=com.joooonho  \n\n1. ColorArt  \n根据图片的均色设置背景色显示文字和图片，类似 itune11 中效果  \n项目地址：https://github.com/MichaelEvans/ColorArt  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/color-art-demo.apk?raw=true  \n\n1. CircleImageView  \n圆形的 ImageView  \n项目地址：https://github.com/hdodenhof/CircleImageView  \n\n1. ImageViewZoom  \n支持放大和平移的 ImageView  \n项目地址：https://github.com/sephiroth74/ImageViewZoom  \nAPP 示例：https://play.google.com/store/apps/details?id=com.aviary.android.feather  \n\n1. KenBurnsView  \n实现 Ken Burns effect 效果，达到身临其境效果的 ImageView  \n项目地址：https://github.com/flavioarfaria/KenBurnsView  \n\n1. CustomShapeImageView  \n各种形状的 ImageView, 相比上面的圆形 ImageView，多了更多形状  \n项目地址：https://github.com/MostafaGazar/CustomShapeImageView  \n\n1. Shape Image View  \n可以自定义各种形状的 ImageView, 并且支持边框  \n项目地址：https://github.com/siyamed/android-shape-imageview  \n\n1. TextDrawable  \n一个用于生成带有文本或者字母的图片的轻量级库。扩展自 Drawable，因此可用于现有/自定义/网络等 ImageView 类，并且包含一个流接口用于创建 drawables 以及一个定制的 ColorGenerator  \n项目地址：https://github.com/amulyakhare/TextDrawable  \n\n1. android-smart-image-view  \n可从 URL 或 contact address book 加载图片的 ImageView，支持缓存  \n项目地址：https://github.com/loopj/android-smart-image-view  \n\n1. PhotoView  \n支持双指/双击缩放的ImageView,支持从一个PhotoView缩放到另外一个PhotoView(点击图片放大预览),相对于其他PhototView有更加平滑的缩放,平移的动画,并且支持所有的ScaleType,可以作为普通的ImageView使用  \n项目地址：https://github.com/bm-x/PhotoView  \n\n### 七、ProgressBar\n1. SmoothProgressBar  \n水平进度条  \n项目地址：https://github.com/castorflex/SmoothProgressBar  \nDemo 地址：https://play.google.com/store/apps/details?id=fr.castorflex.android.smoothprogressbar.sample  \n\n1. MaterialProgessBar  \nMaterial Design 的进度条，支持 Android 4.0  \n项目地址：https://github.com/DreaminginCodeZH/MaterialProgressBar  \nDemo 地址：https://github.com/DreaminginCodeZH/MaterialProgressBar/blob/master/dist/sample.apk  \n\n1. ProgressWheel  \n支持进度显示的圆形 ProgressBar  \n项目地址：https://github.com/Todd-Davies/ProgressWheel  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/progress-wheel-demo.apk?raw=true  \n\n1. android-square-progressbar  \n在图片周围显示进度  \n项目地址：https://github.com/mrwonderman/android-square-progressbar  \nDemo 地址：https://play.google.com/store/apps/details?id=net.yscs.android.square_progressbar_example  \nAPP 示例：square  \n\n1. HoloCircularProgressBar  \nAndroid4.1 时钟 App 样式  \n项目地址：https://github.com/passsy/android-HoloCircularProgressBar  \nAPP 示例：Android4.1 时钟 App  \n\n1. ProgressButton  \n通过图钉的不同状态显示进度  \n项目地址：https://github.com/f2prateek/progressbutton  \n文档介绍：http://f2prateek.com/progressbutton/  \n\n1. GoogleProgressBar  \n类似 google 多个圆形卡片翻转的 progressBar  \n项目地址：https://github.com/jpardogo/GoogleProgressBar  \n\n1. TH-ProgressButton  \n带圆形进度显示的按钮  \n项目地址：https://github.com/torryharris/TH-ProgressButton  \n\n1. NumberProgressBar  \n带数字进度的进度条  \n项目地址：https://github.com/daimajia/NumberProgressBar  \n\n1. CircularProgressDrawable  \n带圆形进度显示的进度条  \n项目地址：https://github.com/Sefford/CircularProgressDrawable  \n\n1. Android-RoundCornerProgressBar  \nAndroid 圆角 ProgressBar，可自定义圆角颜色和半径，包括带 Icon 和不带 Icon 两种类型。  \n项目地址：https://github.com/akexorcist/Android-RoundCornerProgressBar  \n\n1. circular-progress-button  \n带进度显示的 Button  \n项目地址：https://github.com/dmytrodanylyk/circular-progress-button  \n\n1. WaveView  \n一个波纹效果的 View，可用来做 ProgressBar  \n项目地址：https://github.com/john990/WaveView  \nDemo 地址：https://raw.github.com/john990/WaveView/master/screenshot%26apk/demo.unaligned.apk  \n\n1. MaterialLoadingProgressBar  \n抽取自 SwipeRefreshLayout 的 Material Design 进度指示器  \n项目地址：https://github.com/lsjwzh/MaterialLoadingProgressBar  \n\n1. MetaballLoading  \nA 2d metaball loading\n项目地址：https://github.com/dodola/MetaballLoading\n\n1. SectorProgressView  \n一个圆形或环形的进度显示控件，用圆中扇形的角度大小来表示进度信息\n项目地址：https://github.com/timqi/SectorProgressView\nDemo：[apk download](https://github.com/timqi/SectorProgressView/raw/master/art/example.apk) \n\n1. CircularFillableLoaders  \n一个可以用于闪屏或者其他地方加载的控件\n项目地址：https://github.com/lopspower/CircularFillableLoaders\nDemo地址：(https://play.google.com/store/apps/details?id=com.mikhaellopez.circularfillableloaderssample) \n\n1. PinWheel  \n一个旋转的大风车Dialog \n项目地址：https://github.com/codingWang/PinWheel\n\n1. ColorArcProgressBar\n一个可定制的圆形进度条，通过xml参数配置可实现QQ健康中步数的弧形进度显示、仪盘表显示速度、最常见的下载进度条等功能。\n项目地址：https://github.com/Shinelw/ColorArcProgressBar\n\n### 八、TextView\n包括 TextView 及所有继承自 TextView 控件，如 EditText、Button、RadioButton  \n\n1. android-flowtextview  \n文字自动环绕其他 View 的 Layout  \n项目地址：https://github.com/deano2390/FlowTextView  \n\n1. Android Form EditText  \n验证输入合法性的编辑框，支持输入、英文、ip、url 等多种正则验证  \n项目地址：https://github.com/vekexasia/android-edittext-validator  \nDemo 地址：https://play.google.com/store/apps/details?id=com.andreabaccega.edittextformexample  \n\n1. Emojicon  \n支持 emojis 的 TextView 和 EditText  \n项目地址：https://github.com/rockerhieu/emojicon  \n文档介绍：http://rockerhieu.com/emojicon/  \n\n1. android-circlebutton  \nAndroid 圆形按钮，实际实现是继承自 ImageView  \n项目地址：https://github.com/markushi/android-circlebutton  \nDemo 地址：https://github.com/markushi/android-circlebutton/blob/master/example/example.apk  \n\n1. Segmented Radio Buttons for Android  \niOS’s segmented controls 的实现  \n项目地址：https://github.com/vinc3m1/android-segmentedradiobutton  \nDemo 地址：https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true  \n\n1. Chips EditText Library  \n支持国家名字联想从而选择显示该国国旗的 EditText，实际就是通过 SpannableStringBuilder 实现  \n项目地址：https://github.com/kpbird/chips-edittext-library  \nDemo 地址：https://github.com/kpbird/chips-edittext-library/tree/master/ChipsEditTextDemo/bin  \n\n1. AutoFitTextView  \n可固定边界内容字体大小自适应的 TextView  \n项目地址：https://github.com/grantland/android-autofittextview  \n\n1. Shimmer for Android  \n文字发淡光的 TextView  \n项目地址：https://github.com/RomainPiel/Shimmer-android  \n\n1. Titanic  \n可以显示水位上升下降(不知道该怎么描述 囧)的 TextView  \n项目地址：https://github.com/RomainPiel/Titanic  \n\n1. android-iconify  \n提供带 Icon 的 TextView,Menu,Button 等  \n项目地址：https://github.com/JoanZapata/android-iconify  \n\n1. Calligraphy  \n让我们在 android 开发中使用自定义字体变得更加简单  \n项目地址：https://github.com/chrisjenx/Calligraphy  \n\n1. CreditsRoll  \n类似星球大战字幕效果的 TextView  \n项目地址：https://github.com/frakbot/CreditsRoll  \n\n1. android-process-buton  \n带加载或提交进度的 Button  \n项目地址：https://github.com/dmytrodanylyk/android-process-buton  \n\n1. FButton  \n扁平化的 Button  \n项目地址：https://github.com/hoang8f/android-flat-button  \nDemo 地址：https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo  \n\n1. FloatingActionButton  \n一个类似 Android 版 Google+浮动功能按钮的控件，可以响应 ListView 的滚动事件。当列表向上滚动的时候会自动显示，向下滚动的时候自动隐藏。  \n项目地址：https://github.com/makovkastar/FloatingActionButton  \nDemo 地址：https://github.com/makovkastar/FloatingActionButton/tree/master/  \n\n1. Android Saripaar  \nAndroid 表单验证  \n项目地址：https://github.com/ragunathjawahar/android-saripaar/  \n\n1. JumpingBeans  \n文字像 Mexican beans 一样跳动  \n项目地址：https://github.com/frakbot/JumpingBeans  \nDemo 地址：http://play.google.com/store/apps/details?id=net.frakbot.jumpingbeans.demo  \n\n1. FancyButtons  \n一个不用图片就可以帮助我们创建出漂亮按钮的库。  \n项目地址：https://github.com/medyo/fancybuttons  \nDemo 地址：https://github.com/medyo/fancybuttons/tree/master/samples  \n\n1. Android-RobotoTextView  \n一个实现了所有 Roboto 字体的 TextView，包括新出的 Roboto Slab 字体。  \n项目地址：https://github.com/johnkil/Android-RobotoTextView  \nDemo 地址：http://play.google.com/store/apps/details?id=com.devspark.robototextview  \nDemo 项目：https://github.com/johnkil/Android-RobotoTextView/tree/master/robototextview-sample  \n\n1. Android-WizardPager  \n一个表单向导库  \n项目地址：https://github.com/romannurik/android-wizardpager  \nDemo 项目：https://github.com/str4d/android-wizardpager/tree/textfield  \n\n1. RippleView  \n一个实现了 Android L 上才引入的点击按钮后出现水波纹效果的按钮  \n项目地址：https://github.com/siriscac/RippleView  \nDemo 项目：https://github.com/siriscac/RippleView/tree/master/RippleViewExample  \n\n1. RippleEffect  \n一个实现 Material Design Ripple 效果的库，支持 Android API 9+以上版本。  \n项目地址：https://github.com/traex/RippleEffect  \nDemo 项目：https://github.com/traex/RippleEffect/tree/master/sample  \n\n1. RippleCompat\n使用易于移植的方式为UI控件实现波纹效应，可以适配控件原背景及Palette支持。api简单，可自定义效果，兼容至Android API 7+。\n项目地址：https://github.com/desmond1121/RippleCompat\nDemo 项目：https://github.com/desmond1121/RippleCompat/tree/master/app\n\n1. Android Floating Label Widgets  \n包含一系列控件，这些控件特点是：有默认值，当值不为空时默认值浮动到上面变为提示  \n项目地址：https://github.com/marvinlabs/android-floatinglabel-widgets  \nDemo 地址：https://play.google.com/store/apps/details?id=com.marvinlabs.widget.floatinglabel.demo  \n在线演示：http://www.youtube.com/watch?v=hpZD9gJcRg0&feature=youtu.be  \n\n1. MaterialEditText  \nEditText 的 Material Design 实现。包含 [Google Material Design Spec](http://www.google.com/design/spec/components/text-fields.html)中的 UI 效果和一些新增特性。  \n项目地址：https://github.com/rengwuxian/MaterialEditText  \n\n1. MaterialEditText  \n实现 [Material Design](http://www.google.com/design/spec/components/text-fields.html) 中 Ripple 效果线条背景的 EditText。直接替换原生 EditText 即可集成。  \n项目地址：https://github.com/DreamingInCodeZH/MaterialEditText    \n\n1. MultiActionTextView  \n可以分别给 TextView 中的某几个字设置点击事件的 TextView  \n项目地址：https://github.com/ajaysahani/MultiActionTextView  \n\n1. ToggleButton  \n状态切换的 Button，类似 iOS，用 View 实现  \n项目地址：https://github.com/zcweng/ToggleButton  \n\n1. SwitchButton  \n状态切换的 Button，类似 iOS，拥有良好的用户界面  \n项目地址：https://github.com/kyleduo/SwitchButton  \n\n1. SlideSwitch  \n状态切换的开关，可以设置为类似 IOS 的圆形，也可以设置为矩形，用 View 实现  \n项目地址：https://github.com/Leaking/SlideSwitch  \n\n1. ExpandableTextView  \n可展开和收缩内容的 TextView。  \n项目地址：https://github.com/Manabu-GT/ExpandableTextView  \n\n1. TagCloudView(支持 SingleLine 模式的标签云)  \n标签云效果，只需要一行代码即可设置为 SingleLine 模式，轻松实现知乎问题话题列表效果。SingleLine 模式时末尾文字及图片可自定义。\n项目地址：https://github.com/kingideayou/TagCloudView  \n示例APK地址：https://github.com/kingideayou/TagCloudView/raw/master/apk/Demo.apk  \nAPP示例：知乎  \n\n1. BubbleTextView \nAndroid Bubble View \n项目地址：https://github.com/dupengtao/BubbleTextView \n\n1. shadow-layout\nAndroid Shadow Layout\n解决了`CardView`：1.不能画圆的阴影。2.设置阴影的位置。3.设置阴影颜色。\n项目地址：https://github.com/dmytrodanylyk/shadow-layout\n\n### 九、ScrollView\n1. Discrollview  \n支持滚动时 Item 淡入淡出，平移，缩放效果的 ScrollView  \n项目地址：https://github.com/flavienlaurent/discrollview  \nDemo 地址：https://github.com/flavienlaurent/discrollview/raw/master/sample.apk  \n\n1. PullScrollView  \n仿照新浪微博 Android 客户端个人中心的 ScrollView，下拉背景伸缩回弹效果。  \n项目地址：https://github.com/MarkMjw/PullScrollView  \n\n1. ArcLayout  \n一个非常简单的弧布局库  \n项目地址：https://github.com/ogaclejapan/ArcLayout  \nDemo 地址：https://play.google.com/store/apps/details?id=com.ogaclejapan.arclayout.demo  \n\n1. ParallaxScrollView  \n支持视差滚动的 ScrollView ，背景图片的滚动速度小于 ScrollView 中子控件的滚动速度  \n项目地址：https://github.com/chrisjenx/ParallaxScrollView  \nDemo 地址：http://cloud.github.com/downloads/chrisjenx/ParallaxScrollView/ParallaxScrollViewDemo-v1.0.5.apk  \n\n1. AKParallax-Android  \n支持视差滚动的 ScrollView  \n项目地址：https://github.com/ideaismobile/AKParallax-Android  \nDemo 地址：https://play.google.com/store/apps/details?id=com.appkraft.parallax_sample  \n\n1. Android-ObservableScrollView  \n监听滚动视图滚动事件的库，帮助与 Toolbar 的交互动效处理与 Material Design 的实现  \n项目地址：https://github.com/ksoichiro/Android-ObservableScrollView  \nDemo 地址：https://play.google.com/store/apps/details?id=com.github.ksoichiro.android.observablescrollview.samples2  \n\n1. OverScrollView  \n有弹性的 ScrollView，实现了当手指滑动到 ScrollView 的顶部、底部时，可以继续的向上、向下拉伸。当释放手指的时候，向上、下回弹  \n项目地址：https://github.com/EverythingMe/OverScrollView  \n\n### 十、TimeView\n包括 TimePicker、DatePicker、CalendarView、Clock 等时间相关控件  \n\n1. android-times-square  \nAndroid 日历时间部件，支持选取单个日期，多个日期，及日期区间段和对话框形式显示  \n项目地址：https://github.com/square/android-times-square  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/times-square-demo.apk?raw=true  \n\n1. android-calendar-card  \n日历  \n项目地址：https://github.com/kenumir/android-calendar-card  \nDemo 地址：https://play.google.com/store/apps/details?id=com.wt.calendarcardsample  \n\n1. AndroidWheel  \nAndroid Wheel 支持城市、多种日期时间、密码、图片  \n项目地址：https://code.google.com/p/android-wheel/  \n\n1. GoogleDateTimePickers  \n时间选择部件  \n项目地址：https://github.com/Mirkoddd/GoogleDateTimePickers  \n文档介绍：https://play.google.com/store/apps/details?id=com.mirko.sample&hl=it  \n\n1. DateTimePicker  \n日期选择部件(Google Agenda 的样式风格)  \n项目地址：https://github.com/flavienlaurent/datetimepicker  \nDemo 地址：https://raw.github.com/biboune/datetimepicker/master/datetimepicker-sample.apk  \n\n1. android-betterpickers  \n提供日期、数字、时间（数字方式和钟表方式）、重复周期（闹钟的周期重复）、HMS（时、分、秒）的选择，支持以 DialogFragment 的弹窗选择  \n项目地址：https://github.com/derekbrameyer/android-betterpickers  \nDemo 地址：https://play.google.com/store/apps/details?id=com.doomonafireball.betterpickers.sample  \n\n1. Android Week View  \n日期控件，支持周，天视图，支持自定义样式  \n项目地址：https://github.com/alamkanak/Android-Week-View  \n\n1. PickerView  \n仿 iOS 的 PickerView 控件，有时间选择和选项选择并支持一二三级联动效果，TimePopupWindow 时间选择器，支持年月日时分，年月日，时分等格式；OptionsPopupWindow 选项选择器，支持一，二，三级选项选择，并且可以设置是否联动  \n项目地址：https://github.com/saiwu-bigkoo/Android-PickerView  \n\n1. CountdownView  \nAndroid 倒计时控件，使用Canvas绘制，支持多种样式  \n项目地址：https://github.com/iwgang/CountdownView  \n\n### 十一、TipView\n包括 Toast、角标、UndoBar 等提示性控件  \n\n1. SVProgressHUD \nSVProgressHUD For Android 精仿iOS的提示库 SVProgressHUD，api也几乎一样。  \n项目地址：https://github.com/saiwu-bigkoo/Android-SVProgressHUD  \n\n1. Crouton  \n丰富样式的 Toast，允许 alert、comfirm、info 样式及点击消失样式，允许设置 Toast 显示时间，允许自定义 View。 本文 32. SuperToasts 为其扩展版  \n项目地址：https://github.com/keyboardsurfer/Crouton  \nDemo 地址：http://play.google.com/store/apps/details?id=de.keyboardsurfer.app.demo.crouton  \n\n1. supertooltips  \n带动画效果的 Tips 显示  \n项目地址：https://github.com/nhaarman/supertooltips  \nDemo 地址：https://play.google.com/store/apps/details?id=com.haarman.supertooltips  \n\n1. Android ViewBadger  \n为其他 View 添加角标（消息圆点）等  \n项目地址：https://github.com/jgilfelt/android-viewbadger  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/android-viewbadger.apk?raw=true  \n\n1. SuperToasts  \n更丰富样式的 toast，支持 Button、Progress、Horizontal Progress 样式、支持进入动画、支持撤销及其动画设置  \n项目地址：https://github.com/JohnPersano/SuperToasts  \nDemo 地址：https://play.google.com/store/apps/details?id=com.supertoastsdemo  \n\n1. UndoBar  \n屏幕底部显示取消或是确认的 PopupWindows  \n项目地址：https://github.com/soarcn/UndoBar  \n\n1. UndoBar  \n屏幕底部显示取消或是确认某操作  \n项目地址：https://github.com/jenzz/Android-UndoBar  \n\n1. Android-ActionItemBadge  \n可以在 ActionBar 的 MenuItem 上显示一个小角标  \n项目地址：https://github.com/mikepenz/Android-ActionItemBadge  \n\n1. SnackBar  \nMaterial Design 风格的 Toast，类似 Google inbox 中的提示  \n项目地址：https://github.com/MrEngineer13/SnackBar  \nDemo 地址：https://play.google.com/store/apps/details?id=com.mrengineer13.snackbar.sample  \n\n1. HeadsUp  \n在 2.3 上使用 android  5.0 的 HeadsUp 效果  \n项目地址：https://github.com/zzz40500/HeadsUp  \n\n### 十二、FlipView\n1. android-flip  \n类似 Flipboard 翻转动画的实现  \n项目地址：https://github.com/openaphid/android-flip  \nDemo 地址：https://github.com/openaphid/android-flip/blob/master/FlipView/Demo/APK/Aphid-FlipView-Demo.apk?raw=true  \nAPP 示例：flipboard  \n\n1. FlipImageView  \n支持 x、y、z 及动画选择的翻转动画的实现  \n项目地址：https://github.com/castorflex/FlipImageView  \nDemo 地址：https://play.google.com/store/apps/details?id=fr.castorflex.android.flipimageview  \n\n1. FoldableLayout  \nFlip 翻转效果的 ListView，目前还不支持 ListView 缓存  \n项目地址：https://github.com/alexvasilkov/FoldableLayout  \nDemo 地址：http://play.google.com/store/apps/details?id=com.alexvasilkov.foldablelayout.sample  \n\n1. FlipViewPager.Draco  \nFlip 翻转效果的 ViewPager  \n项目地址：https://github.com/Yalantis/FlipViewPager.Draco  \n\n### 十三、ColorPickView\n1. ColorPickerView  \n颜色选择器，支持 PopupWindows 或新的 Activity 中打开  \n项目地址：https://code.google.com/p/color-picker-view/  \n\n1. HoloColorPicker  \n颜色选择器  \n项目地址：https://github.com/LarsWerkman/HoloColorPicker  \nDemo 地址：https://docs.google.com/file/d/0BwclyDTlLrdXRzVnTGJvTlRfU2s/edit  \n\n1. ColorPickerPreference  \n颜色选择器  \n项目地址：https://github.com/attenzione/android-ColorPickerPreference  \n\n1. ColorPicker  \n颜色选择器（Google Agenda 中的样式风格）  \n项目地址：https://github.com/flavienlaurent/colorpicker  \nDemo 地址：https://raw.github.com/biboune/colorpicker/master/colorpicker-sample.apk  \n\n### 十四、GraphView\n1. MPAndroidChart  \n强大的图表绘制工具，支持折线图、面积图、散点图、时间图、柱状图、条图、饼图、气泡图、圆环图、范围（高至低）条形图、网状图等；支持图的拖拽缩放；支持 Android 2.2 以上，支持横纵轴缩放，多指缩放，展现动画、高亮、保存到 sdcard、从文件读取图表  \n项目地址：https://github.com/PhilJay/MPAndroidChart  \nDemo 地址：https://play.google.com/store/apps/details?id=com.xxmassdeveloper.mpchartexample  \nDemo 项目：https://github.com/PhilJay/MPAndroidChart/tree/master/MPChartExample  \n在线演示：https://www.youtube.com/watch?v=ufaK_Hd6BpI  \n\n1. achartengine  \n强大的图表绘制工具，支持折线图、面积图、散点图、时间图、柱状图、条图、饼图、气泡图、圆环图、范围（高至低）条形图、拨号图/表、立方线图及各种图的结合  \n项目地址：https://code.google.com/p/achartengine/  \n官网网址：http://www.achartengine.org/  \nAPP 示例：Wordpress Android，Google Analytics  \n\n1. GraphView  \n绘制图表和曲线图的 View，可用于 Android 上的曲形图、柱状图、波浪图展示  \n项目地址：https://github.com/jjoe64/GraphView  \nDemo 项目：https://github.com/jjoe64/GraphView-Demos  \nAPP 示例：Wordpress Android，Google Analytics  \n\n1. HoloGraphLibrary  \n绘制现状图、柱状图、饼状图  \n项目地址：https://bitbucket.org/danielnadeau/holographlibrary/src  \n文档介绍：https://bitbucket.org/danielnadeau/holographlibrary/wiki/Home  \n\n1. XCL-Charts  \nXCL-Charts 基于原生的 Canvas 来绘制各种图表,在设计时，尽量在保证开发效率的同时，给使用者提供足够多的定制化能力。因此使用简便,同时具有相当灵活的定制能力。目前支持 3D/非 3D 柱形图(Bar Chart)、3D/非 3D 饼图(Pie Chart)、堆积图(Stacked Bar Chart)、面积图(Area Chart)、 折线图(Line Chart)、曲线图(Spline Chart)、环形图(Dount Chart)、南丁格尔玫瑰图(Rose Chart)、仪表盘(Dial Chart)、刻度盘(Gauge Chart)、雷达图(Radar Chart)、圆形图(Circle Chart)等图表。其它特性还包括支持图表缩放、手势移动、动画显示效果、高密度柱形显示、图表分界定制线、多图表的混合显示及同数据源不同类型图表切换等。  \n项目地址：https://github.com/xcltapestry/XCL-Charts  \nDemo 地址：https://github.com/xcltapestry/XCL-Charts/blob/master/XCL-Charts-demo/bin/XCL-Charts-demo.apk?raw=true  \n\n1. EazeGraph  \nAndroid 图表库，支持柱状图、分层柱状图、饼状图、线性图  \n项目地址：https://github.com/blackfizz/EazeGraph  \nDemo 地址：https://play.google.com/store/apps/details?id=org.eazegraph.app  \n\n1. WilliamChart  \n绘制图表的库，支持 LineChartView、BarChartView 和 StackBarChartView 三中图表类型，并且支持 Android 2.2 及以上的系统。  \n项目地址：https://github.com/diogobernardino/WilliamChart  \nDemo 地址：https://play.google.com/store/apps/details?id=com.db.williamchartdemo  \nDemo 项目：https://github.com/diogobernardino/WilliamChart/tree/master/sample  \n\n1. HelloCharts for Android  \n支持折线图、柱状图、饼图、气泡图、组合图；支持预览、放大缩小，滚动，部分图表支持动画；支持 Android 2.2 以上  \n项目地址：https://github.com/lecho/hellocharts-android  \nDemo 地址：https://play.google.com/store/apps/details?id=lecho.lib.hellocharts.samples  \n在线演示：https://www.youtube.com/watch?v=xbSBjyjH2SY  \n\n1. PieChartView  \n比较简单直接的饼状统计报表图，使用方便，设置相应的属性参数即可  \n项目地址：https://github.com/wuseal/PieChartView  \nDemo 地址：https://github.com/wuseal/PieChartView  \n\n### 十五、UI Style\n不同样式的系统 UI 风格，如 IOS、Bootstrap 风格  \n\n1. UITableView  \nios 风格控件，包括 Button、ListView、TableView  \n项目地址：https://github.com/thiagolocatelli/android-uitableview  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/ui-tableview-demo.apk?raw=true  \n\n1. ATableView  \nios 风格控件  \n项目地址：https://github.com/dmacosta/ATableView  \nDemo 地址：https://play.google.com/store/apps/details?id=com.nakardo.atableview.demo  \n\n1. Cards-UI  \n卡片式 View，支持单个卡片，item 为卡片的 ListView  \n项目地址：https://github.com/afollestad/Cards-UI  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/cards-ui-demo.apk?raw=true  \n\n1. cardslib  \n卡片式 View，支持单个卡片，item 为卡片的 ListView 和 GridView  \n项目地址：https://github.com/gabrielemariotti/cardslib  \nDemo 地址：https://play.google.com/store/apps/details?id=it.gmariotti.cardslib.demo  \n\n1. Android-Bootstrap  \nBootstrap 风格的按钮  \n项目地址：https://github.com/Bearded-Hen/Android-Bootstrap  \n\n1. Material Design Android Library  \nAndroid L 中 Material Design 风格的组件适配到 Android 2.2+  \n项目地址：https://github.com/navasmdc/MaterialDesignLibrary  \n\n1. Android FlatUI  \nAndroid 扁平化风格的组件，支持一些自定义样式  \n项目地址：https://github.com/eluleci/FlatUI  \n\n1. cheesesquare  \n全新 Android 设计库演示 Demo，包括 Collapsing Toolbar、FloatingActionButton、View anchoring、NavigationView、Snackbar  \n项目地址：https://github.com/chrisbanes/cheesesquare  \n\n### 十六、其他\n1. SnappingStepper   \n一种漂亮的UI控件，能更灵活的控制数字的增减。可用于购物车商品数量控制。  \n项目地址：https://github.com/saiwu-bigkoo/Android-SnappingStepper  \n\n1. SwipeBackLayout  \n左右或向上滑动返回的 Activity  \n项目地址：https://github.com/Issacw0ng/SwipeBackLayout  \nDemo 地址：https://play.google.com/store/apps/details?id=me.imid.swipebacklayout.demo  \nAPP 示例：知乎  \n\n1. android-styled-dialogs  \n可自定义样式的 dialog，默认与 Holo 主题样式一致，在 Android2.2 以上同一样式  \n项目地址：https://github.com/inmite/android-styled-dialogs  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/styled-dialogs-demo.apk?raw=true  \n\n1. Android Sliding Up Panel  \n可拖动的 View，能在当前 Activity 上扶起一个可拖动的 Panel  \n项目地址：https://github.com/umano/AndroidSlidingUpPanel  \nDemo 地址：https://play.google.com/store/apps/details?id=com.sothree.umano  \nAPP 示例：Google Music 精简播放栏  \n\n1. TableFixHeaders  \n第一列固定的 Table  \n项目地址：https://github.com/InQBarna/TableFixHeaders  \nDemo 地址：http://bit.ly/13buAIq  \n\n1. Inscription  \n可用于展示应用 change 和 new feature 信息  \n项目地址：https://github.com/MartinvanZ/Inscription  \n\n1. ActivityTransition  \nActivity 切换动画，包括渐变、flip、某个位置进入等等  \n项目地址：https://github.com/ophilbert/ActivityTransition  \n文档介绍：https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true  \n\n1. EasyAndroidAnimations  \n针对 View 的各种动画  \n项目地址：https://github.com/2359media/EasyAndroidAnimations  \n\n1. ViewAnimation    \n对android view 动画进行封装,实现起更简单，自带三种常见运动路径，其他的可自定义  \n项目地址：https://github.com/guohuanwen/ViewAniamtion  \nAPP 示例：QQ名片圈圈效果  \n\n1. AndroidLoadingAnimation  \n多种android加载动画  \n项目地址：https://github.com/guohuanwen/AndroidLoadingAnimation  \n\n1. android-lockpattern  \nAndroid 的图案密码解锁  \n项目地址：https://code.google.com/p/android-lockpattern/  \n原理剖析文档：[android-lockpattern](http://a.codekk.com/detail/Android/爱早起/Android Lock Pattern 源码解析)  \nDemo 地址：https://play.google.com/store/apps/details?id=group.pals.android.lib.ui.lockpattern.demo  \n文档介绍：https://code.google.com/p/android-lockpattern/wiki/QuickUse  \nAPP 示例：Android 开机的图案密码解锁，支付宝的密码解锁  \n\n1. PatternLock  \n另一个 Android 图案解锁库  \n项目地址：https://github.com/DreaminginCodeZH/PatternLock  \nDemo 地址：https://github.com/DreaminginCodeZH/PatternLock/raw/master/dist/sample.apk  \nAPP 示例：Android 开机的图案密码解锁，支付宝的密码解锁  \n\n1. RangeBar  \n类似于 SeekBar，不同的是可以选择一个范围内的值而不是单个值  \n项目地址：https://github.com/edmodo/range-bar  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/range-bar-demo.apk?raw=true  \n\n1. ChromeView  \n利用 Chromium 实现的 WebView，解决各个 Android 版本 WebView 不同的问题，同时利用最新 Chrome 代码  \n项目地址：https://github.com/pwnall/chromeview  \n\n1. android-phased-seek-bar  \n支持预先定义状态的 SeekBar  \n项目地址：https://github.com/ademar111190/android-phased-seek-bar  \n\n1. Android Slider Preference Library  \n可添加到设置中的基于对话框的 RankBar 小部件  \n项目地址：https://github.com/jayschwa/AndroidSliderPreference  \n\n1. ShowcaseView library  \n用于高亮显示应用程序的特定部分，从而突出突出重点  \n项目地址：https://github.com/amlcurran/ShowcaseView  \n\n1. android-segmented-control  \nAndroid 上的 Segmented Controls，相当于 RadioButton 组  \n项目地址：https://github.com/hoang8f/android-segmented-control  \n\n1. Swipeable Cards  \n类似 Tinder 的卡片效果，可以加载图片并动画效果展示，向左滑动表示喜欢，向右表示不喜欢  \n项目地址：https://github.com/kikoso/Swipeable-Cards  \nDemo 地址：https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo  \n\n1. EdgeEffectOverride  \n改变 ScrollView, ListView, ExpandableListView, GridView, ViewPager 等滚动控件滚动到边缘的颜色效果  \n项目地址：https://github.com/AndroidAlliance/EdgeEffectOverride  \n\n1. android-pinned-header-listviews  \n使 ExpandListView 的 Group 滑动到顶端时会固定不动直到另外一个 Group 到达顶端  \n项目地址：https://github.com/rtyley/android-pinned-header-listviews  \n\n1. AndroidSwipeLayout  \n滑动 Layout，支持单个 View，ListView，GridView  \n项目地址：https://github.com/daimajia/AndroidSwipeLayout  \nDemo 地址：[Download Demo](https://github.com/daimajia/AndroidSwipeLayout/releases/download/v1.0.0/AndroidSwipeLayout-Demo-1.0.1-snapshot.apk)  \n\n1. DynamicCardLayout  \n在 Android 中实现的类似 Windows8 的瓷片布局  \n项目地址：https://github.com/dodola/DynamicCardLayout  \n\n1. Emoticons-Keyboard  \n带表情情符号的自定义键盘  \n项目地址：https://github.com/chiragjain/Emoticons-Keyboard  \n\n1. Android Typeface Helper  \n可以帮你轻松实现自定义字体的库  \n项目地址：https://github.com/norbsoft/android-typeface-helper  \n\n1. Android-Anim-Playground  \n几个动画效果，其中第二个基于 android-svg 的绘制效果非常好  \n项目地址：https://github.com/Tibolte/Android-Anim-Playground  \n\n1. AlertView \n仿iOS的AlertViewController 几乎完美还原iOS 的 AlertViewController ，同时支持Alert和ActionSheet模式，每一个细节都是精雕细琢，并把api封装成懒到极致模式，一行代码就可以进行弹窗.  \n项目地址：https://github.com/saiwu-bigkoo/Android-AlertView  \n\n1. NiftyDialogEffects  \n支持自定义飞入动画样式的 Dialog  \n项目地址：https://github.com/sd6352051/NiftyDialogEffects  \n在线演示：http://tympanus.net/Development/ModalWindowEffects/  \n\n1. PostOffice  \n创建 Holo 及 Material Design 样式的 Dialog  \n项目地址：https://github.com/r0adkll/PostOffice  \n\n1. Swipecards  \n类似 Tinder 的卡片效果，可以加载图片并动画效果展示，向左滑动表示喜欢，向右表示不喜欢，根据 Kikoso's Swipeable-Cards 改造而来  \n项目地址：https://github.com/Diolor/Swipecards  \n\n1. SeekArc  \n圆形的 SeekBar  \n项目地址：https://github.com/TriggerTrap/SeekArc  \n\n1. BlurDialogFragment  \n显示  DialogFragment 时背景模糊效果  \n项目地址：https://github.com/tvbarthel/BlurDialogFragment  \nDemo 地址：https://play.google.com/store/apps/details?id=fr.tvbarthel.lib.blurdialogfragment.sample  \n\n1. range-seek-bar  \n随机值选取的 SeekBar  \n项目地址：https://github.com/yahoo/android-range-seek-bar  \n\n1. MaterialRangeBar  \n可以选择一个范围内的值而不是单个值的 SeekBar，RangeBar 的 Material Design 风格适配  \n项目地址：https://github.com/oli107/material-range-bar  \n\n1. MaterialList  \nMaterial Design 风格的 CardView  \n项目地址：https://github.com/dexafree/MaterialList  \nDemo 地址：https://play.google.com/store/apps/details?id=com.dexafree.materiallistviewexample  \n\n1. road-trip  \n设置 path 的各种动画效果，以及如何实现复杂路径动画，类似于 ios 中的指纹注册界面的指纹动画效果  \n项目地址：https://github.com/romainguy/road-trip  \n\n1. dialogplus  \n一个简单的 Android 对话框，支持不同的弹出模式  \n项目地址：https://github.com/orhanobut/dialogplus  \n\n1. FlowLayout  \n一个简单的流式布局，用法类似 LinearLayout，但是能够让子元素根据宽度自动换行  \n项目地址：[FLowLayout](https://github.com/LyndonChin/AndroidFlowLayout)  \n\n1. CircleSeekbar  \n一个环形Seekbar组件,支持叠加复合使用  \n项目地址：[CircleSeekbar](https://github.com/feeeei/CircleSeekbar)  \n\n1. FinestWebView  \n美麗的和可定制的Android的活動，顯示在一個應用程序的網頁。  \n项目地址: https://github.com/TheFinestArtist/FinestWebView-Android  \nSample 地址: https://play.google.com/store/apps/details?id=com.thefinestartist.finestwebview.sample  \n\n1. YouTubePlayerActivity  \n只需通過一個URL來在新的活動播放YouTube視頻。它支持屏幕方向，媒體音量控制等。  \n项目地址: https://github.com/TheFinestArtist/YouTubePlayerActivity  \nSample 地址: https://play.google.com/store/apps/details?id=com.thefinestartist.ytpa.sample  \n\n1. material-camera  \nmaterial风格的camera。能使camera使用起来更简单的库。  \n项目地址：https://github.com/afollestad/material-camera   \n\n1. material-dialogs  \n各种material风格的dialog。\n漂亮的的、易于使用的和可定制的Dialog API，你能够使用Material designed风格的Dialog到API 8。  \n项目地址：https://github.com/afollestad/material-dialogs   \nSample地址：https://github.com/afollestad/material-dialogs/blob/master/sample/sample.apk  \n  \n1. NotifyUtil  \n最常见的通知样式库  \n项目地址:https://github.com/wenmingvs/NotifyUtil  \ndemo地址：https://github.com/wenmingvs/NotifyUtil#notifydemo  \n\n1. CanPhotos\n使用fresco选取多张图片并可预览图片  \n项目地址：https://github.com/canyinghao/CanPhotos   \n\n1. CanDialog\n仿照系统Dialog所写，继承于FrameLayout，添加一些动画，一些显示类型。  \n项目地址：https://github.com/canyinghao/CanDialog  \n\n## 第二部分 工具库\n主要包括那些不错的开发库，包括依赖注入框架、图片缓存、网络请求、数据库 ORM 建模、Android 公共库、Android 高版本向低版本兼容、多媒体相关及其他。  \n\n### 一、依赖注入 DI\n通过依赖注入减少 View、服务、资源简化初始化，事件绑定等重复繁琐工作  \n\n1. AndroidAnnotations(Code Diet)  \nandroid 快速开发框架  \n项目地址：https://github.com/excilys/androidannotations  \n文档介绍：https://github.com/excilys/androidannotations/wiki  \n官网网址：http://androidannotations.org/  \n特点：(1) 依赖注入：包括 view，extras，系统服务，资源等等  \n(2) 简单的线程模型，通过 annotation 表示方法运行在 ui 线程还是后台线程  \n(3) 事件绑定：通过 annotation 表示 view 的响应事件，不用在写内部类  \n(4) REST 客户端：定义客户端接口，自动生成 REST 请求的实现  \n(5) 没有你想象的复杂：AndroidAnnotations 只是在在编译时生成相应子类  \n(6) 不影响应用性能：仅 50kb，在编译时完成，不会对运行时有性能影响。  \n其他：与 roboguice 的比较：roboguice 通过运行时读取 annotations 进行反射，所以可能影响应用性能，而 AndroidAnnotations 在编译时生成子类，所以对性能没有影响  \n\n1. roboguice  \n帮你处理了很多代码异常，利用 annotation 使得更少的代码完成项目  \n项目地址：https://github.com/roboguice/roboguice  \n文档介绍：https://github.com/roboguice/roboguice/wiki  \n\n1. butterknife  \n利用 annotation 帮你快速完成 View 的初始化，减少代码  \n项目地址：https://github.com/JakeWharton/butterknife  \n文档介绍：http://jakewharton.github.io/butterknife/  \n\n1. Dagger  \n依赖注入，适用于 Android 和 Java  \n项目地址：https://github.com/square/dagger  \n原理剖析文档：[Dagger](http://a.codekk.com/detail/Android/扔物线/Dagger 源码解析)  \n文档介绍：http://square.github.io/dagger/  \n\n1. AutoParcel  \n注解自动生成Parcelable实现代码的库     \n项目地址：https://github.com/frankiesardo/auto-parcel    \n这篇文章详细介绍了它的使用方法：[AutoParcel](https://passy.svbtle.com/simpler-android-apis-with-autoparcel)     \n作者认为使用AutoParcel的好处是，可以简化构造函数，方便IDE代码自动完成，方便测试，前向兼容，生成不可变的对象。      \n文档介绍：https://github.com/frankiesardo/auto-parcel\n\n\n\n### 二、图片缓存\n1. Android-Universal-Image-Loader  \n图片缓存，目前使用最广泛的图片缓存，支持主流图片缓存的绝大多数特性。  \n项目地址：https://github.com/nostra13/Android-Universal-Image-Loader  \n原理剖析文档：[Android-Universal-Image-Loader](http://a.codekk.com/detail/Android/huxian99/Android Universal Image Loader 源码分析)  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/universal-imageloader-demo.apk?raw=true  \n文档介绍：http://www.intexsoft.com/blog/item/74-universal-image-loader-part-3.html  \n\n1. picasso  \nsquare 开源的图片缓存  \n项目地址：https://github.com/square/picasso  \n文档介绍：http://square.github.io/picasso/  \n特点：(1)可以自动检测 adapter 的重用并取消之前的下载  \n(2)图片变换  \n(3)可以加载本地资源  \n(4)可以设置占位资源  \n(5)支持 debug 模式  \n\n1. Cube ImageLoader  \n阿里巴巴一淘使用的图片加载，综合了 Android-Universal-Image-Loader 和 square 等组件优点，简单易用，良好的中文文档支持  \n项目地址：https://github.com/etao-open-source/cube-sdk  \nDemo 地址：https://github.com/liaohuqiu/cube-sdk/raw/master/cube-sdk-sample.apk  \n文档介绍：http://cube-sdk.liaohuqiu.net/  \n\n1. fresco  \n一款强大的图片缓存工具，由 Facebook 开发  \n项目地址：https://github.com/facebook/fresco  \n文档介绍：http://frescolib.org/  \n特点：(1) 两个内存缓存加上磁盘缓存构成了三级缓存  \n(2) 支持流式，可以类似网页上模糊渐进式显示图片  \n(3) 对多帧动画图片支持更好，如 Gif、WebP  \n(4) 更多样的显示，如圆角、进度条、点击重试、自定义对焦点  \n(5) 更多样的加载，如支持 EXIF、全面支持 WebP  \n(6) 支持 Android 2.3+  \n\n1. Glide  \nGlide 是一个 android 平台上的快速和高效的开源的多媒体资源管理库,提供 多媒体文件的压缩,内存和磁盘缓存, 资源池的接口。  \n它可以最大性能地在 Android 设备上读取、解码、显示图片和视频。Glide 可以将远程的图片、视频、动画图片等缓存在设备本地便于提高用户浏览图片的流畅体验。  \n项目地址：https://github.com/bumptech/glide  \n特点：  \n(1) GIF 动画的解码  \n(2) 本地视频剧照的解码  \n(3) 支持缩略图  \n(4) Activity 生命周期的集成  \n(5) 转码的支持  \n(6) 动画的支持  \n(7) OkHttp 和 Volley 的支持  \n\n### 三、网络请求\n1. Volley  \nGoogle 提供的网络通信库，使得网络请求更简单、更快速  \n项目地址：https://android.googlesource.com/platform/frameworks/volley  \n文档介绍：http://commondatastorage.googleapis.com/io-2013/presentations/110%20-%20Volley-%20Easy,%20Fast%20Networking%20for%20Android.pdf  \n\n1. Asynchronous Http Client for Android  \nAndroid 异步 Http 请求  \n项目地址：https://github.com/loopj/android-async-http  \n文档介绍：http://loopj.com/android-async-http/  \n特点：(1) 在匿名回调中处理请求结果  \n(2) 在 UI 线程外进行 http 请求  \n(3) 文件断点上传  \n(4) 智能重试  \n(5) 默认 gzip 压缩  \n(6) 支持解析成 Json 格式  \n(7) 可将 Cookies 持久化到 SharedPreferences  \n\n1. android-query  \n异步加载，更少代码完成 Android 加载  \n项目地址：https://github.com/androidquery/androidquery 或 https://code.google.com/p/android-query/  \nDemo 地址：https://play.google.com/store/apps/details?id=com.androidquery  \n文档介绍：https://code.google.com/p/android-query/#Why_AQuery?  \n特点：https://code.google.com/p/android-query/#Why_AQuery?  \n\n1. Async Http Client  \nJava 异步 Http 请求  \n项目地址：https://github.com/AsyncHttpClient/async-http-client  \n文档介绍：http://sonatype.github.io/async-http-client/  \n\n1. Ion  \n支持图片、json、http post 等异步请求  \n项目地址：https://github.com/koush/ion  \n文档介绍：https://github.com/koush/ion#more-examples  \n\n1. Http Request  \n项目地址：https://github.com/kevinsawicki/http-request  \n文档介绍：https://github.com/kevinsawicki/http-request#examples  \n\n1. okhttp  \nsquare 开源的 http 工具类  \n项目地址：https://github.com/square/okhttp  \n文档介绍：http://square.github.io/okhttp/  \n特点：(1) 支持 SPDY( http://zh.wikipedia.org/wiki/SPDY )协议。SPDY 协议是 Google 开发的基于传输控制协议的应用层协议，通过压缩，多路复用(一个 TCP 链接传送网页和图片等资源)和优先级来缩短加载时间。  \n(2) 如果 SPDY 不可用，利用连接池减少请求延迟  \n(3) Gzip 压缩  \n(4) Response 缓存减少不必要的请求  \n\n1. Retrofit  \nRESTFUL API 设计  \n项目地址：https://github.com/square/retrofit  \n文档介绍：http://square.github.io/retrofit/  \n\n1. RoboSpice  \nAndroid 异步网络请求工具，支持缓存、REST 等等  \n项目地址：https://github.com/stephanenicolas/robospice  \nDemo 地址：https://github.com/stephanenicolas/RoboDemo/downloads  \n\n1. TwistVolley  \nTwistVolley 是对 Volley 的一个封装库。提供类似 Picasso 一样的串联式 API。使得使用 Volley 更加方便。  \n项目地址：https://github.com/TwistedEquations/TwistVolley  \n\n### 四、数据库 orm 工具包\norm 的 db 工具类，简化建表、查询、更新、插入、事务、索引的操作 \n\n1. greenDAO  \nAndroid Sqlite orm 的 db 工具类  \n项目地址：https://github.com/greenrobot/greenDAO  \n文档介绍：http://greendao-orm.com/documentation/  \n官网网址：http://greendao-orm.com/  \n特点：(1) 性能佳  \n(2) 简单易用的 API  \n(3) 内存小好小  \n(4) 库大小小  \n\n1. GreenDaoUpgradeHelper  \ngreenDAO的数据库升级帮助类，只需一行代码解决数据库升级  \n项目地址：https://github.com/yuweiguocn/GreenDaoUpgradeHelper\n\n1. ActiveAndroid  \nAndroid Sqlite orm 的 db 工具类  \n项目地址：https://github.com/pardom/ActiveAndroid  \n文档介绍：https://github.com/pardom/ActiveAndroid/wiki/_pages  \n\n1. Sprinkles  \nAndroid Sqlite orm 的 db 工具类，比较显著的特点就是配合 https://github.com/square/retrofit 能保存从服务器获取的数据  \n项目地址：https://github.com/emilsjolander/sprinkles  \n文档介绍：http://emilsjolander.github.io/blog/2013/12/18/android-with-sprinkles/  \n\n1. Realm  \n移动端的数据库，适用于 Phone、Tablet、Wearable，支持 ORM，线程安全、支持连表及数据库加密，比 SQLite 性能更好  \n项目地址：https://github.com/realm/realm-java  \n文档介绍：http://realm.io/docs/java/0.72.0/  \n\n1. ormlite-android  \n项目地址：https://github.com/j256/ormlite-android  \n文档介绍：http://ormlite.com/sqlite_java_android_orm.shtml  \n\n1. Schematic  \n根据 SQLite 生成 ContentProvider  \n项目地址：https://github.com/SimonVT/schematic  \n\n1. DBFlow  \nAndroid SQLite ORM 工具库。综合了 Active Android, Schematic, Ollie,Sprinkles 等库的优点；通过注解实现，性能好；能生成 ContentProvider。  \n项目地址：https://github.com/Raizlabs/DBFlow  \n文档介绍：https://github.com/Raizlabs/DBFlow#usage-docs  \n\n1. SnappyDB\nSnappyDB是一个key-value数据库，非常流行的NoSQL数据库。\n项目地址：https://github.com/nhachicha/SnappyDB\n演示Demo：https://play.google.com/store/apps/details?id=com.snappydb.snippets.app\n\n### 五、Android 公共库\n1. Guava  \nGoogle 的基于 java1.6 的类库集合的扩展项目，包括 collections, caching, primitives support, concurrency libraries, common annotations, string processing, I/O 等等. 这些高质量的 API 可以使你的 JAVa 代码更加优雅，更加简洁  \n项目地址：https://code.google.com/p/guava-libraries/  \n文档介绍：https://code.google.com/p/guava-libraries/wiki/GuavaExplained  \n\n1. AndroidCommon  \nAndroid 公共库  \n项目地址：https://github.com/Trinea/AndroidCommon  \nDemo 地址：https://play.google.com/store/apps/details?id=cn.trinea.android.demo  \n文档介绍：http://www.trinea.cn/android/android-common-lib/  \n包括：a. ImageCache 图片缓存，包含内存和 Sdcard 缓存  \nhttp://www.trinea.cn/android/android-imagecache/  \n特点：(1)支持预取新图片，支持等待队列  \n(2)包含二级缓存，可自定义文件名保存规则  \n(3)可选择多种缓存算法(FIFO、LIFO、LRU、MRU、LFU、MFU 等 13 种)或自定义缓存算法  \n(4)可方便的保存及初始化恢复数据  \n(5)支持不同类型网络处理  \n(6)可根据系统配置初始化缓存等  \n\n1. HttpCache Http 缓存  \n文档介绍：http://www.trinea.cn/android/android-http-cache  \n特点是：(1) 根据 cache-control、expires 缓存 http 请求  \n(2) 支持同步、异步 Http 请求  \n(3) 在匿名回调中处理请求结果  \n(4) 在 UI 线程外进行 http 请求  \n(5) 默认 gzip 压缩  \n(2) 公共 View(下拉及底部加载更多 ListView、底部加载更多 ScrollView、滑动一页 Gallery)  \n(3) Android 常用工具类(网络、下载、Android 资源操作、shell、文件、Json、随机数、Collection 等等)  \n\n1. DropDownListView 下拉刷新及滑动到底部加载更多 ListView  \n文档介绍：http://www.trinea.cn/android/dropdown-to-refresh-and-bottom-load-more-listview/  \n\n1. shipfaster  \n整合了 Dagger Otto Retrofit Robolectric Picasso OkHttp，方便快速开发  \n项目地址：https://github.com/pyricau/shipfaster  \n\n1. CleanAndroidCode  \n整合了 Dagger Otto AndroidAnnotations，方便快速开发  \n项目地址：https://github.com/pyricau/CleanAndroidCode  \n\n1. xUtils  \n基于 Afinal，包含 DbUtils、ViewUtils、HttpUtils、BitmapUtils 四大模块，可用于快速开发  \n项目地址：https://github.com/wyouflf/xUtils  \n原理剖析文档：[xUtils](http://a.codekk.com/detail/Android/Caij/xUtils 源码解析)  \n\n1. Afinal  \nAfinal 是一个 android 的 ioc，orm 框架，内置了四大模块功能：FinalAcitivity,FinalBitmap,FinalDb,FinalHttp。通过 finalActivity，我们可以通过注解的方式进行绑定 ui 和事件。通过 finalBitmap，我们可以方便的加载 bitmap 图片，而无需考虑 oom 等问题。通过 finalDB 模块，我们一行代码就可以对 android 的 sqlite 数据库进行增删改查。通过 FinalHttp 模块，我们可以以 ajax 形式请求 http 数据  \n项目地址：https://github.com/yangfuhai/afinal  \n官网网址：http://www.afinal.org  \n\n1. UltimateAndroid  \nUltimateAndroid 是一个快速开发 Android 应用的框架，框架目前主要包含的功能有 View Injection,ORM,异步网络请求和图片加载，自动化脚本测试,磁盘 LRU 等功能.同时提供了类似于 TripleDes、Webview 快速设置、Md5 处理、String 处理,Https 处理等常用工具类，还有超过 100 多种 UI 控件效果。  \n项目地址：https://github.com/cymcsg/UltimateAndroid  \n官网网址：http://blog.marshalchen.com/UltimateAndroid/  \n\n1. SAF  \nSAF(Simple Android Framework)是一个简单的 android 框架，它为开发 Android app 提供了基础性组件。  \n项目地址：https://github.com/fengzhizi715/SAF  \n官网网址：http://www.salesuite.cn/  \n包括：(1)Event Bus(事件总线)  \n(2) Rest Client(http 的框架)  \n(3) Image Cache(图片缓存)  \n(4) Dependency Injection(依赖注入)  \n(5) Sqlite ORM(sqlite 的 orm)  \n(6) Router(Activity、Fragment 的 Router)  \n(7) Utils(各种常用的工具类)  \n\n1. Barber  \nCustom View 神器。通过简单的注解帮助你大大减少 Custom View 中的代码量。由于和 ButterKnife 一样使用了 Annotation Proccessor ，所以对程序性能没有影响。  \n项目地址：https://github.com/hzsweers/barber  \n\n1. device-year-class  \nA library that analyzes an Android device's specifications and calculates which year the device would be considered \"high end”.(facebook 开发的检测手机主流配置工具)  \n项目地址：https://github.com/facebook/device-year-class  \n\n1. RxAndroid   \n对RxJava在Android上的扩展，使得Android上也很容易实现reactive components，简化线程操作，从而写出很漂亮的代码。   \n项目地址：https://github.com/ReactiveX/RxAndroid   \n文档介绍：[给Android 开发者的 RxJava 详解](http://gank.io/post/560e15be2dca930e00da1083)  \n\n1. MultiImageSelector   \n一个本地图片选择器，支持图片的单选和多选，直接返回所选图片的路径。   \n项目地址：https://github.com/lovetuzitong/MultiImageSelector.git \n\n### 六、Android 高版本向低版本兼容\n1. Nine Old Androids  \n将 Android 3.0(Honeycomb)所有动画 API(ObjectAnimator ValueAnimator 等)兼容到 Android1.0  \n项目地址：https://github.com/JakeWharton/NineOldAndroids  \n原理剖析文档：[Nine Old Androids](http://a.codekk.com/detail/Android/Mr.Simple/NineOldAnimations 源码解析)  \nDemo 地址：https://play.google.com/store/apps/details?id=com.jakewharton.nineoldandroids.sample  \n文档介绍：http://nineoldandroids.com/  \n\n1. HoloEverywhere  \n将 Android 3.0 的 Holo 主题兼容到 Android2.1++  \n项目地址：https://github.com/Prototik/HoloEverywhere  \nDemo 地址：https://raw.github.com/Prototik/HoloEverywhere/repo/org/holoeverywhere/demo/2.1.0/demo-2.1.0.apk  \n文档介绍：http://android-developers.blogspot.com/2012/01/holo-everywhere.html  \n\n1. SherlockNavigationDrawer  \n将 Android NavigationDrawer 和 ActionbarSherlock 结合，解决 4.0 以下 NavigationDrawer 的适配问题  \n项目地址：https://github.com/tobykurien/SherlockNavigationDrawer  \n文档介绍：http://developer.android.com/training/implementing-navigation/nav-drawer.html  \n\n1. Notifications4EveryWhere  \n将 Android 4.1 的 Notification 兼容到 Android2.2++  \n项目地址：https://github.com/youxiachai/Notifications4EveryWhere  \n\n1. Android Switch Widget Backport  \n将 Android Switch 和 SwitchPreference 的兼容到 Android2.1++  \n项目地址：https://github.com/BoD/android-switch-backport  \nDemo 地址：https://play.google.com/store/apps/details?id=org.jraf.android.backport.switchwidget.sample  \n文档介绍：https://github.com/BoD/android-switch-backport#using-the-switch  \n\n1. android-datepicker  \n将 Android 4.0 的 datepicker 兼容到 Android2.2++  \n项目地址：https://github.com/SimonVT/android-datepicker  \n\n1. Transitions Everywhere  \nAndroid 4.4 的 Transitions API 兼容到 Android 2.2 以上  \n项目地址：https://github.com/andkulikov/transitions-everywhere  \n\n1. KShareViewActivityManager  \n一个兼容Android 5.0 以下Shared Element Transition （页面间共享元素位移动画）库  \n项目地址：https://github.com/kot32go/KShareViewActivityManager  \n\n### 七、多媒体相关\n1. cocos2d-x  \n跨平台的 2d 游戏框架，支持 Android、IOS、Linux、Windows 等众多平台  \n项目地址：https://github.com/cocos2d/cocos2d-x  \n文档介绍：http://www.cocos2d-x.org/wiki  \n官网网址：http://www.cocos2d-x.org/  \n\n1. JustWeEngine  \nAndroid的轻量级游戏框架，能大大缩减编写原生游戏的代码量和难度，仍在持续更新中。  \n项目地址: https://github.com/lfkdsk/JustWeEngine  \nDemo地址: https://github.com/lfkdsk/EngineDemo  \n\n1. Vitamio  \n是一款 Android 与 iOS 平台上的全能多媒体开发框架  \n项目地址：https://github.com/yixia/VitamioBundle  \n网站介绍：http://www.vitamio.org/docs/  \n特点：(1) 全面支持硬件解码与 GPU 渲染  \n(2) 能够流畅播放 720P 甚至 1080P 高清 MKV，FLV，MP4，MOV，TS，RMVB 等常见格式的视频  \n(3) 在 Android 与 iOS 上跨平台支持 MMS, RTSP, RTMP, HLS(m3u8)等常见的多种视频流媒体协议，包括点播与直播。 \n\n1. VDPlayerSDK  \n最容易集成的开源播放器组件，支持直播，支持软硬解切换，支持清晰度切换  \n项目地址：https://github.com/SinaVDDeveloper/  \nDemo 地址：https://github.com/SinaVDDeveloper/demo  \n文档介绍：https://github.com/SinaVDDeveloper/sinavideo_playersdk  \n特点：  \n(1) 使用自定义控件方式提供播放器UI，不需要视频相关知识，能编写android应用就能使用  \n(2) 软硬解切换、点播直播支持  \n(3) 解码内核小于4M，更方便集成到非专业视频app中  \n(4) 修正一些vitaimio的问题，比如m3u8可以拖动等等\n\n1. VideoPlayerManager  \n帮助实现VideoPlayer控制，使得它更容易使用ListView和recyclerview。它还可以跟踪滚动列表中可见的项。当列表中的新项可见域最大时，该库给出了接口来跟踪它。  \n项目地址：https://github.com/danylovolokh/VideoPlayerManager  \n文档介绍：https://medium.com/@v.danylo/implementing-video-playback-in-a-scrolled-list-listview-recyclerview-d04bc2148429#.hs5n0geqn  \n\n1. UniversalVideoView  \nAndroid上定义播放器控件,支持自定义控制UI, 全屏播放, 重力感应自动切换横竖屏.  \n项目地址：https://github.com/linsea/UniversalVideoView  \n\n1. PhotoProcessing  \n利用 ndk 处理图片库，支持 Instafix、Ansel、Testino、XPro、Retro、BW、Sepia、Cyano、Georgia、Sahara、HDR、Rotate(旋转)、Flip(翻转)等各种特效  \n项目地址：https://github.com/lightbox/PhotoProcessing  \nDemo 地址：https://github.com/Trinea/TrineaDownload/blob/master/photo-processing.apk?raw=true  \n\n1. Android StackBlur  \n图片模糊效果工具类  \n项目地址：https://github.com/kikoso/android-stackblur  \nDemo 地址：https://github.com/kikoso/android-stackblur/blob/master/StackBlurDemo/bin/StackBlurDemo.apk?raw=true  \n文档介绍：https://github.com/kikoso/android-stackblur#usage  \n\n1. Bitmap Smart Clipping using OpenCV  \n图片智能裁剪保留重要部分显示  \n项目地址：https://github.com/beartung/tclip-android  \n利用淘宝的 http://code.taobao.org/p/tclip/ 库完成  \n一淘玩客正在使用的图片裁剪，自动识别图片中的重要区域，并且在图片裁剪时保留重要区域  \n特点：(1). 能进行人脸识别。图片中有人脸，将自动视为人脸区域为重要区域，将不会被裁剪掉  \n(2).自动其它重要区域。如果图片中未识别出人脸，则会根据特征分布计算出重区域  \n\n1. Cropper  \n图片局部剪切工具，可触摸控制选择区域或旋转  \n项目地址：https://github.com/edmodo/cropper  \n文档介绍：https://github.com/edmodo/cropper/wiki  \n\n1. uCrop  \nYalantis 出品的强大的图片裁剪库 ，支持缩放，旋转图片，支持各种比例的裁剪框  \n项目地址：https://github.com/Yalantis/uCrop  \n\n1. android-crop  \n图片裁剪 Activity\n项目地址：https://github.com/jdamcd/android-crop  \n\n1. TileView  \n可分块显示大图，支持 2D 拖动、双击、双指放大、双指捏合  \n项目地址：https://github.com/moagrius/TileView  \nDemo 地址：http://moagrius.github.io/TileView/TileViewDemo.apk  \n\n1. BlurEffectForAndroidDesign  \n图片模糊效果  \n项目地址：https://github.com/PomepuyN/BlurEffectForAndroidDesign  \n\n1. android-eye  \nPC 端网页查看同一局域网内的手机摄像头内容，可以用来监控哦  \n项目地址：https://github.com/Teaonly/android-eye  \nDemo 地址：https://play.google.com/store/apps/details?id=teaonly.droideye  \n\n1. libpng for Android  \nPNG 图片的 jni 库，支持几乎 png 的所有特性  \n项目地址：https://github.com/julienr/libpng-android  \n文档介绍：http://www.libpng.org/pub/png/libpng.html  \n\n1. android-gpuimage  \n基于 GPU 的图片滤镜  \n项目地址：https://github.com/CyberAgent/android-gpuimage  \n\n1. AndroidFaceCropper  \n图片脸部自动识别，将识别后的局部图片返回  \n项目地址：https://github.com/lafosca/AndroidFaceCropper  \n\n1. Android Video Crop  \n利用 TextureView 播放和剪切视频，类似 ImageView.setScaleType  \n项目地址：https://github.com/dmytrodanylyk/android-video-crop  \nDemo 地址：https://github.com/lafosca/AndroidFaceCropper/releases/download/1.0/FaceCropper-sample-debug-unaligned.apk  \n\n1. svg-android  \nAndroid Svg 矢量图形支持  \n项目地址：https://github.com/japgolly/svg-android https://github.com/japgolly/svg-android  \n\n1. Android Visualizer  \n从 Android MediaPlayer 获得音频，然后像 iTunes 及 WinAmp 一样展示音轨  \n项目地址：https://github.com/felixpalmer/android-visualizer  \n\n1. ExoPlayer  \n包括仪表板和 SmoothStreaming 自适应回放，缓存持久化和自定义渲染器，方便自定义和扩展，并且可以通过应用商店更新  \n项目地址：https://github.com/google/ExoPlayer  \n\n1. DanmakuFlameMaster  \nandroid 上开源弹幕解析绘制引擎项目  \n项目地址：https://github.com/ctiao/DanmakuFlameMaster  \n\n1. OpenDanmaku  \nandroid 上一个轻量级的更简单的开源弹幕控件  \n项目地址：https://github.com/linsea/OpenDanmaku  \n\n### 八、事件总线(订阅者模式)\n通过发布/订阅事件解耦事件发送和接受，从而简化应用程序组件(Activities, Fragments 及后台线程)之间的通信  \n\n1. EventBus  \ngreenrobot 的开源项目  \n项目地址：https://github.com/greenrobot/EventBus  \n原理剖析文档：[EventBus](http://a.codekk.com/detail/Android/Trinea/EventBus 源码解析)  \n文档介绍：https://github.com/greenrobot/EventBus#general-usage-and-api  \n特点：(1) 支持在不同类型的线程中处理订阅，包括发布所在线程，UI 线程、单一后台线程、异步线程  \n(2) 支持事件优先级定义，支持优先级高的订阅者取消事件继续传递，支持粘性事件，是不是跟系统的有序广播、粘性广播很像啊  \n(3) 不是基于 annotations  \n(4) 性能更优  \n(5) 体积小  \n(6) 支持单例创建或创建多个对象  \n(7) 支持根据事件类型订阅  \n\n1. Otto  \nSquare 的开源项目，基于 Guava 的 Android 优化  \n项目地址：https://github.com/square/otto  \n文档介绍：http://square.github.io/otto/  \n[EventBus 与 Otto 的功能及性能对比文档](https://github.com/greenrobot/EventBus#comparison-with-squares-otto)  \n[EventBus 与 Otto 性能对比 Demo Apk](https://play.google.com/store/apps/details?id=de.greenrobot.eventperf)  \n\n### 九、传感器\n1. Great Android Sensing Toolkit  \nAndroid 感应器工具包，包含示例及使用过程中可能需要的算法  \n项目地址：https://github.com/gast-lib/gast-lib  \nDemo 地址：https://play.google.com/store/apps/details?id=root.gast.playground  \n文档介绍：https://github.com/gast-lib/gast-lib#documentation  \n\n1. SensorManager  \nAndroid 传感器管理  \n项目地址：https://github.com/nlathia/SensorManager  \n文档介绍：https://docs.google.com/document/d/1TqThJULb-4e6TGb1gdkAaPCfyuXStjJpbnt7a0OZ9OE/edit  \n\n1. GPSLogger  \n记录 GPS 信息  \n项目地址：https://github.com/mendhak/gpslogger  \nDemo 地址：https://play.google.com/store/apps/details?id=com.mendhak.gpslogger  \n文档介绍：http://code.mendhak.com/gpslogger/  \n\n1. Pedometer  \n计步器，使用硬件计步感应器  \n项目地址：https://github.com/j4velin/Pedometer  \n\n1. leapcast  \nChromeCast 模拟器的 App  \n项目地址：https://github.com/dz0ny/leapcast  \n\n1. Arduino-Communicator  \n与 Arduino 通信的 App  \n项目地址：https://github.com/jeppsson/Arduino-Communicator  \n\n1. android-pedometer  \nAndroid 计步器  \n项目地址：https://github.com/bagilevi/android-pedometer  \nDemo 地址：http://pedometer.googlecode.com/files/Pedometer-1.4.apk  \n\n1. OwnTracks for Android  \n自己的轨迹记录  \n项目地址：https://github.com/owntracks/android  \n\n1. Shake Detector library for Android  \nAndroid 手机震动摇晃检测库，提供供 UI 线程调用的回调接口  \n项目地址：https://github.com/tbouron/ShakeDetector  \nDemo 地址：https://play.google.com/store/apps/details?id=com.github.tbouron.shakedetector.example  \n\n1. Android heart rate monitor  \nAndroid 心跳检测  \n项目地址：https://github.com/phishman3579/android-heart-rate-monitor  \n\n1. Bluetooth LE Library for Android  \n蓝牙源信息，包括宝库 Mac、更新时间、RSSI、UUID、信号源距离、影响范围等信息  \n项目地址：https://github.com/alt236/Bluetooth-LE-Library---Android  \nDemo 地址：https://play.google.com/store/apps/details?id=uk.co.alt236.btlescan  \n\n1. farebot  \n通过 NFC 从公交卡中读取数据的一个应用  \n项目地址：https://github.com/codebutler/farebot  \n\n### 十、安全\n1. SQLCipher  \nSqlite 加密工具  \n项目地址：https://github.com/sqlcipher/sqlcipher  \n文档介绍：http://sqlcipher.net/sqlcipher-for-android/  \n\n1. Conceal  \n快速高效的进行文件加密解密  \n项目地址：https://github.com/facebook/conceal  \n文档介绍：https://github.com/facebook/conceal#usage  \n\n1. Android-PasscodeLock  \n应用锁，每次启动或从任何 Activity 启动应用都需要输入四位数字的密码方可进入  \n项目地址：https://github.com/wordpress-mobile/Android-PasscodeLock  \nDemo 地址：https://play.google.com/store/apps/details?id=org.wordpress.android  \nAPP 示例：Wordpress Android，支付宝，挖财  \n\n1. GlowPadBackport  \n将 Android4.2 的锁屏界面解锁扩展到 Android1.6 及 1.6+  \n项目地址：https://github.com/rock3r/GlowPadBackport  \nDemo 地址：https://play.google.com/store/apps/details?id=net.sebastianopoggi.samples.ui.GlowPadSample  \n\n1. GlowPadView  \nAndroid 4 锁屏界面解锁  \n项目地址：https://github.com/nadavfima/GlowPadView  \n\n1. Android-InsecureBank  \n关于 Android 不安全性的示例  \n项目地址：https://github.com/dineshshetty/Android-InsecureBankv2  \n\n### 十一、插件化\n更多见：[Android 插件化作用、概念以及不错的资料(包括开源项目)和解决方案](http://www.trinea.cn/android/android-plugin/)  \n\n1. dynamic-load-apk  \nAndroid 动态加载 Apk，热部署，利用 ClassLoader 以及 Activity 代理的方式解决  \n项目地址：https://github.com/singwhatiwanna/dynamic-load-apk  \n原理剖析文档：[dynamic-load-apk](http://a.codekk.com/detail/Android/FFish/DynamicLoadApk 源码解析)  \n文档介绍：http://blog.csdn.net/singwhatiwanna/article/details/22597587  \n\n1. Android Dynamic Loader  \n点评的实现方式，和上面不同的是：他不是用代理 Activity 的方式实现而是用 Fragment 以及 Schema 的方式实现  \n项目地址：https://github.com/mmin18/AndroidDynamicLoader  \nDemo 地址：https://github.com/mmin18/AndroidDynamicLoader/raw/master/host.apk  \n\n1. xCombine  \nAndroid App 插件式插件开发，插件必须先安装，更推荐看上面两个开源项目  \n项目地址：https://github.com/wyouflf/xCombine  \n文档介绍：http://my.oschina.net/u/1171837/blog/155377  \n\n1. Android Plugin Framework  \nAndroid 插件式开发，开放的源码目前不完整  \n项目地址：https://github.com/umeng/apf  \n\n1. Android OpenAtlas  \nAndroid插件框架，基于OSGI，非代理方式，组件需要在宿主中声明  \n项目地址：https://github.com/bunnyblue/OpenAtlas  \nDemo 地址：https://github.com/bunnyblue/OpenAtlasExtension/blob/master/Dist/OpenAtlasLauncher.apk \n\n1. multidex  \n安装多 dex 的 classloader  \n项目地址：https://github.com/casidiablo/multidex  \n\n1. ANR-WatchDog  \nAndroid ANR 监听，通过监听自己的 UI Thread 是否被执行确定是否发生了 ANR，并可以设置相关事件  \n项目地址：https://github.com/SalomonBrys/ANR-WatchDog  \n\n### 十二、文件\n对不同文档类型的处理，包括 PDF、Word、EPub、Html、Zip 等  \n\n1. purePDF  \n允许从任何运行的 SWF 文件读取和创建 PDF 文档  \n项目地址：https://github.com/sephiroth74/purePDF  \n\n1. android-pdfview  \n快速解析 pdf 的 view，默认支持手势缩放和相关动画  \n项目地址：https://github.com/JoanZapata/android-pdfview  \n\n1. Office 365 SDK for Android Preview  \n可支持 Microsoft SharePoint Lists, Microsoft SharePoint Files, Microsoft Exchange Calendar, Microsoft Exchange Contacts, Microsoft Exchange Mail  \n项目地址：https://github.com/OfficeDev/Office-365-SDK-for-Android  \n\n1. OpenSpritz-Android  \nEPub 阅读器  \n项目地址：https://github.com/OnlyInAmerica/OpenSpritz-Android  \n\n1. jsoup  \n一个解析 html 的 java 库，可方便的提取和操作数据  \n项目地址：https://github.com/jhy/jsoup  \n官网网址：http://jsoup.org/  \n作用：(1) 从一个 url、文件或 string 获得 html 并解析  \n(2) 利用 dom 遍历或 css 选择器查找、提取数据  \n(3) 操作 html 元素  \n(4) 根据白名单去除用于提交的非法数据防止 xss 攻击  \n(5) 输出整齐的 html  \n\n1. ZIP  \njava 压缩和解压库  \n项目地址：https://github.com/zeroturnaround/zt-zip  \n文档介绍：https://github.com/zeroturnaround/zt-zip#examples  \n作用：(1) 解压和压缩，并支持文件夹内递归操作  \n(2) 支持包含和排除某些元素  \n(3) 支持重命名元素  \n(4) 支持遍历 zip 包内容  \n(5) 比较两个 zip 包等功能  \n\n1. Image File Selector  \n轻量级的图片文件选择器，用系统api选取，压缩和裁切图片，可以方便的得要指定尺寸的图片  \n项目地址：https://github.com/sw926/ImageFileSelector  \n\t\n### 十三、其他\n\n1. FragmentStack  \n一个封装了启动模式的Fragment便捷使用库,方便构建单Activity+多Fragment轻量级框架  \n项目地址：https://github.com/Mr-wangyong/FragmentStack  \nApp示例：[南瓜电影](http://www.wandoujia.com/apps/cn.vcinema.cinema)  \n\n1. CustomTabsHelper\n快速集成 CustomTabs 的工具类  \n项目地址：https://github.com/DreaminginCodeZH/CustomTabsHelper  \n\n1. Salvage view  \n带 View 缓存的 Viewpager PagerAdapter，很方便使用  \n项目地址：https://github.com/JakeWharton/salvage  \n\n1. Android Priority Job Queue  \nAndroid 后台任务队列  \n项目地址：https://github.com/path/android-priority-jobqueue  \n文档介绍：https://github.com/path/android-priority-jobqueue#getting-started  \n\n1. Cobub Razor  \n开源的 mobile 行为分析系统，包括 web 端、android 端，支持 ios 和 window phone  \n项目地址：https://github.com/cobub/razor  \nDemo 地址：http://demo.cobub.com/razor  \n官网网址：http://dev.cobub.com/  \n\n1. Countly  \nAndroid 移动端数据采集分析系统  \n项目地址：https://github.com/Countly/countly-sdk-android  \n官网网址：https://count.ly/  \n\n1. aFileChooser  \n文件选择器，可内嵌到程序中，而无需使用系统或三方文件选择器。  \n项目地址：https://github.com/iPaulPro/aFileChooser  \n\n1. androidpn  \n基于 xmpp 协议的消息推送解决方案，包括服务器端和 android 端。  \n项目地址：https://github.com/dannytiehui/androidpn  \n\n1. Bolts  \nAndroid 的异步编程模式  \n项目地址：https://github.com/BoltsFramework/Bolts-Android/  \n与 AsyncTask 比较：(1) 使用的是无大小限制的线程池  \n(2) 任务可组合可级联，防止了代码耦合  \n\n1. CastCompanionLibrary-android  \n使 Android 程序中更快的接入 Google Cast  \n项目地址：https://github.com/googlecast/CastCompanionLibrary-android  \n文档介绍：https://developers.google.com/cast/  \n\n1. CastVideos-android  \n从 Android 设备分享 Video 通过 Google Cast  \n项目地址：https://github.com/googlecast/CastVideos-android  \n文档介绍：https://developers.google.com/cast/  \n\n1. Uninstall_Statics  \nAndroid 应用自身被卸载监听及打开浏览器等反馈功能实现  \n项目地址：https://github.com/sevenler/Uninstall_Statics  \n文档介绍：http://www.cnblogs.com/zealotrouge/p/3157126.html  http://www.cnblogs.com/zealotrouge/p/3159772.html  \n1. Memento  \n保证在系统配置改变时，Activity 中的某些数据可以简单安全的保持不变  \n项目地址：https://github.com/mttkay/memento  \n文档介绍：https://github.com/mttkay/memento#usage  \n\n1. FreeFlow  \n布局引擎，更简单的创建自定义布局，并且当数据和布局改变时更美观的过渡动画  \n项目地址：https://github.com/Comcast/FreeFlow  \nDemo 地址：https://github.com/Comcast/FreeFlow/releases  \n\n1. Android Gesture Detectors Framework  \nAndroid 手势框架，支持双指旋转、移动、平移、缩放等  \n项目地址：https://github.com/Almeros/android-gesture-detectors  \n\n1. Mapbox Android SDK  \nAndroid Map 的替代版  \n项目地址：https://github.com/mapbox/mapbox-android-sdk  \n\n1. Activity animation  \nActivity 跳转动画，支持各个方向波浪的效果  \n项目地址：https://github.com/flavienlaurent/activityanimation  \n在线演示：https://www.youtube.com/watch?v=-E0sc6w_Jck  \n\n1. KryoNet  \n通过 NIO 提供客户端和服务器端 TCP/UDP 网络传输的 Java 库  \n项目地址：https://github.com/EsotericSoftware/kryonet  \n\n1. Rebound  \n一个模仿弹簧反弹的 Java 库，可用于创建动画  \n项目地址：https://github.com/facebook/rebound  \n\n1. Android Social Networks  \n社交网络接入统一管理器，可方便的从 Twitter, LinkedIn, Facebook, Google Plus 登陆、获得个人信息、发送消息、发送专篇、添加或删除好友  \n项目地址：https://github.com/antonkrasov/AndroidSocialNetworks  \nDemo 地址：https://play.google.com/store/apps/details?id=com.github.androidsocialnetworks.apidemos  \n\n1. SmartAppUpdates  \nAndroid App 增量升级，包含前后端方案、Demo、以及 so 库，可用于商店或大体积 App 差分升级  \n项目地址：https://github.com/cundong/SmartAppUpdates  \n\n1. Magnet  \n创建类似 Facebook 聊天桌面悬浮窗的效果  \n项目地址：https://github.com/premnirmal/Magnet  \n\n1. AcDisplay  \n将 Android 的通知都集中到锁屏显示  \n项目地址：https://github.com/AChep/AcDisplay  \nDemo 地址：https://play.google.com/store/apps/details?id=com.achep.acdisplay  \n\n1. QrCodeScan  \nZXing 和 ZBar 结合的二维码扫描项目，提高了扫描效率  \n项目地址：https://github.com/SkillCollege/QrCodeScan  \n\n1. Android-ScreenShot  \n实现 android 系统截屏功能  \n项目地址：https://github.com/Android-ScreenShot/AndroidScreenShotService  \n文档介绍：http://blog.csdn.net/buptgshengod/article/details/39155979  \n\n1. card.io SDK for Android  \n信用卡扫描 Android SDK  \n项目地址：https://github.com/card-io/card.io-Android-SDK  \nDemo 项目：https://github.com/card-io/card.io-Android-SDK/tree/master/SampleApp  \n\n1. ASNE  \nTwitter, Facebook, Google Plus, LinkedIn, Instagram, Vkontakte, Odnoklassniki 的集成库，包括他们的大多数功能  \n项目地址：https://github.com/gorbin/ASNE  \nDemo 地址：https://play.google.com/store/apps/details?id=com.gorbin.androidsocialnetworksextended.asne  \n\n1. Android Signature Pad  \nAndroid 自定义的签名 View，可自定义笔颜色和大小  \n项目地址：https://github.com/gcacace/android-signaturepad  \nDemo 项目：https://github.com/gcacace/android-signaturepad/tree/master/SignaturePad-Example  \n\n1. Teleport  \nAndroid Wear 数据同步和消息传送库  \n项目地址：https://github.com/Mariuxtheone/Teleport  \n\n1. DebugLog  \n可以帮你创建更简单和更容易理解的调试日志，能够友好的显示调试信息所在类和函数。  \n项目地址：https://github.com/MustafaFerhan/DebugLog  \n\n1. Logger  \n简单、美观而且十分强大的 Android 日志工具  \n项目地址：https://github.com/orhanobut/logger  \nDemo 地址：https://github.com/orhanobut/logger/tree/master/app  \n\n1. jlog  \n可以灵活配置的日志工具，支持JSON打印，日志保存到指定文件，日志显示调用位置（混淆模式下依然有效）  \n项目地址：https://github.com/JiongBull/jlog  \nDemo 地址：[apk地址](https://raw.githubusercontent.com/JiongBull/jlog/master/apk/JLog_sample.apk)  \n\n1. Phrase  \nsquare 组开源大牛写的字符串替换类  \n项目地址：https://github.com/square/phrase  \n\n1. ColorPhrase  \n模仿 phrase 写的对字符串个别字符颜色改变的类，高效强大！  \n项目地址：https://github.com/THEONE10211024/ColorPhrase  \n\n1. PinyinSearch  \n一个为 T9 搜索和 Qwerty 搜索,提供数据解析与匹配等方法的拼音搜索 java 库。  \n项目地址： https://github.com/handsomezhou/PinyinSearchLibrary  \nDemo 地址： [ContactsSearch](https://github.com/handsomezhou/PinyinSearchLibrary/blob/master/external_res/bin/ContactsSearch.apk?raw=true)    [AppSearch](https://github.com/handsomezhou/PinyinSearchLibrary/blob/master/external_res/bin/AppSearch.apk?raw=true)  \nAPP 示例： 通讯录应用，微信电话本  \n\n1. PrainView  \nPaintView 是一个画图工具:  \n可直接使用设定按钮来实现已拥有的方法，且拓展性强  \n基础功能：更换颜色、更换橡皮、以及更换橡皮和笔的粗细、清屏、倒入图片  \n特殊功能：保存画笔轨迹帧动画、帧动画导入导出、ReDo和UnDo  \n项目地址：[Paintview](https://github.com/lfkdsk/JustWeTools)  \ndemo地址：[apk地址](https://github.com/lfkdsk/JustWeTools/blob/master/demo/DrawAPicture.apk)  \n原理解析：[PaintView 绘图控件解析](http://www.cnblogs.com/lfk-dsk/p/4768850.html)  \n\n1. CodeView  \nCodeView代码查看／修改工具: 基于WebView制作的代码编辑器,实现代码高亮，暗色主题  \n项目地址：[CodeView](https://github.com/lfkdsk/JustWeTools)  \ndemo地址：[apk地址](https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk)  \n\n1. ExplorerView  \n文件浏览器：继承自ListView，可拓展性强，可进行文件类型分析  \n项目地址：[CodeView](https://github.com/lfkdsk/JustWeTools)  \ndemo地址：[apk地址](https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk)  \n\n1. ReadView  \n小说阅读器，支持文字字体、颜色、背景、进度等多种调整，支持一键设置。  \n项目地址：[ReadView](https://github.com/lfkdsk/JustWeTools)  \ndemo地址：[apk地址](https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk)  \n\n1. MarkDownView  \n支持MarkDown语法的渲染器,基于WebView的MarkDown渲染器,支持标准化的MarkDown语法,\n调用接口和CodeView保持一致使用简便  \n项目地址：[ReadView](https://github.com/lfkdsk/JustWeTools)  \ndemo地址：[apk地址](https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk)  \n\n1. VerTextView竖行排版的TextView:  \n支持竖行排版，添加了下划线功能，开启简便，下划线粗细、颜色、间距均可自定义，  \n接口调用方式与TextView相似，使用简便。  \n项目地址：[ReadView](https://github.com/lfkdsk/JustWeTools)  \ndemo地址：[apk地址](https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk)  \n\n1. GHDownload下载框架  \n支持单线程和多线程断点下载，简单易用。  \n项目地址：[GHDownload](https://github.com/guanchao/GHDownload)  \n\n\n## 第三部分 优秀项目\n主要介绍那些 Android 还不错的完整项目，目前包含的项目主要依据是项目有意思或项目分层规范比较好。  \n\n### 一、系统及平台\n1. Linux  \n项目地址：https://github.com/torvalds/linux  \n1. Android  \n项目地址：https://android.googlesource.com/  \n\n### 二、项目\n1. ZXing  \n二维码扫描工具  \n项目地址：https://github.com/zxing/zxing 或 https://code.google.com/p/zxing/  \nAPK 地址：https://play.google.com/store/apps/details?id=com.google.zxing.client.android  \n其他：现在市面上很多应用的二维码扫描功能都是从这个修改而来  \n\n1. photup  \n编辑机批量上传照片到 facebook 上  \n项目地址：https://github.com/chrisbanes/photup  \nAPK 地址：https://play.google.com/store/apps/details?id=uk.co.senab.photup  \n其他：代码分包合理，很棒。不过这个项目依赖的开源项目比较多，比较难编译  \n\n1. github-android  \nGithub 的 Android 客户端项目  \n项目地址：https://github.com/github/android  \nAPK 地址：https://play.google.com/store/apps/details?id=com.github.mobile  \n\n1. Notes  \nMIUI 便签  \n项目地址：https://github.com/MiCode/Notes  \nAPK 地址：https://github.com/Trinea/TrineaDownload/blob/master/miui-note-demo.apk?raw=true  \n其他：项目分包比较合理，相比较 miui 的文件管理器 https://github.com/MiCode/FileExplorer 代码规范较好得多  \n\n1. weicuiyuan  \n四次元-新浪微博客户端  \n项目地址：https://github.com/qii/weiciyuan  \nAPK 地址：https://play.google.com/store/apps/details?id=org.qii.weiciyuan  \n\n1. Douya  \n豆芽——Material Design 的豆瓣客户端  \n项目地址：https://github.com/DreaminginCodeZH/Douya  \n\n1. gnucash-android  \n一个记账理财软件  \n项目地址：https://github.com/codinguser/gnucash-android  \nAPK 地址：http://play.google.com/store/apps/details?id=org.gnucash.android  \n\n1. AntennaPod  \n支持 rss 订阅、音乐订阅  \n项目地址：https://github.com/danieloeh/AntennaPod  \nAPK 地址：https://play.google.com/store/apps/details?id=de.danoeh.antennapod  \n\n1. ChaseWhisplyProject  \n打鬼游戏  \n项目地址：https://github.com/tvbarthel/ChaseWhisplyProject  \nAPK 地址：https://play.google.com/store/apps/details?id=fr.tvbarthel.games.chasewhisply  \n\n1. Tweet Lanes  \n功能完整的 Twitter 客户端  \n项目地址：https://github.com/chrislacy/TweetLanes  \nAPK 地址：https://play.google.com/store/apps/details?id=com.tweetlanes.android  \n\n1. Financius  \n简单易用的记账程序  \n项目地址：https://github.com/mvarnagiris/Financius  \nAPK 地址：https://play.google.com/store/apps/details?id=com.code44.finance  \n\n1. todo.txt-android  \ntodo.txt 的官方 Android 应用  \n项目地址：https://github.com/ginatrapani/todo.txt-android  \nAPK 地址：https://play.google.com/store/apps/details?id=com.todotxt.todotxttouch  \n\n1. simpletask  \n基于 todo.txt 官方应用的另一个客户端  \n项目地址：https://github.com/mpcjanssen/simpletask-android  \nAPK 地址：https://play.google.com/store/apps/details?id=nl.mpcjanssen.todotxtholo  \n\n1. Muzei Live Wallpaper  \n定时更换桌面精美壁纸  \n项目地址：https://github.com/romannurik/muzei  \nAPK 地址：https://play.google.com/store/apps/details?id=net.nurik.roman.muzei  \n\n1. Scanbook  \n扫描搜索查询图书信息  \n项目地址：https://github.com/JayFang1993/ScanBook  \nAPK 地址：http://www.wandoujia.com/apps/com.scanbook  \n\n1. iosched  \nThe Google I/O 2014 Android App  \n项目地址：https://github.com/google/iosched  \nAPK 地址：https://play.google.com/store/apps/details?id=com.google.samples.apps.iosched  \n\n## 第四部分 开发工具及测试工具\n主要介绍和 Android 开发工具和测试工具相关的开源项目。  \n\n### 一、开发效率工具\n1. Parceler  \n通过注解及工具类自动完成实体类 Parcelable 及值传递  \n项目地址：https://github.com/johncarl81/parceler  \n\n1. Json2Java  \n根据 JSon 数据自动生成对应的 Java 实体类，还支持 Parcel、Gson Annotations 对应代码自动生成。期待后续的提取父类以及多 url 构建整个工程的功能  \n项目地址：https://github.com/jonfhancock/JsonToJava  \n在线演示：http://jsontojava.appspot.com/  \n\n1. IntelliJ Plugin for Android Parcelable boilerplate code generation  \nAndroid studio 插件，生成 Parcelable 代码  \n项目地址：https://github.com/mcharmas/android-parcelable-intellij-plugin  \n\n1. Android Holo Colors IntelliJ Plugin  \nAndroid studio 插件，生成 holo 样式 9 patch 图片  \n项目地址：https://github.com/jeromevdl/android-holo-colors-idea-plugin  \n\n1. Android Drawable Factory  \n用于生成各个分辨率的图片  \n项目地址：https://github.com/tizionario/AndroidDrawableFactory  \n\n1. SelectorChapek for Android  \nAndroid Studio 插件，可根据固定文件名格式资源自动生成 drawable selectors xml 文件。  \n项目地址：https://github.com/inmite/android-selector-chapek  \n\n1. Android Action Bar Style Generator  \nAndroid ActionBar 样式生成器，可在线选择 ActionBar 样式自动生成所需要的图片资源及 xml 文件  \n项目地址：https://github.com/jgilfelt/android-actionbarstylegenerator  \n在线演示：http://jgilfelt.github.io/android-actionbarstylegenerator/  \n\n1. ButterKnifeZelezny  \n用于快速生成[ButterKnife](https://github.com/JakeWharton/butterknife)View 注入代码的 Android Studio/IDEA 插件  \n项目地址：https://github.com/inmite/android-butterknife-zelezny  \n\n1. RoboCoP  \n利用 Gradle task 根据固定格式的 json 文件生成 ContentProvider  \n项目地址：https://github.com/mediarain/RoboCoP  \n\n1. appiconsizes  \n用于生成各个分辨率的图片  \n项目地址：http://www.appiconsizes.com/  \n\n1. AndroidUtiles \n集合了所有常用的安卓工具类\n项目地址：https://github.com/l123456789jy/Lazy\n\n1. Gradle Retrolambda Plugin  \n[Retrolambda](https://github.com/orfjackal/retrolambda)是将 Java8 的 Lambdas 应用于 Java7 的工具，本项目是 Gradle 插件，通过 Retrolambda 从而使 Java 或 Android 项目用 Java8 的 Lambdas 编写，将编译后的字节码转换为 Java6 和 7 的字节码从而正常运行  \n项目地址：https://github.com/evant/gradle-retrolambda  \n\n1. Dagger IntelliJ Plugin  \ndagger 的 intellij 插件  \n项目地址：https://github.com/square/dagger-intellij-plugin  \n\n1. Android Gen Drawable Maven plugin  \n在编译时根据 SVG 描述文件生成不同分辨率的 jpg、png 或点 9 图片  \n项目地址：https://github.com/avianey/androidgendrawable-maven-plugin  \n\n1. Android Asset Studio  \n各种 Android 资源自动生成器，包括启动图标、ActionBar 图标、通知栏图标、点 9 等  \n项目地址：https://github.com/romannurik/AndroidAssetStudio  \n在线演示：http://romannurik.github.io/AndroidAssetStudio/  \n\n1. jsonschema2pojo  \n根据 Json 内容生成 java 对象，支持 jackjson 和 gson  \n项目地址：https://github.com/joelittlejohn/jsonschema2pojo  \n在线演示：http://www.jsonschema2pojo.org/  \n\n1. GsonFormat  \n根据 JSONObject 格式的字符串,自动生成实体类参数的 Android Studio/IntelliJ IDEA 插件  \n项目地址：https://github.com/zzz40500/GsonFormat  \n\n1. 9-Patch-Resizer  \n自动生成 png 及点 9 图片的不同分辨率版本  \n项目地址：https://github.com/redwarp/9-Patch-Resizer  \n\n1. AndroidLocalizationer  \n可用于将项目中的 string 资源自动翻译为其他语言的 Android Studio/IntelliJ IDEA 插件  \n项目地址：https://github.com/westlinkin/AndroidLocalizationer  \n\n1. Material Palette  \n一个将现有的色彩方案组合成材料设计的调色板方案，提供下载。选取两个主要色彩后便可以提供下载，提供下载的格式可以是 android 的资源 xml 文件，以色彩的方式提供，也可以是 CSS、SVG、PNG 等常见格式文件。  \n项目地址：http://www.materialpalette.com/  \n\n### 二、开发自测相关\n1. Quality Tools for Android  \nAndroid 测试及自测工具集合和示例  \n项目地址：https://github.com/stephanenicolas/Quality-Tools-for-Android  \n\n1. android-test-kit  \nGoogle 的 Android 测试工具  \n包括 GoogleInstrumentationTestRunner(增强版的 InstrumentationTestRunner)和 Espresso(用于快速写出可靠测试用例的 API)  \n项目地址：https://code.google.com/p/android-test-kit/  \n文档介绍：https://code.google.com/p/android-test-kit/w/list  \n\n1. robolectric  \n测试用例编写框架  \n项目地址：https://github.com/robolectric/robolectric  \nDemo 地址：https://github.com/robolectric/robolectricsample  \n文档介绍：http://robolectric.org/  \n特点：(1). 不需要模拟器在一般 JVM 就可以运行测试用例  \n(2). 能完成在真机上的大部分测试包括感应器  \n其他的测试用例及相关模块 Mock 可见：[android-mock](https://code.google.com/p/android-mock/), [mockito](https://code.google.com/p/mockito/), [easy-mock](https://github.com/easymock/easymock)  \n\n1. Android FEST  \n提供一些列方便的断言，可用于提高编写 Android 自测代码效率  \n项目地址：https://github.com/square/fest-android  \n\n1. BoundBox  \n可用于测试类各种访问权限的属性、方法。实际是通过 BoundBox 这个 annotation 生成一个属性和方法都是 public 权限的中间类并对此类进行测试完成的  \n项目地址：https://github.com/stephanenicolas/boundbox  \n\n1. Hugo  \n用于打印函数信息及执行时间的工具，仅在 debug 模式生效  \n项目地址：https://github.com/JakeWharton/hugo  \n\n1. scalpel  \n在应用下面添加一层用于界面调试  \n项目地址：https://github.com/JakeWharton/scalpel  \n\n1. Android Screenshot library  \nAndroid 截图工具类，用于在持续集成时截图  \n项目地址：https://github.com/rtyley/android-screenshot-lib  \n\n1. sonar-android-lint-plugin  \n将 android lint 的错误在 sonar 中展现  \n项目地址：https://github.com/SonarCommunity/sonar-android  \n\n### 三、测试工具\n1. Spoon  \n可用于 android 不同机型设备自动化测试，能将应用 apk 和测试 apk 运行在不同机器上并生成相应测试报告。  \n项目地址：https://github.com/square/spoon  \n\n1. Tencent APT  \nAPT 是腾讯开源的一个 Android 平台高效性能测试组件，提供丰富实用的功能，适用于开发自测、定位性能瓶颈；测试人员完成性能基准测试、竞品对比测试  \n项目地址：https://github.com/stormzhang/APT  \n\n1. Emmagee  \n网易开源的性能测试工具，包括 CPU、内存、网络流量、启动时间、电池状态等  \n项目地址：https://github.com/NetEase/Emmagee  \n\n1. Android py-uiautomator  \npy-uiautomator 是一个对 Android uiautomator 用 python 进行封装的测试框架.  \n项目地址：https://github.com/xiaocong/uiautomator  \n\n1. Augmented Traffic Control  \n模拟网络状况，包括带宽、时延抖动、丢包率、错包率、包重排率  \n项目地址：https://github.com/facebook/augmented-traffic-control  \n\n1. stetho  \n强大的 Android Debug 工具。支持网络请求监控以及数据库查看，可以和 Chrome DevTools 结合或者命令行模式。  \n项目地址：https://github.com/facebook/stetho  \n\n### 四、开发及编译环境\n1. Buck  \nfacebook 开源的 Android 编译工具，效率是 ant 的两倍。主要优点在于：  \n(1) 加快编译速度，通过并行利用多核 cpu 和跟踪不变资源减少增量编译时间实现  \n(2) 可以在编译系统中生成编译规则而无须另外的系统生成编译规则文件  \n(3) 编译同时可生成单元测试结果  \n(4) 既可用于 IDE 编译也可用于持续集成编译  \n(5) facebook 持续优化中  \n项目地址：https://github.com/facebook/buck  \n\n1. Android Maven Plugin  \nAndroid Maven 插件，可用于对 android 三方依赖进行管理。在 J2EE 开发中，maven 是非常成熟的依赖库管理工具，可统一管理依赖库。  \n项目地址：https://github.com/jayway/maven-android-plugin  \n\n1. umeng-muti-channel-build-tool  \n渠道打包工具  \n项目地址：https://github.com/umeng/umeng-muti-channel-build-tool  \n另可参见 Google 的构建系统 Gradle：http://tools.android.com/tech-docs/new-build-system/user-guide  \n\n1. Genymotion  \n目前最好用最快的 android 模拟器  \n项目地址：http://www.genymotion.com/  \nAndroid studio 集成控件： http://plugins.jetbrains.com/plugin/7269?pr=idea  \nCyril Mottier 推荐：http://cyrilmottier.com/2013/06/27/a-productive-android-development-environment/  \n\n1. gradle-mvn-push  \n方便的将 Gradle 的 Artifacts 上传到 Maven 仓库  \n项目地址：https://github.com/chrisbanes/gradle-mvn-push  \n文档介绍：https://github.com/chrisbanes/gradle-mvn-push#usage  \n\n1. Android Emulator Plugin for Jenkins  \nAndroid 模拟器 jenkins 插件，用于 Jenkins 做持续集成时跑模拟器测试  \n项目地址：https://github.com/jenkinsci/android-emulator-plugin  \n\n1. Android Maven Plugin  \n管理应用所需要的依赖库。包括的构建工具有 Maven、Gradle、ant、sbt  \n项目地址：https://github.com/mosabua/maven-android-sdk-deployer  \n\n1. SDK Manager Plugin  \n下载和管理 Android SDK 的 Gradle 插件  \n项目地址：https://github.com/JakeWharton/sdk-manager-plugin  \n\n1. Gradle Protobuf Plugin  \n将.proto 文件转换成 Java 文件的 gradle 插件  \n项目地址：https://github.com/andrewkroh/gradle-protobuf-plugin  \n\n1. ChromeADB  \nChrome 的 Adb 插件，当登录后，能看到所有连接的设备并操作，可以看应用、进程、内存及磁盘使用情况等  \n项目地址：https://github.com/importre/chromeadb  \n\n### 五、其他\n1. GT  \nAPP的随身调试平台，它是直接运行在手机上的“集成调试环境”(IDTE, Integrated Debug Environment)。  \n项目地址：https://github.com/TencentOpen/GT  \n文档介绍：http://gt.qq.com/docs.html  \n\n1. ViewServer  \n允许 app 运行在任何手机上都可以用 HierarchyViewer 查看  \n项目地址：https://github.com/romainguy/ViewServer  \n\n1. GridWichterle for Android  \n在整个系统上显示一个 grid，用来帮助查看应用布局及使得布局更美观，可设置 grid 网格大小和颜色，android 推荐 48dp 和 8dp，可见 Android Design Guidelines – Metrics and Grids，比起 hierarchyviewer 相差甚远，不过偶尔可用来作为布局查看工具。  \n项目地址：https://github.com/inmite/android-grid-wichterle  \nDemo 地址：https://play.google.com/store/apps/details?id=eu.inmite.android.gridwichterle  \n\n1. Catlog  \n手机端 log 查看工具，支持不同颜色显示、关键字过滤、级别过滤、进程 id 过滤、录制功能等  \n项目地址：https://github.com/nolanlawson/Catlog  \n在线演示：https://play.google.com/store/apps/details?id=com.nolanlawson.logcat  \n\n1. PID Cat  \n根据 package 查看 logcat 日志  \n项目地址：https://github.com/JakeWharton/pidcat  \n\n1. ACRA  \n应用崩溃信息日志上报到 GoogleDoc 工具，网页版展现结果三方开源地址 https://github.com/BenoitDuffez/crashreportsviewer  \n项目地址：https://github.com/ACRA/acra  \n文档介绍：https://github.com/ACRA/acra/wiki/BasicSetup  \n\n1. Crashlytics  \n提供丰富的应用崩溃信息日志收集  \n轻量级，丰富，可自定义应用崩溃信息收集器，附有邮件通知  \n项目地址：http://www.crashlytics.com/  \n集成插件：[Android Studio, Eclipse and IntelliJ](http://try.crashlytics.com/sdk-android/?utm_source=blog&utm_medium=blog&utm_campaign=Announcing_android_studio_wp&utm_content=CTA_button)  \n\n1. Android Resource Navigator  \nchrome 插件，可以方便的查看 github 上 android 源码工程的 styles.xml 和 themes.xml。主要功能：  \n(1) 快速打开 android styles.xml themes.xml  \n(2) 方便在资源间跳转。styles.xml themes.xml 文件中资源链接跳转，可以方便跳转到某个资源  \n(3) 方便查找某个 style 和 theme。chrome 地址栏输入 arn+tab+搜索内容回车即可  \n(4) 自动下载不同分辨率下的 drawable  \n(5) 通过映射查找那些不是按照固定命名规则命名的 style 和 theme  \n项目地址：https://github.com/jgilfelt/android-resource-navigator  \n在线演示：https://chrome.google.com/webstore/detail/android-resource-navigato/agoomkionjjbejegcejiefodgbckeebo?hl=en&gl=GB  \n\n1. android-resource-remover  \n根据 lint 的提示删除项目中无用的资源，减少包的大小  \n项目地址：https://github.com/KeepSafe/android-resource-remover  \n\n1. Telescope  \n通过手势截图以特定主题发送到特定邮箱地址报告 Bug  \n项目地址：https://github.com/mattprecious/telescope  \n\n1. Complete Android Fragment & Activity Lifecycle  \n完整的 Android Fragment/Activity 生命周期图  \n项目地址：https://github.com/xxv/android-lifecycle  \n\n1. Bugsnag Notifier for Android  \n通过`Thread.UncaughtExceptionHandler`捕获应用未处理的异常崩溃 Bug 并用 Notification 展示同时上传到后台服务器  \n项目地址：https://github.com/bugsnag/bugsnag-android  \n文档介绍：https://github.com/bugsnag/bugsnag-android#installation--setup  \n\n1. Material Design Icons  \nGoogle Material Design 规范中的 Icon  \n项目地址：https://github.com/google/material-design-icons  \n\n1. scrollscreenshot  \nAndroid 滚动屏幕自动截图 jar 包，支持纵向、横向滚动截屏拼接  \n项目地址：https://github.com/PGSSoft/scrollscreenshot  \n\n1. droidicon  \n1600+的海量 Icon，包括 750+的 Material Design icons  \n项目地址：https://github.com/theDazzler/droidicon  \n\n1. leakcanary  \nAndroid 内存泄露检测工具，集成方便，出现泄露后报告直观  \n项目地址：https://github.com/square/leakcanary  \n\n1. CacheUtilsLibrary  \n将任何Java Object类型的数据序列化后写入缓存文件，将来使用时读取缓存文件并反序列化成对应Java Object的库  \n项目地址：https://github.com/westlinkin/CacheUtilsLibrary\n\n1. BlockCanary  \nBlockCanary是一个Android平台的一个非侵入式的性能监控组件，应用只需要实现一个抽象类，提供一些该组件需要的上下文环境，就可以在平时使用应用的时候检测主线程上的各种卡慢问题，并通过组件提供的各种信息分析出原因并进行修复。  \n项目地址: https://github.com/moduth/blockcanary  \n\n## 第五部分  \n主要介绍那些乐于分享并且有一些很不错的开源项目的个人和组织。Follow 大神，深挖大神的项目和 following，你会发现很多。  \n\n### 一、个人  \n1. JakeWharton  \n就职于 Square，绝对牛逼的大神，项目主要集中在 Android 版本兼容，ViewPager 及开发工具上  \nGithub 地址：https://github.com/JakeWharton  \n代表作：ActionBarSherlock，Android-ViewPagerIndicator，Nine Old Androids，SwipeToDismissNOA，hugo，butterknife，Android-DirectionalViewPager, scalpel    \npidcat 另外对 square 及其他开源项目有很多贡献  \n主页：http://jakewharton.com/  \n\n1. Chris Banes  \nGithub 地址：https://github.com/chrisbanes  \n代表作：ActionBar-PullToRefresh，PhotoView，Android-BitmapCache，Android-PullToRefresh  \n主页：http://chris.banes.me/  \n\n1. Koushik Dutta  \n就职于 ClockworkMod  \nGithub 地址：https://github.com/koush  \n代表作：Superuser，AndroidAsync，UrlImageViewHelper，ion, 另外对 https://github.com/CyanogenMod 的开源项目有很多贡献  \n主页：http://koush.com/  \n\n1. Simon Vig  \nGithub 地址：https://github.com/SimonVT  \n代表作：android-menudrawer，MessageBar  \n主页：http://simonvt.net/  \n\n1. Manuel Peinado  \nGithub 地址：https://github.com/ManuelPeinado  \n代表作：FadingActionBar，GlassActionBar，RefreshActionItem，QuickReturnHeader  \n\n1. Emil Sj?lander  \nGithub 地址：https://github.com/emilsjolander  \n代表作：StickyListHeaders，sprinkles，android-FlipView  \n主页：http://emilsjolander.se/  \n\n1. greenrobot  \nGithub 地址：https://github.com/greenrobot  \n代表作：greenDAO，EventBus  \n主页：http://greenrobot.de/  \n\n1. Jeff Gilfelt  \nGithub 地址：https://github.com/jgilfelt  \n代表作：android-mapviewballoons，android-viewbadger，android-actionbarstylegenerator，android-sqlite-asset-helper  \n主页：http://jeffgilfelt.com  \n\n1. Romain Guy  \nAndroid team 成员(2013.10 已离开 Android team，仍在 Google)  \nGithub 地址：https://github.com/romainguy  \n代表作：ViewServer  \n主页：http://www.curious-creature.org/category/android/  \n個人攝影作品：http://www.flickr.com/photos/romainguy  \n\n1. sephiroth74  \n就职于 Aviary.com  \nGithub 地址：https://github.com/sephiroth74  \n代表作：ImageViewZoom，HorizontalVariableListView，AndroidWheel，purePDF  \n主页：http://www.sephiroth.it/  \n\n1. Cyril Mottier  \nGoogle 开发者专家认证，发布一些 Android 技巧及文章  \nGithub 地址：https://github.com/cyrilmottier  \n代表作：GreenDroid，Polaris  \n主页：http://cyrilmottier.com/  \n\n### 二、组织  \n1. Square  \n有态度有良心的企业，很多不错的分享  \nGithub 地址：https://github.com/square  \n代表作：okhttp、fest-android，android-times-square、picasso、dagger、spoon 等等  \n主页：http://square.github.io/  \n\n1. Inmite s.r.o.  \nGithub 地址：https://github.com/inmite  \n代表作：android-styled-dialogs，android-grid-wichterle，android-selector-chapek  \n主页：http://www.inmite.eu/  \n\n### 三、博客  \n[部分国外著名 Android 开发者信息](https://github.com/android-cn/android-dev-com)  \n\n## 注意\n> 本文转自——**[Trinea 汇总的开源项目](https://github.com/Trinea/android-open-project)**\n> 欢迎大家关注他的微信公众号：codekk。二维码如下：  \n>  专注于 Android 开源分享、源码解析、框架设计、Android 内推。  \n>   ![img](http://www.trinea.cn/wp-content/uploads/2016/01/weixin-codekk-160.jpg)  \n>    他的网站：[www.codekk.com](http://a.codekk.com)\n>  **关于trinea，欢迎关注**  \n>  微博：<a title=\"Android 技术及移动互联网分享\" href=\"http://weibo.com/trinea?s=6cm7D0\" target=\"_blank\">Trinea</a>&nbsp;&nbsp;&nbsp;&nbsp;主页：<a title=\"关注于 Android、Java、性能优化、开源项目\" href=\"http://www.trinea.cn/\" target=\"_blank\">trinea.cn</a> \n\n## 推荐\n> [Android 开源项目源码解析(Volley、UIL、Dagger、EventBus、插件化库等分析)](http://a.codekk.com)\n> \n> [Android 职位内部推荐(阿里、腾讯、百度、京东、滴滴、美团、58、华为、网易、魅族等)](http://j.codekk.com)","slug":"android-open-project","published":1,"updated":"2016-09-09T06:10:14.373Z","layout":"post","photos":[],"link":"","_id":"ciwn8lh4n001pkw1g1hmflhud","content":"<h2 id=\"目前包括：\"><a href=\"#目前包括：\" class=\"headerlink\" title=\"目前包括：\"></a>目前包括：</h2><blockquote>\n<ol>\n<li>Android 开源项目第一篇——个性化控件(View)篇<br><em>包括：ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style、其他</em>  </li>\n<li>Android 开源项目第二篇——工具库篇<br><em>包括：依赖注入、图片缓存、网络请求、数据库 ORM 工具包、Android 公共库、高版本向低版本兼容库、多媒体、事件总线、传感器、安全、插件化、文件、其他</em>  </li>\n<li>Android 开源项目第三篇——优秀项目篇<br><em>比较有意思的完整的 Android 项目</em>  </li>\n<li>Android 开源项目第四篇——开发及测试工具篇<br><em>包括：开发效率工具、开发自测相关、测试工具、开发及编译环境、其他</em>  </li>\n<li>Android 开源项目第五篇——优秀个人和团体篇<br><em>乐于分享并且有一些很不错的开源项目的个人和组织，包括 JakeWharton、Chris Banes、Koushik Dutta 等大牛</em>  <a id=\"more\"></a>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h3><p>以下链接网址若存在不能访问，请自行尝试翻墙，推荐使用GreenVPN<br><a href=\"http://gjsq.me/15038648\" target=\"_blank\" rel=\"external\"><img src=\"/resources/greenvpn.gif\" alt=\"好用的GreenVPN\"></a></p>\n<h2 id=\"第一部分-个性化控件-View\"><a href=\"#第一部分-个性化控件-View\" class=\"headerlink\" title=\"第一部分 个性化控件(View)\"></a>第一部分 个性化控件(View)</h2><p>主要介绍那些不错个性化的 View，包括 ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style 等等。  </p>\n<h3 id=\"一、ListView\"><a href=\"#一、ListView\" class=\"headerlink\" title=\"一、ListView\"></a>一、ListView</h3><ol>\n<li><p>android-pulltorefresh<br>一个强大的拉动刷新开源项目，支持各种控件下拉刷新，ListView、ViewPager、WebView、ExpandableListView、GridView、ScrollView、Horizontal  ScrollView、Fragment 上下左右拉动刷新，比下面 johannilsson 那个只支持 ListView 的强大的多。并且它实现的下拉刷新 ListView 在 item 不足一屏情况下也不会显示刷新提示，体验更好。<br>项目地址：<a href=\"https://github.com/chrisbanes/Android-PullToRefresh\" target=\"_blank\" rel=\"external\">https://github.com/chrisbanes/Android-PullToRefresh</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refreshview-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refreshview-demo.apk?raw=true</a><br>APP 示例：新浪微博各个页面 </p>\n</li>\n<li><p>android-pulltorefresh-listview<br>下拉刷新 ListView，这个被很多人使用的项目实际有不少 bug，推荐使用 <a href=\"https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh\" target=\"_blank\" rel=\"external\">android-Ultra-Pull-to-Refresh</a><br>项目地址：<a href=\"https://github.com/johannilsson/android-pulltorefresh\" target=\"_blank\" rel=\"external\">https://github.com/johannilsson/android-pulltorefresh</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refresh-listview-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refresh-listview-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>android-Ultra-Pull-to-Refresh<br>下拉刷新，第一个项目已经停止维护了，并且使用起来相对复杂，定制性也差。这个是替代和改良方案。这个继承于 ViewGroup 可以包含任何 View。功能甚至比 SwipeRefreshLayout 强大。使用起来非常简单。良好的设计，如果你想定制自己的 UI 样式，非常简单，就像给 ListView 加一个 Header View 那么简单。支持 <code>API LEVEL &gt;= 8</code><br>项目地址：<a href=\"https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh\" target=\"_blank\" rel=\"external\">https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/Grumoon/android-Ultra-Pull-To-Refresh 源码解析\" target=\"_blank\" rel=\"external\">android-Ultra-Pull-to-Refresh</a><br>Demo 地址：<a href=\"https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh/blob/master/ptr-demo/target/ultra-ptr-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh/blob/master/ptr-demo/target/ultra-ptr-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>Android-PullToRefreshRecyclerView<br>支持下拉刷新的RecyclerView，同时支持滑动到底部自动加载数据、给RecyclerView添加Header。并且不更改原有RecyclerView的逻辑。<br>项目地址：<a href=\"https://github.com/HomHomLin/Android-PullToRefreshRecyclerView。\" target=\"_blank\" rel=\"external\">https://github.com/HomHomLin/Android-PullToRefreshRecyclerView。</a><br>Demo地址：<a href=\"https://github.com/HomHomLin/Android-PullToRefreshRecyclerView/blob/master/sample.apk\" target=\"_blank\" rel=\"external\">https://github.com/HomHomLin/Android-PullToRefreshRecyclerView/blob/master/sample.apk</a>  </p>\n</li>\n<li><p>DragSortListView<br>拖动排序的 ListView，同时支持 ListView 滑动 item 删除，各个 Item 高度不一、单选、复选、CursorAdapter 做为适配器、拖动背景变化等<br>项目地址：<a href=\"https://github.com/bauerca/drag-sort-listview\" target=\"_blank\" rel=\"external\">https://github.com/bauerca/drag-sort-listview</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.mobeta.android.demodslv\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.mobeta.android.demodslv</a><br>APP 示例：Wordpress Android  </p>\n</li>\n<li><p>SwipeListView<br>支持定义 ListView 左右滑动事件，支持左右滑动位移，支持定义动画时间<br>项目地址：<a href=\"https://github.com/47deg/android-swipelistview\" target=\"_blank\" rel=\"external\">https://github.com/47deg/android-swipelistview</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.fortysevendeg.android.swipelistview\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.fortysevendeg.android.swipelistview</a><br>APP 示例：微信 </p>\n</li>\n<li><p>SlideAndDragListView<br>支持ListView的Item的拖动排序、左右滑动事件，可自定义左右滑动显示文字、图标、位移，同时支持onItemClick、onItemLongClick等监听器，提供丰富的回调接口。<br>项目地址：<a href=\"https://github.com/yydcdut/SlideAndDragListView\" target=\"_blank\" rel=\"external\">https://github.com/yydcdut/SlideAndDragListView</a><br>Demo 地址：<a href=\"https://github.com/yydcdut/SlideAndDragListView/blob/master/apk/sdlv.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/yydcdut/SlideAndDragListView/blob/master/apk/sdlv.apk?raw=true</a><br>APP 示例：Android 手机QQ 5.0  </p>\n</li>\n<li><p>Android-SwipeToDismiss<br>滑动 Item 消失 ListView，支持 3.0 以下版本见：<a href=\"https://github.com/JakeWharton/SwipeToDismissNOA\" target=\"_blank\" rel=\"external\">https://github.com/JakeWharton/SwipeToDismissNOA</a><br>项目地址：<a href=\"https://github.com/romannurik/Android-SwipeToDismiss\" target=\"_blank\" rel=\"external\">https://github.com/romannurik/Android-SwipeToDismiss</a><br>Demo 地址：<a href=\"https://github.com/JakeWharton/SwipeToDismissNOA/SwipeToDismissNOA.apk/qr_code\" target=\"_blank\" rel=\"external\">https://github.com/JakeWharton/SwipeToDismissNOA/SwipeToDismissNOA.apk/qr_code</a>  </p>\n</li>\n<li><p>RecyclerViewSwipeDismiss<br>轻量级支持 support-v7 中的 RecyclerView 的滑动删除(Swipe to dismiss)行为，不需要修改源代码，只要简单的绑定<code>onTouchListener</code><br>项目地址：<a href=\"https://github.com/CodeFalling/RecyclerViewSwipeDismiss\" target=\"_blank\" rel=\"external\">https://github.com/CodeFalling/RecyclerViewSwipeDismiss</a>  </p>\n</li>\n<li><p>PinnedHeaderExpandableListView<br>首先它是一个 ExpandableListView，但是它的头部可以固定，其次，在它的上面还有一个头部可以来回伸缩<br>项目地址：<a href=\"https://github.com/singwhatiwanna/PinnedHeaderExpandableListView\" target=\"_blank\" rel=\"external\">https://github.com/singwhatiwanna/PinnedHeaderExpandableListView</a><br>APP 示例：百度手机卫士垃圾清理界面  </p>\n</li>\n<li><p>StickyListHeaders<br>GroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView，支持快速滑动，支持 Android2.3 及以上<br>项目地址：<a href=\"https://github.com/emilsjolander/StickyListHeaders\" target=\"_blank\" rel=\"external\">https://github.com/emilsjolander/StickyListHeaders</a><br>APP 示例：Android 4.0 联系人  </p>\n</li>\n<li><p>pinned-section-listview<br>GroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView<br>项目地址：<a href=\"https://github.com/beworker/pinned-section-listview\" target=\"_blank\" rel=\"external\">https://github.com/beworker/pinned-section-listview</a>  </p>\n</li>\n<li><p>PinnedHeaderListView<br>GroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView<br>项目地址：<a href=\"https://github.com/JimiSmith/PinnedHeaderListView\" target=\"_blank\" rel=\"external\">https://github.com/JimiSmith/PinnedHeaderListView</a>  </p>\n</li>\n<li><p>QuickReturn<br>ListView/ScrollView 的 header 或 footer，当向下滚动时消失，向上滚动时出现<br>项目地址：<a href=\"https://github.com/lawloretienne/QuickReturn\" target=\"_blank\" rel=\"external\">https://github.com/lawloretienne/QuickReturn</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.etiennelawlor.quickreturn\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.etiennelawlor.quickreturn</a>  </p>\n</li>\n<li><p>QuickReturnHeader<br>ListView/ScrollView 的 header 或 footer，当向下滚动时消失，向上滚动时出现<br>项目地址：<a href=\"https://github.com/ManuelPeinado/QuickReturnHeader\" target=\"_blank\" rel=\"external\">https://github.com/ManuelPeinado/QuickReturnHeader</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/quick-return-header-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/quick-return-header-demo.apk?raw=true</a><br>APP 示例：google plus  </p>\n</li>\n<li><p>IndexableListView<br>ListView 右侧会显示 item 首字母快捷索引，点击可快速滑动到某个 item<br>项目地址：<a href=\"https://github.com/woozzu/IndexableListView\" target=\"_blank\" rel=\"external\">https://github.com/woozzu/IndexableListView</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/indexable-listview.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/indexable-listview.apk?raw=true</a><br>APP 示例：微信通讯录、小米联系人  </p>\n</li>\n<li><p>CustomFastScrollView<br>ListView 快速滑动，同时屏幕中间 PopupWindows 显示滑动到的 item 内容或首字母<br>项目地址：<a href=\"https://github.com/nolanlawson/CustomFastScrollViewDemo\" target=\"_blank\" rel=\"external\">https://github.com/nolanlawson/CustomFastScrollViewDemo</a>  </p>\n</li>\n<li><p>Android-ScrollBarPanel<br>ListView 滑动时固定的 Panel 指示显示在 scrollbar 旁边<br>项目地址：<a href=\"https://github.com/rno/Android-ScrollBarPanel\" target=\"_blank\" rel=\"external\">https://github.com/rno/Android-ScrollBarPanel</a>  </p>\n</li>\n<li><p>SlideExpandableListView<br>用户点击 listView item 滑出固定区域，其他 item 的区域收缩<br>项目地址：<a href=\"https://github.com/tjerkw/Android-SlideExpandableListView\" target=\"_blank\" rel=\"external\">https://github.com/tjerkw/Android-SlideExpandableListView</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/slide-expandable-listView-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/slide-expandable-listView-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>JazzyListView<br>ListView 及 GridView item 以特殊动画效果进入屏幕，效果包括 grow、cards、curl、wave、flip、fly 等等<br>项目地址：<a href=\"https://github.com/twotoasters/JazzyListView\" target=\"_blank\" rel=\"external\">https://github.com/twotoasters/JazzyListView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.twotoasters.jazzylistview.sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.twotoasters.jazzylistview.sample</a><br>在线演示：<a href=\"http://lab.hakim.se/scroll-effects/\" target=\"_blank\" rel=\"external\">http://lab.hakim.se/scroll-effects/</a>  </p>\n</li>\n<li><p>ListViewAnimations<br>带 Item 显示动画的 ListView，动画包括底部飞入、其他方向斜飞入、下层飞入、渐变消失、滑动删除等<br>项目地址：<a href=\"https://github.com/nhaarman/ListViewAnimations\" target=\"_blank\" rel=\"external\">https://github.com/nhaarman/ListViewAnimations</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.haarman.listviewanimations\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.haarman.listviewanimations</a><br>APP 示例：Google plus、Google Now 卡片式进入、小米系统中应用商店、联系人、游戏中心、音乐、文件管理器的 ListView、Ultimate、Light Flow Lite、TreinVerkeer、Running Coach、Pearl Jam Lyrics、Calorie Chart、Car Hire、Super BART、DK FlashCards、Counter Plus、Voorlees Verhaaltjes 2.0  </p>\n</li>\n<li><p>DevsmartLib-Android<br>横向 ListView<br>项目地址：<a href=\"https://github.com/dinocore1/DevsmartLib-Android\" target=\"_blank\" rel=\"external\">https://github.com/dinocore1/DevsmartLib-Android</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/horizontal-listview-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/horizontal-listview-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>TwoWayView<br>横向 ListView 的效果，继承自 AdapterView<br>项目地址：<a href=\"https://github.com/lucasr/twoway-view\" target=\"_blank\" rel=\"external\">https://github.com/lucasr/twoway-view</a>  </p>\n</li>\n<li><p>HorizontalVariableListView<br>支持 Item 宽度不一致的 ListView<br>项目地址：<a href=\"https://github.com/sephiroth74/HorizontalVariableListView\" target=\"_blank\" rel=\"external\">https://github.com/sephiroth74/HorizontalVariableListView</a>  </p>\n</li>\n<li><p>LinearListView<br>用 LinearLayout 实现的 ListView，可解决多个 ListView 并存等问题。目前自己也有需要，等亲自尝试过后会再具体介绍<br>项目地址：<a href=\"https://github.com/frankiesardo/LinearListView\" target=\"_blank\" rel=\"external\">https://github.com/frankiesardo/LinearListView</a>  </p>\n</li>\n<li><p>MultiChoiceAdapter<br>支持多选的 ListView Adapter<br>项目地址：<a href=\"https://github.com/ManuelPeinado/MultiChoiceAdapter\" target=\"_blank\" rel=\"external\">https://github.com/ManuelPeinado/MultiChoiceAdapter</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.manuelpeinado.multichoiceadapter.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.manuelpeinado.multichoiceadapter.demo</a>  </p>\n</li>\n<li><p>EnhancedListView<br>支持横向滑动删除列表项以及撤销删除的 ListView，该项目的前身是<a href=\"https://github.com/timroes/SwipeToDismissUndoList\" target=\"_blank\" rel=\"external\">SwipeToDismissUndoList</a><br>项目地址：<a href=\"https://github.com/timroes/EnhancedListView\" target=\"_blank\" rel=\"external\">https://github.com/timroes/EnhancedListView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=de.timroes.android.listviewdemo&amp;rdid=de.timroes.android.listviewdemo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=de.timroes.android.listviewdemo&amp;rdid=de.timroes.android.listviewdemo</a>  </p>\n</li>\n<li><p>ListBuddies<br>自动滚动的双列 ListView ，两个 ListView 滚动速度不一致，有视差效果<br>项目地址：<a href=\"https://github.com/jpardogo/ListBuddies\" target=\"_blank\" rel=\"external\">https://github.com/jpardogo/ListBuddies</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.jpardogo.android.listbuddies\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.jpardogo.android.listbuddies</a>  </p>\n</li>\n<li><p>SwipeMenuListView<br>针对 ListView item 的侧滑菜单<br>项目地址：<a href=\"https://github.com/baoyongzhang/SwipeMenuListView\" target=\"_blank\" rel=\"external\">https://github.com/baoyongzhang/SwipeMenuListView</a><br>APP 示例：手机 QQV5.0  </p>\n</li>\n<li><p>PagingListView<br>分页加载的 ListView。当滑动到 ListView 底部最后一个元素时，显示一个进度行，然后加载下一页数据，并显示。<br>项目地址：<a href=\"https://github.com/nicolasjafelle/PagingListView\" target=\"_blank\" rel=\"external\">https://github.com/nicolasjafelle/PagingListView</a>  </p>\n</li>\n<li><p>PullZoomView<br>支持下拉时 HeaderView 缩放的 ListView、ScrollView<br>项目地址：<a href=\"https://github.com/Frank-Zhu/PullZoomView\" target=\"_blank\" rel=\"external\">https://github.com/Frank-Zhu/PullZoomView</a>  </p>\n</li>\n<li><p>PullToZoomInListView<br>滑动 ListView 时使其 HeaderView 跟随滑动缩放<br>项目地址：<a href=\"https://github.com/matrixxun/PullToZoomInListView\" target=\"_blank\" rel=\"external\">https://github.com/matrixxun/PullToZoomInListView</a>  </p>\n</li>\n<li><p>CalendarListview<br>实现每个月一行日历效果的 ListView<br>项目地址：<a href=\"https://github.com/traex/CalendarListview\" target=\"_blank\" rel=\"external\">https://github.com/traex/CalendarListview</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/Rogary/CalendarListView%20%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90\" target=\"_blank\" rel=\"external\">CalendarListview</a>  </p>\n</li>\n<li><p>sticky-headers-recyclerview<br>GroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ListView，采用 support-v7 中的 RecyclerView 实现<br>项目地址：<a href=\"https://github.com/timehop/sticky-headers-recyclerview\" target=\"_blank\" rel=\"external\">https://github.com/timehop/sticky-headers-recyclerview</a>  </p>\n</li>\n<li><p>PullSeparateListView<br>到达顶部或底部继续拉动时，实现 Item 间的相互分离，两种模式：(1) 全部分离的模式，即屏幕内所有 Item 都会分离 (2)部分分离模式，以点击位置为分界点，部分 item 分离<br>项目地址：<a href=\"https://github.com/chiemy/PullSeparateListView\" target=\"_blank\" rel=\"external\">https://github.com/chiemy/PullSeparateListView</a>  </p>\n</li>\n<li><p>ExpandableLayout<br>Header 和 Content Item 都可以展开的 ExpandableListview<br>项目地址：<a href=\"https://github.com/traex/ExpandableLayout\" target=\"_blank\" rel=\"external\">https://github.com/traex/ExpandableLayout</a>  </p>\n</li>\n<li><p>PagedHeadListView<br>支持 paginated header 以及 material page indicator 的 ListView.<br>项目地址：<a href=\"https://github.com/JorgeCastilloPrz/PagedHeadListView\" target=\"_blank\" rel=\"external\">https://github.com/JorgeCastilloPrz/PagedHeadListView</a>  </p>\n</li>\n<li><p>CustomSwipeListView<br>支持左滑弹出自定义菜单，右滑删除且允许撤销，同时可以自定义滑动动画时间和滑动触发事件的时机等。<br>项目地址：<a href=\"https://github.com/xyczero/Android-CustomSwipeListView\" target=\"_blank\" rel=\"external\">https://github.com/xyczero/Android-CustomSwipeListView</a><br>Demo 地址：<a href=\"http://7u2jsw.com1.z0.glb.clouddn.com/githubCustomSwipeListView.apk\" target=\"_blank\" rel=\"external\">Download here</a>  </p>\n</li>\n<li><p>Pull-to-Refresh.Rentals-Android<br>提供一个简单可以自定义的下拉刷新实现，<a href=\"http://yalantis.com/\" target=\"_blank\" rel=\"external\">Yalantis</a> 出品。<br>项目地址：<a href=\"https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android\" target=\"_blank\" rel=\"external\">https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android</a>  </p>\n</li>\n<li><p>ScrollerCalendar<br>实现每行显示一年的 12 个月份的 RecyclerView 年历<br>项目地址：<a href=\"https://github.com/guanchao/ScrollerCalendar\" target=\"_blank\" rel=\"external\">https://github.com/guanchao/ScrollerCalendar</a>  </p>\n</li>\n<li><p>ExtractWordView<br>一个可以提取单词的 ListView,支持”放大镜”效果。<br>项目地址：<a href=\"https://github.com/jcodeing/ExtractWordView\" target=\"_blank\" rel=\"external\">https://github.com/jcodeing/ExtractWordView</a><br>Demo 地址：<a href=\"https://raw.githubusercontent.com/jcodeing/ExtractWordView/master/ExtractWordView-demo.apk\" target=\"_blank\" rel=\"external\">Download here</a>  </p>\n</li>\n<li><p>FlyRefresh<br>支持 ListView, GridView, RecyclerView, ScrollView 的下拉刷新<br>项目地址：<a href=\"https://github.com/race604/FlyRefresh\" target=\"_blank\" rel=\"external\">https://github.com/race604/FlyRefresh</a>  </p>\n</li>\n<li><p>MVCHelper<br>实现下拉刷新，滚动底部自动加载更多，分页加载，自动切换显示网络失败布局，暂无数据布局，支持任意 view，真正的 MVC 架构<br>支持切换主流下拉刷新框架 Android-PullToRefresh-Library,android-Ultra-Pull-To-Refresh-library，SwipeRefreshLayout<br>项目地址：<a href=\"https://github.com/LuckyJayce/MVCHelper\" target=\"_blank\" rel=\"external\">https://github.com/LuckyJayce/MVCHelper</a><br>Demo 地址：<a href=\"https://github.com/LuckyJayce/MVCHelper/blob/master/raw/MVCHelper_Demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/LuckyJayce/MVCHelper/blob/master/raw/MVCHelper_Demo.apk?raw=true</a>  </p>\n</li>\n<li><p>RecyclerViewSwipeDismiss<br>支持滑动 Item 操作、点击展开、拖动排序、展开后拖动排序等特性的 RecyclerView<br>项目地址：<a href=\"https://play.google.com/store/apps/details?id=com.h6ah4i.android.example.advrecyclerview\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.h6ah4i.android.example.advrecyclerview</a><br>视频：<a href=\"http://www.youtube.com/watch?feature=player_embedded&amp;v=S7cSwMArjUQ\" target=\"_blank\" rel=\"external\">http://www.youtube.com/watch?feature=player_embedded&amp;v=S7cSwMArjUQ</a>  </p>\n</li>\n<li><p>WaterDropListView<br>模仿 iOS 下拉刷新“水滴”效果，支持下拉刷新和上拉加载<br>项目地址：<a href=\"https://github.com/THEONE10211024/WaterDropListView\" target=\"_blank\" rel=\"external\">https://github.com/THEONE10211024/WaterDropListView</a>  </p>\n</li>\n<li><p>PopupListView<br>實現ListItem 點擊後置頂並可顯示客製化添加的item的內部View 的ListView<br>项目地址：<a href=\"https://github.com/s8871404/PopupListView\" target=\"_blank\" rel=\"external\">https://github.com/s8871404/PopupListView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.baobomb.popuplistview_sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.baobomb.popuplistview_sample</a>  </p>\n</li>\n<li><p>CircleRefreshLayout<br>一个包含有趣的动画的自定义下拉刷新布局<br>项目地址：<a href=\"https://github.com/tuesda/CircleRefreshLayout\" target=\"_blank\" rel=\"external\">https://github.com/tuesda/CircleRefreshLayout</a>  </p>\n</li>\n<li><p>EasyRecyclerView<br>一款简单易用的EasyRecyclerView<br>1.提供EasyRecyclerView，不需要写太多RecyclerView的配置代码<br>2.提供好一个可以适配单布局和多布局的RecyclerViewAdapter<br>3.提供了分割线的实现类，只需要传入一个DrawableId<br>项目地址：<a href=\"https://github.com/CaMnter/EasyRecyclerView\" target=\"_blank\" rel=\"external\">https://github.com/CaMnter/EasyRecyclerView</a>  </p>\n</li>\n<li><p>CanRefresh<br>可适配所有视图的下拉刷新上拉加载，并支持各种风格<br>项目地址：<a href=\"https://github.com/canyinghao/CanRefresh\" target=\"_blank\" rel=\"external\">https://github.com/canyinghao/CanRefresh</a>  </p>\n</li>\n</ol>\n<h3 id=\"二、ActionBar\"><a href=\"#二、ActionBar\" class=\"headerlink\" title=\"二、ActionBar\"></a>二、ActionBar</h3><ol>\n<li><p>ActionBarSherlock<br>为 Android 所有版本提供统一的 ActionBar，解决 4.0 以下 ActionBar 的适配问题<br>项目地址：<a href=\"https://github.com/JakeWharton/ActionBarSherlock\" target=\"_blank\" rel=\"external\">https://github.com/JakeWharton/ActionBarSherlock</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.actionbarsherlock.sample.demos\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.actionbarsherlock.sample.demos</a><br>标签：兼容库, ActionBar  </p>\n</li>\n<li><p>ActionBar-PullToRefresh<br>下拉刷新，ActionBar 出现加载中提示<br>项目地址：<a href=\"https://github.com/chrisbanes/ActionBar-PullToRefresh\" target=\"_blank\" rel=\"external\">https://github.com/chrisbanes/ActionBar-PullToRefresh</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=uk.co.senab.actionbarpulltorefresh.samples.stock\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=uk.co.senab.actionbarpulltorefresh.samples.stock</a><br>APP 示例：Gmail，Google Plus，知乎等  </p>\n</li>\n<li><p>FadingActionBar<br>ListView 向下滚动逐渐显现的 ActionBar<br>项目地址：<a href=\"https://github.com/ManuelPeinado/FadingActionBar\" target=\"_blank\" rel=\"external\">https://github.com/ManuelPeinado/FadingActionBar</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.manuelpeinado.fadingactionbar.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.manuelpeinado.fadingactionbar.demo</a><br>APP 示例：google music，知乎  </p>\n</li>\n<li><p>NotBoringActionBar<br>google music 下拉收缩的 ActionBar<br>项目地址：<a href=\"https://github.com/flavienlaurent/NotBoringActionBar\" target=\"_blank\" rel=\"external\">https://github.com/flavienlaurent/NotBoringActionBar</a><br>Demo 地址：<a href=\"http://flavienlaurent.com/blog/2013/11/20/making-your-action-bar-not-boring/\" target=\"_blank\" rel=\"external\">http://flavienlaurent.com/blog/2013/11/20/making-your-action-bar-not-boring/</a><br>APP 示例：Google 音乐  </p>\n</li>\n<li><p>RefreshActionItem<br>带进度显示和刷新按钮的 ActionBar<br>项目地址：<a href=\"https://github.com/ManuelPeinado/RefreshActionItem\" target=\"_blank\" rel=\"external\">https://github.com/ManuelPeinado/RefreshActionItem</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.manuelpeinado.refreshactionitem.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.manuelpeinado.refreshactionitem.demo</a><br>APP 示例：The New York Times，DevAppsDirect  </p>\n</li>\n<li><p>GlassActionBar<br>类似玻璃的有一定透明度的 ActionBar<br>项目地址：<a href=\"https://github.com/ManuelPeinado/GlassActionBar\" target=\"_blank\" rel=\"external\">https://github.com/ManuelPeinado/GlassActionBar</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.manuelpeinado.glassactionbardemo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.manuelpeinado.glassactionbardemo</a><br>APP 示例：google music  </p>\n</li>\n</ol>\n<h3 id=\"三、Menu\"><a href=\"#三、Menu\" class=\"headerlink\" title=\"三、Menu\"></a>三、Menu</h3><ol>\n<li><p>MenuDrawer<br>滑出式菜单，通过拖动屏幕边缘滑出菜单，支持屏幕上下左右划出，支持当前 View 处于上下层，支持 Windows 边缘、ListView 边缘、ViewPager 变化划出菜单等。<br>项目地址：<a href=\"https://github.com/SimonVT/android-menudrawer\" target=\"_blank\" rel=\"external\">https://github.com/SimonVT/android-menudrawer</a><br>Demo 地址：<a href=\"http://simonvt.github.io/android-menudrawer/\" target=\"_blank\" rel=\"external\">http://simonvt.github.io/android-menudrawer/</a><br>APP 示例：Gmail、Google Music 等大部分 google app  </p>\n</li>\n<li><p>SlidingMenu<br>滑出式菜单，通过拖动屏幕边缘滑出菜单，支持屏幕左右划出，支持菜单 zoom、scale、slide up 三种动画样式出现。与 MenuDrawer 相比而言，SlidingMenu 支持菜单动画样式出现，MenuDrawer 支持菜单 view 处于内容的上下层<br>项目地址：<a href=\"https://github.com/jfeinstein10/SlidingMenu\" target=\"_blank\" rel=\"external\">https://github.com/jfeinstein10/SlidingMenu</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/huxian99/SlidingMenu 源码解析\" target=\"_blank\" rel=\"external\">SlidingMenu</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.slidingmenu.example\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.slidingmenu.example</a><br>APP 示例：Foursquare, LinkedIn, Zappos, Rdio, Evernote Food, Plume, VLC for Android, ESPN ScoreCenter, MLS MatchDay, 9GAG, Wunderlist 2, The Verge, MTG Familiar, Mantano Reader, Falcon Pro (BETA), MW3 Barracks  </p>\n</li>\n<li><p>ArcMenu<br>支持类似 Path 的左下角动画旋转菜单及横向划出菜单、圆心弹出菜单<br>项目地址：<a href=\"https://github.com/daCapricorn/ArcMenu\" target=\"_blank\" rel=\"external\">https://github.com/daCapricorn/ArcMenu</a><br><a href=\"https://dl.dropboxusercontent.com/u/11369687/preview1.png\" target=\"_blank\" rel=\"external\">https://dl.dropboxusercontent.com/u/11369687/preview1.png</a><br><a href=\"https://dl.dropboxusercontent.com/u/11369687/raymenu.png\" target=\"_blank\" rel=\"external\">https://dl.dropboxusercontent.com/u/11369687/raymenu.png</a><br>APP 示例：Path  </p>\n</li>\n<li><p>android-satellite-menu<br>类似 Path 的左下角动画旋转菜单<br>项目地址：<a href=\"https://github.com/siyamed/android-satellite-menu\" target=\"_blank\" rel=\"external\">https://github.com/siyamed/android-satellite-menu</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/satellite-menu-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/satellite-menu-demo.apk?raw=true</a><br>APP 示例：Path  </p>\n</li>\n<li><p>radial-menu-widget<br>圆形菜单，支持二级菜单<br>项目地址：<a href=\"https://code.google.com/p/radial-menu-widget/\" target=\"_blank\" rel=\"external\">https://code.google.com/p/radial-menu-widget/</a>  </p>\n</li>\n<li><p>Android Wheel Menu<br>圆形旋转选取菜单<br>项目地址：<a href=\"https://github.com/anupcowkur/Android-Wheel-Menu\" target=\"_blank\" rel=\"external\">https://github.com/anupcowkur/Android-Wheel-Menu</a>  </p>\n</li>\n<li><p>FoldingNavigationDrawer<br>滑动并以折叠方式打开菜单<br>项目地址：<a href=\"https://github.com/tibi1712/FoldingNavigationDrawer-Android\" target=\"_blank\" rel=\"external\">https://github.com/tibi1712/FoldingNavigationDrawer-Android</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.ptr.folding.sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.ptr.folding.sample</a>  </p>\n</li>\n<li><p>AndroidResideMenu<br>仿 Dribbble 的边栏菜单<br>项目地址：<a href=\"https://github.com/SpecialCyCi/AndroidResideMenu\" target=\"_blank\" rel=\"external\">https://github.com/SpecialCyCi/AndroidResideMenu</a>  </p>\n</li>\n<li><p>CircularFloatingActionMenu<br>一个可定制的圆形的浮动菜单控件，类似于 Path 的圆形菜单。这个控件的可定制性更强，可以很容易的定制菜单出现消失时的动画，起始角度和半径。<br>项目地址：<a href=\"https://github.com/oguzbilgener/CircularFloatingActionMenu\" target=\"_blank\" rel=\"external\">https://github.com/oguzbilgener/CircularFloatingActionMenu</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/cpacm/CircularFloatingActionMenu 源码解析\" target=\"_blank\" rel=\"external\">CircularFloatingActionMenu</a><br>Demo 地址：<a href=\"https://github.com/oguzbilgener/CircularFloatingActionMenu/tree/master/samples\" target=\"_blank\" rel=\"external\">https://github.com/oguzbilgener/CircularFloatingActionMenu/tree/master/samples</a>  </p>\n</li>\n<li><p>NavigationDrawerSI<br>Navigation Drawer 的一个简单实现，滑动并以折叠方式打开菜单<br>项目地址：<a href=\"https://github.com/mmBs/NavigationDrawerSI\" target=\"_blank\" rel=\"external\">https://github.com/mmBs/NavigationDrawerSI</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi</a><br>APP 示例：<a href=\"https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi</a>  </p>\n</li>\n<li><p>DragLayout<br>使用 support.v4 包下的 ViewDragHelper 实现 QQ5.0 侧滑<br>项目地址：<a href=\"https://github.com/BlueMor/DragLayout\" target=\"_blank\" rel=\"external\">https://github.com/BlueMor/DragLayout</a>  </p>\n</li>\n<li><p>LDrawer<br>Material Design 形式的展开折叠 Icon<br>项目地址：<a href=\"https://github.com/ikimuhendis/LDrawer\" target=\"_blank\" rel=\"external\">https://github.com/ikimuhendis/LDrawer</a>  </p>\n</li>\n<li><p>Floating Action Button<br>悬浮的圆形菜单栏，支持组建滚动时自动隐藏及其他设置<br>项目地址：<a href=\"https://github.com/shamanland/floating-action-button\" target=\"_blank\" rel=\"external\">https://github.com/shamanland/floating-action-button</a>  </p>\n</li>\n<li><p>Side-Menu.Android<br>分类侧滑菜单，<a href=\"http://yalantis.com/\" target=\"_blank\" rel=\"external\">Yalantis</a> 出品。<br>项目地址：<a href=\"https://github.com/Yalantis/Side-Menu.Android\" target=\"_blank\" rel=\"external\">https://github.com/Yalantis/Side-Menu.Android</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/cpacm/Side Menu.Android 源码解析\" target=\"_blank\" rel=\"external\">Side-Menu.Android</a>  </p>\n</li>\n<li><p>Context-Menu.Android<br>可以方便快速集成漂亮带有动画效果的上下文菜单，<a href=\"http://yalantis.com/\" target=\"_blank\" rel=\"external\">Yalantis</a>出品。<br>项目地址：<a href=\"https://github.com/Yalantis/Context-Menu.Android\" target=\"_blank\" rel=\"external\">https://github.com/Yalantis/Context-Menu.Android</a>  </p>\n</li>\n<li><p>Droppy<br>支持多种样式的下拉菜单<br>项目地址：<a href=\"https://github.com/shehabic/Droppy\" target=\"_blank\" rel=\"external\">https://github.com/shehabic/Droppy</a>  </p>\n</li>\n<li><p>MaterialDrawer<br>Material Design 风格的导航抽屉，提供简便且强大的定制功能<br>项目地址：<a href=\"https://github.com/mikepenz/MaterialDrawer\" target=\"_blank\" rel=\"external\">https://github.com/mikepenz/MaterialDrawer</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details？id=com.mikepenz.materialdrawer.app\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details？id=com.mikepenz.materialdrawer.app</a>  </p>\n</li>\n<li><p>SlideBottomPanel<br>底部划出菜单，滑动时背景图透明度渐变，支持嵌套 LiewView 或 ScrollView<br>项目地址：<a href=\"https://github.com/kingideayou/SlideBottomPanel\" target=\"_blank\" rel=\"external\">https://github.com/kingideayou/SlideBottomPanel</a><br>Demo 地址：<a href=\"https://github.com/kingideayou/SlideBottomPanel/raw/master/apk/SlideBottomPanelDemo.apk\" target=\"_blank\" rel=\"external\">SlideBottomPanelDemo 下载</a>  </p>\n</li>\n<li><p>FlowingDrawer<br>带手势流动效果侧滑菜单<br>项目地址：<a href=\"https://github.com/mxn21/FlowingDrawer\" target=\"_blank\" rel=\"external\">https://github.com/mxn21/FlowingDrawer</a></p>\n</li>\n</ol>\n<h3 id=\"四、ViewPager-、Gallery\"><a href=\"#四、ViewPager-、Gallery\" class=\"headerlink\" title=\"四、ViewPager 、Gallery\"></a>四、ViewPager 、Gallery</h3><ol>\n<li><p>AdvancedPagerSlidingTabStrip<br>一个完美兼容ViewPager的导航栏组件；可以自定义TabView；能动态加载Tab上的Icon图片； 能显示Tab的消息数量和提示小圆点。<br>项目地址：<a href=\"https://github.com/HomHomLin/AdvancedPagerSlidingTabStrip\" target=\"_blank\" rel=\"external\">https://github.com/HomHomLin/AdvancedPagerSlidingTabStrip</a></p>\n</li>\n<li><p>ConvenientBanner<br>通用的广告栏控件，让你轻松实现广告头效果。支持无限循环，可以设置自动翻页和时间(而且非常智能，手指触碰则暂停翻页，离开自动开始翻页。你也可以设置在界面onPause的时候不进行自动翻页，onResume之后继续自动翻页)，并且提供多种翻页特效。 对比其他广告栏控件，大多都需要对源码进行改动才能加载网络图片，或者帮你集成不是你所需要的图片缓存库。而这个库能让有代码洁癖的你欢喜，不需要对库源码进行修改你就可以使用任何你喜欢的网络图片库进行配合。<br>项目地址：<a href=\"https://github.com/saiwu-bigkoo/Android-ConvenientBanner\" target=\"_blank\" rel=\"external\">https://github.com/saiwu-bigkoo/Android-ConvenientBanner</a>  </p>\n</li>\n<li><p>Android-ViewPagerIndicator<br>配合 ViewPager 使用的 Indicator，支持各种位置和样式<br>项目地址：<a href=\"https://github.com/JakeWharton/Android-ViewPagerIndicator\" target=\"_blank\" rel=\"external\">https://github.com/JakeWharton/Android-ViewPagerIndicator</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.viewpagerindicator.sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.viewpagerindicator.sample</a><br>APP 示例：太多了。。  </p>\n</li>\n<li><p>JazzyViewPager<br>支持 Fragment 切换动画的 ViewPager，动画包括转盘、淡入淡出、翻页、层叠、旋转、方块、翻转、放大缩小等，效果类似桌面左右切换的各种效果，不过桌面并非用 ViewPager 实现而已<br>项目地址：<a href=\"https://github.com/jfeinstein10/JazzyViewPager\" target=\"_blank\" rel=\"external\">https://github.com/jfeinstein10/JazzyViewPager</a><br>Demo 地址：<a href=\"https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true</a>  </p>\n</li>\n<li><p>JellyViewPager<br>特殊切换动画的 ViewPager<br>项目地址：<a href=\"https://github.com/chiemy/JellyViewPager\" target=\"_blank\" rel=\"external\">https://github.com/chiemy/JellyViewPager</a>  </p>\n</li>\n<li><p>Android-DirectionalViewPager<br>支持横向和纵向(垂直)的 ViewPager<br>项目地址：<a href=\"https://github.com/JakeWharton/Android-DirectionalViewPager\" target=\"_blank\" rel=\"external\">https://github.com/JakeWharton/Android-DirectionalViewPager</a><br>Demo 地址：<a href=\"https://market.android.com/details?id=com.directionalviewpager.sample\" target=\"_blank\" rel=\"external\">https://market.android.com/details?id=com.directionalviewpager.sample</a>  </p>\n</li>\n<li><p>FancyCoverFlow<br>支持 Item 切换动画效果的类似 Gallery View<br>项目地址：<a href=\"https://github.com/davidschreiber/FancyCoverFlow\" target=\"_blank\" rel=\"external\">https://github.com/davidschreiber/FancyCoverFlow</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=at.technikum.mti.fancycoverflow.samples\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=at.technikum.mti.fancycoverflow.samples</a>  </p>\n</li>\n<li><p>AndroidTouchGallery<br>支持双击或双指缩放的 Gallery(用 ViewPager 实现)，相比下面的 PhotoView，在被放大后依然能滑到下一个 item，并且支持直接从 url 和文件中获取图片，<br>项目地址：<a href=\"https://github.com/Dreddik/AndroidTouchGallery\" target=\"_blank\" rel=\"external\">https://github.com/Dreddik/AndroidTouchGallery</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/touch-gallery-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/touch-gallery-demo.apk?raw=true</a><br>APP 示例：类似微信中查看聊天记录图片时可双击放大，并且放大情况下能正常左右滑动到前后图片  </p>\n</li>\n<li><p>Android Auto Scroll ViewPager<br>Android 自动滚动 轮播循环的 ViewPager<br>项目地址：<a href=\"https://github.com/Trinea/android-auto-scroll-view-pager\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/android-auto-scroll-view-pager</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=cn.trinea.android.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=cn.trinea.android.demo</a><br>文档介绍：<a href=\"http://www.trinea.cn/android/auto-scroll-view-pager/\" target=\"_blank\" rel=\"external\">http://www.trinea.cn/android/auto-scroll-view-pager/</a>  </p>\n</li>\n<li><p>Android PagerSlidingTabStrip<br>配合 ViewPager 使用的 Indicator，支持 ViewPager Scroll 时 Indicator 联动<br>项目地址：<a href=\"https://github.com/astuetz/PagerSlidingTabStrip\" target=\"_blank\" rel=\"external\">https://github.com/astuetz/PagerSlidingTabStrip</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/ayyb1988/PagerSlidingTabStrip 源码解析\" target=\"_blank\" rel=\"external\">Android PagerSlidingTabStrip</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.astuetz.viewpager.extensions.sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.astuetz.viewpager.extensions.sample</a>  </p>\n</li>\n<li><p>ViewPager3D<br>ViewPager3D 效果<br>项目地址：<a href=\"https://github.com/inovex/ViewPager3D\" target=\"_blank\" rel=\"external\">https://github.com/inovex/ViewPager3D</a>  </p>\n</li>\n<li><p>AnimaTabsview<br>仿网易云音乐标签切换的动画,带透明小三角<br>项目地址：<a href=\"https://github.com/wuyexiong/transparent-over-animtabsview\" target=\"_blank\" rel=\"external\">https://github.com/wuyexiong/transparent-over-animtabsview</a><br>在线演示：<a href=\"http://v.youku.com/v_show/id_XNzA4MjY5NjA0.html\" target=\"_blank\" rel=\"external\">http://v.youku.com/v_show/id_XNzA4MjY5NjA0.html</a>  </p>\n</li>\n<li><p>LoopingViewPager<br>无限循环的 ViewPager<br>项目地址：<a href=\"https://github.com/imbryk/LoopingViewPager\" target=\"_blank\" rel=\"external\">https://github.com/imbryk/LoopingViewPager</a>  </p>\n</li>\n<li><p>android_page_curl<br>翻书卷曲效果<br>项目地址：<a href=\"https://github.com/harism/android_page_curl\" target=\"_blank\" rel=\"external\">https://github.com/harism/android_page_curl</a><br>在线演示：<a href=\"https://www.youtube.com/watch?v=iwu7P5PCpsw\" target=\"_blank\" rel=\"external\">https://www.youtube.com/watch?v=iwu7P5PCpsw</a><br>APP 示例：iReader  </p>\n</li>\n<li><p>ViewPagerIndicator<br>简化并实现 android 的 TabHost 效果，顶部滑动 tab，引导页，支持自定义 tab 样式,自定义滑动块样式和位置,自定义切换 tab 的过渡动画,子界面的预加载和界面缓存,设置界面是否可滑动<br>项目地址：<a href=\"https://github.com/LuckyJayce/ViewPagerIndicator\" target=\"_blank\" rel=\"external\">https://github.com/LuckyJayce/ViewPagerIndicator</a>  </p>\n</li>\n<li><p>ScreenSlideIndicator<br>轻量级的圆形 Indicadtor，位置可以自由调整，不会对 ViewPager 产生任何影响。<br>项目地址：<a href=\"https://github.com/LyndonChin/Android-ScreenSlidePager\" target=\"_blank\" rel=\"external\">ScreenSlidePager</a>  </p>\n</li>\n<li><p>SmartTabLayout<br>自定义的 Tab title strip，基于 Google Samples 中的 android-SlidingTabBasic 项目，滑动时 Indicator 可平滑过渡。<br>项目地址：<a href=\"https://github.com/ogaclejapan/SmartTabLayout\" target=\"_blank\" rel=\"external\">https://github.com/ogaclejapan/SmartTabLayout</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.ogaclejapan.smarttablayout.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.ogaclejapan.smarttablayout.demo</a>  </p>\n</li>\n<li><p>AndroidImageSlider<br>Android 图片滑动<br>项目地址：<a href=\"https://github.com/daimajia/AndroidImageSlider\" target=\"_blank\" rel=\"external\">https://github.com/daimajia/AndroidImageSlider</a><br>App示例：<a href=\"https://github.com/daimajia/AndroidImageSlider/releases/download/v1.0.8/demo-1.0.8.apk\" target=\"_blank\" rel=\"external\">https://github.com/daimajia/AndroidImageSlider/releases/download/v1.0.8/demo-1.0.8.apk</a>  </p>\n</li>\n<li><p>RecyclerViewPager<br>完全继承自 RecyclerView，可以自定义触发翻页的距离，可自定义翻页速度，支持垂直方向的 ViewPager，支持 Fragment。<br>项目地址：<a href=\"https://github.com/lsjwzh/RecyclerViewPager\" target=\"_blank\" rel=\"external\">RecyclerViewPager</a>  </p>\n</li>\n<li><p>CircleIndicator<br>轻量级ViewPager指示器,支持三种不同的模式<br>项目地址：<a href=\"https://github.com/THEONE10211024/CircleIndicator\" target=\"_blank\" rel=\"external\">CircleIndicator</a>  </p>\n</li>\n<li><p>EasySlidingTabs<br>一款简单、易用的滑动标签页<br>项目地址： <a href=\"https://github.com/CaMnter/EasySlidingTabs\" target=\"_blank\" rel=\"external\">https://github.com/CaMnter/EasySlidingTabs</a>  </p>\n</li>\n</ol>\n<h3 id=\"五、GridView\"><a href=\"#五、GridView\" class=\"headerlink\" title=\"五、GridView\"></a>五、GridView</h3><ol>\n<li><p>StaggeredGridView<br>允许非对齐行的 GridView，类似 Pinterest 的瀑布流，并且跟 ListView 一样自带 View 缓存，继承自 ViewGroup<br>项目地址：<a href=\"https://github.com/maurycyw/StaggeredGridView\" target=\"_blank\" rel=\"external\">https://github.com/maurycyw/StaggeredGridView</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/staggered-gridview-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/staggered-gridview-demo.apk?raw=true</a><br>APP 示例：Pinterest 等  </p>\n</li>\n<li><p>AndroidStaggeredGrid<br>允许非对齐行的 GridView，类似 Pinterest 的瀑布流，继承自 AbsListView<br>项目地址：<a href=\"https://github.com/etsy/AndroidStaggeredGrid\" target=\"_blank\" rel=\"external\">https://github.com/etsy/AndroidStaggeredGrid</a><br>APP 示例：Pinterest 等  </p>\n</li>\n<li><p>PinterestLikeAdapterView<br>允许非对齐行的 GridView，类似 Pinterest 的瀑布流，允许下拉刷新<br>项目地址：<a href=\"https://github.com/GDG-Korea/PinterestLikeAdapterView\" target=\"_blank\" rel=\"external\">https://github.com/GDG-Korea/PinterestLikeAdapterView</a><br>APP 示例：Pinterest 等  </p>\n</li>\n<li><p>DraggableGridView<br>Item 可拖动交换位置的 GridView，实际是自己继承 ViewGroup 实现，类似桌面的单屏效果，可屏幕自动上下滚动进行 Item 移动交换，多屏效果见下面 PagedDragDropGrid<br>项目地址：<a href=\"https://github.com/thquinn/DraggableGridView\" target=\"_blank\" rel=\"external\">https://github.com/thquinn/DraggableGridView</a><br>Demo 地址：<a href=\"https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true</a><br>也可以自定义item的宽高和每行的个数，并且修改交换逻辑，当移动到另一个item时就进行交换，删除滚动逻辑。<br>项目地址：<a href=\"https://github.com/andyken/DraggableGridView\" target=\"_blank\" rel=\"external\">DraggableGridView</a>  </p>\n</li>\n<li><p>StickyGridHeaders<br>GroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 GridView<br>项目地址：<a href=\"https://github.com/TonicArtos/StickyGridHeaders\" target=\"_blank\" rel=\"external\">https://github.com/TonicArtos/StickyGridHeaders</a>  </p>\n</li>\n<li><p>PagedDragDropGrid<br>Item 可拖动交换位置、拖动删除的自定义控件，实际是自己继承 ViewGroup 实现，类似桌面的多屏效果，可拖动到屏幕边缘，屏幕自动左右滚动进行 Item 移动交换，可拖动进行删除，单屏效果见上面 DraggableGridView<br>项目地址：<a href=\"https://github.com/mrKlar/PagedDragDropGrid\" target=\"_blank\" rel=\"external\">https://github.com/mrKlar/PagedDragDropGrid</a><br>在线演示：<a href=\"http://youtu.be/FYTSRfthSuQ\" target=\"_blank\" rel=\"external\">http://youtu.be/FYTSRfthSuQ</a>  </p>\n</li>\n<li><p>Android-DraggableGridViewPager<br>Item 可拖动交换位置的 GridView，实际是自己继承 ViewGroup 实现，类似桌面的多屏效果，可屏幕自动左右滚动进行 Item 移动交换，单屏效果见上面 DraggableGridView<br>项目地址：<a href=\"https://github.com/zzhouj/Android-DraggableGridViewPager\" target=\"_blank\" rel=\"external\">https://github.com/zzhouj/Android-DraggableGridViewPager</a><br>Demo 地址：<a href=\"https://github.com/Trinea/trinea-download/blob/master/draggable-grid-viewpager-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/trinea-download/blob/master/draggable-grid-viewpager-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>TwoWayGridView<br>可横向滚动的 GridView<br>项目地址：<a href=\"https://github.com/jess-anders/two-way-gridview\" target=\"_blank\" rel=\"external\">https://github.com/jess-anders/two-way-gridview</a>  </p>\n</li>\n<li><p>PagingGridView<br>分页加载的 GridView。当滑动到 GridView 底部最后一个行时，显示一个进度行，然后加载下一页数据，并显示。<br>项目地址：<a href=\"https://github.com/nicolasjafelle/PagingGridView\" target=\"_blank\" rel=\"external\">https://github.com/nicolasjafelle/PagingGridView</a>  </p>\n</li>\n<li><p>AsymmetricGridView<br>一个支持跨行和跨列可变 Item 大小的 GridView<br>项目地址：<a href=\"https://github.com/felipecsl/AsymmetricGridView\" target=\"_blank\" rel=\"external\">https://github.com/felipecsl/AsymmetricGridView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.felipecsl.asymmetricgridview.app\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.felipecsl.asymmetricgridview.app</a>  </p>\n</li>\n<li><p>GridView with Header and Footer<br>和<code>ListView</code>一样带头部和底部的<code>GridView</code>，用法和<code>ListView</code>一样<br>项目地址：<a href=\"https://github.com/liaohuqiu/android-GridViewWithHeaderAndFooter\" target=\"_blank\" rel=\"external\">https://github.com/liaohuqiu/android-GridViewWithHeaderAndFooter</a>  </p>\n</li>\n</ol>\n<h3 id=\"六、ImageView\"><a href=\"#六、ImageView\" class=\"headerlink\" title=\"六、ImageView\"></a>六、ImageView</h3><ol>\n<li><p>PhotoView<br>支持双击或双指缩放的 ImageView，在 ViewPager 等 Scrolling view 中正常使用，相比上面的 AndroidTouchGallery，不仅支持 ViewPager，同时支持单个 ImageView<br>项目地址：<a href=\"https://github.com/chrisbanes/PhotoView\" target=\"_blank\" rel=\"external\">https://github.com/chrisbanes/PhotoView</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/dkmeteor/PhotoView 源码解析\" target=\"_blank\" rel=\"external\">PhotoView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=uk.co.senab.photoview.sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=uk.co.senab.photoview.sample</a><br>APP 示例：photup  </p>\n</li>\n<li><p>Fresco-ImageView<br>Fresco-ImageView是一种Android平台的图像控件，底层是对Fresco的封装，可以异步加载网络图片、项目资源和本地图片，并且支持双指缩放、图片的基本处理以及Fresco的所有特性。<br>项目地址：<a href=\"https://github.com/HomHomLin/FrescoImageView。\" target=\"_blank\" rel=\"external\">https://github.com/HomHomLin/FrescoImageView。</a>  </p>\n</li>\n<li><p>android-gif-drawable<br>支持 gif 显示的 view，用 jni 实现的，编译生成 so 库后直接 xml 定义 view 即可，而且本身不依赖于其他开源项目所以相对下面的 ImageViewEx 简单的多<br>项目地址：<a href=\"https://github.com/koral--/android-gif-drawable\" target=\"_blank\" rel=\"external\">https://github.com/koral--/android-gif-drawable</a>  </p>\n</li>\n<li><p>ImageViewEx<br>支持 Gif 显示的 ImageView，依赖很多，编译过程很繁琐<br>项目地址：<a href=\"https://github.com/frapontillo/ImageViewEx\" target=\"_blank\" rel=\"external\">https://github.com/frapontillo/ImageViewEx</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/imageviewex-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/imageviewex-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>RoundedImageView<br>带圆角的 ImageView<br>项目地址：<a href=\"https://github.com/vinc3m1/RoundedImageView\" target=\"_blank\" rel=\"external\">https://github.com/vinc3m1/RoundedImageView</a>  </p>\n</li>\n<li><p>SelectableRoundedImageView<br>ImageView 允许四个角的每一个有不同的半径值。也允许椭圆形、圆形的形状或者边<br>项目地址：<a href=\"https://github.com/pungrue26/SelectableRoundedImageView\" target=\"_blank\" rel=\"external\">https://github.com/pungrue26/SelectableRoundedImageView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.joooonho\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.joooonho</a>  </p>\n</li>\n<li><p>ColorArt<br>根据图片的均色设置背景色显示文字和图片，类似 itune11 中效果<br>项目地址：<a href=\"https://github.com/MichaelEvans/ColorArt\" target=\"_blank\" rel=\"external\">https://github.com/MichaelEvans/ColorArt</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/color-art-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/color-art-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>CircleImageView<br>圆形的 ImageView<br>项目地址：<a href=\"https://github.com/hdodenhof/CircleImageView\" target=\"_blank\" rel=\"external\">https://github.com/hdodenhof/CircleImageView</a>  </p>\n</li>\n<li><p>ImageViewZoom<br>支持放大和平移的 ImageView<br>项目地址：<a href=\"https://github.com/sephiroth74/ImageViewZoom\" target=\"_blank\" rel=\"external\">https://github.com/sephiroth74/ImageViewZoom</a><br>APP 示例：<a href=\"https://play.google.com/store/apps/details?id=com.aviary.android.feather\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.aviary.android.feather</a>  </p>\n</li>\n<li><p>KenBurnsView<br>实现 Ken Burns effect 效果，达到身临其境效果的 ImageView<br>项目地址：<a href=\"https://github.com/flavioarfaria/KenBurnsView\" target=\"_blank\" rel=\"external\">https://github.com/flavioarfaria/KenBurnsView</a>  </p>\n</li>\n<li><p>CustomShapeImageView<br>各种形状的 ImageView, 相比上面的圆形 ImageView，多了更多形状<br>项目地址：<a href=\"https://github.com/MostafaGazar/CustomShapeImageView\" target=\"_blank\" rel=\"external\">https://github.com/MostafaGazar/CustomShapeImageView</a>  </p>\n</li>\n<li><p>Shape Image View<br>可以自定义各种形状的 ImageView, 并且支持边框<br>项目地址：<a href=\"https://github.com/siyamed/android-shape-imageview\" target=\"_blank\" rel=\"external\">https://github.com/siyamed/android-shape-imageview</a>  </p>\n</li>\n<li><p>TextDrawable<br>一个用于生成带有文本或者字母的图片的轻量级库。扩展自 Drawable，因此可用于现有/自定义/网络等 ImageView 类，并且包含一个流接口用于创建 drawables 以及一个定制的 ColorGenerator<br>项目地址：<a href=\"https://github.com/amulyakhare/TextDrawable\" target=\"_blank\" rel=\"external\">https://github.com/amulyakhare/TextDrawable</a>  </p>\n</li>\n<li><p>android-smart-image-view<br>可从 URL 或 contact address book 加载图片的 ImageView，支持缓存<br>项目地址：<a href=\"https://github.com/loopj/android-smart-image-view\" target=\"_blank\" rel=\"external\">https://github.com/loopj/android-smart-image-view</a>  </p>\n</li>\n<li><p>PhotoView<br>支持双指/双击缩放的ImageView,支持从一个PhotoView缩放到另外一个PhotoView(点击图片放大预览),相对于其他PhototView有更加平滑的缩放,平移的动画,并且支持所有的ScaleType,可以作为普通的ImageView使用<br>项目地址：<a href=\"https://github.com/bm-x/PhotoView\" target=\"_blank\" rel=\"external\">https://github.com/bm-x/PhotoView</a>  </p>\n</li>\n</ol>\n<h3 id=\"七、ProgressBar\"><a href=\"#七、ProgressBar\" class=\"headerlink\" title=\"七、ProgressBar\"></a>七、ProgressBar</h3><ol>\n<li><p>SmoothProgressBar<br>水平进度条<br>项目地址：<a href=\"https://github.com/castorflex/SmoothProgressBar\" target=\"_blank\" rel=\"external\">https://github.com/castorflex/SmoothProgressBar</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=fr.castorflex.android.smoothprogressbar.sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=fr.castorflex.android.smoothprogressbar.sample</a>  </p>\n</li>\n<li><p>MaterialProgessBar<br>Material Design 的进度条，支持 Android 4.0<br>项目地址：<a href=\"https://github.com/DreaminginCodeZH/MaterialProgressBar\" target=\"_blank\" rel=\"external\">https://github.com/DreaminginCodeZH/MaterialProgressBar</a><br>Demo 地址：<a href=\"https://github.com/DreaminginCodeZH/MaterialProgressBar/blob/master/dist/sample.apk\" target=\"_blank\" rel=\"external\">https://github.com/DreaminginCodeZH/MaterialProgressBar/blob/master/dist/sample.apk</a>  </p>\n</li>\n<li><p>ProgressWheel<br>支持进度显示的圆形 ProgressBar<br>项目地址：<a href=\"https://github.com/Todd-Davies/ProgressWheel\" target=\"_blank\" rel=\"external\">https://github.com/Todd-Davies/ProgressWheel</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/progress-wheel-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/progress-wheel-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>android-square-progressbar<br>在图片周围显示进度<br>项目地址：<a href=\"https://github.com/mrwonderman/android-square-progressbar\" target=\"_blank\" rel=\"external\">https://github.com/mrwonderman/android-square-progressbar</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=net.yscs.android.square_progressbar_example\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=net.yscs.android.square_progressbar_example</a><br>APP 示例：square  </p>\n</li>\n<li><p>HoloCircularProgressBar<br>Android4.1 时钟 App 样式<br>项目地址：<a href=\"https://github.com/passsy/android-HoloCircularProgressBar\" target=\"_blank\" rel=\"external\">https://github.com/passsy/android-HoloCircularProgressBar</a><br>APP 示例：Android4.1 时钟 App  </p>\n</li>\n<li><p>ProgressButton<br>通过图钉的不同状态显示进度<br>项目地址：<a href=\"https://github.com/f2prateek/progressbutton\" target=\"_blank\" rel=\"external\">https://github.com/f2prateek/progressbutton</a><br>文档介绍：<a href=\"http://f2prateek.com/progressbutton/\" target=\"_blank\" rel=\"external\">http://f2prateek.com/progressbutton/</a>  </p>\n</li>\n<li><p>GoogleProgressBar<br>类似 google 多个圆形卡片翻转的 progressBar<br>项目地址：<a href=\"https://github.com/jpardogo/GoogleProgressBar\" target=\"_blank\" rel=\"external\">https://github.com/jpardogo/GoogleProgressBar</a>  </p>\n</li>\n<li><p>TH-ProgressButton<br>带圆形进度显示的按钮<br>项目地址：<a href=\"https://github.com/torryharris/TH-ProgressButton\" target=\"_blank\" rel=\"external\">https://github.com/torryharris/TH-ProgressButton</a>  </p>\n</li>\n<li><p>NumberProgressBar<br>带数字进度的进度条<br>项目地址：<a href=\"https://github.com/daimajia/NumberProgressBar\" target=\"_blank\" rel=\"external\">https://github.com/daimajia/NumberProgressBar</a>  </p>\n</li>\n<li><p>CircularProgressDrawable<br>带圆形进度显示的进度条<br>项目地址：<a href=\"https://github.com/Sefford/CircularProgressDrawable\" target=\"_blank\" rel=\"external\">https://github.com/Sefford/CircularProgressDrawable</a>  </p>\n</li>\n<li><p>Android-RoundCornerProgressBar<br>Android 圆角 ProgressBar，可自定义圆角颜色和半径，包括带 Icon 和不带 Icon 两种类型。<br>项目地址：<a href=\"https://github.com/akexorcist/Android-RoundCornerProgressBar\" target=\"_blank\" rel=\"external\">https://github.com/akexorcist/Android-RoundCornerProgressBar</a>  </p>\n</li>\n<li><p>circular-progress-button<br>带进度显示的 Button<br>项目地址：<a href=\"https://github.com/dmytrodanylyk/circular-progress-button\" target=\"_blank\" rel=\"external\">https://github.com/dmytrodanylyk/circular-progress-button</a>  </p>\n</li>\n<li><p>WaveView<br>一个波纹效果的 View，可用来做 ProgressBar<br>项目地址：<a href=\"https://github.com/john990/WaveView\" target=\"_blank\" rel=\"external\">https://github.com/john990/WaveView</a><br>Demo 地址：<a href=\"https://raw.github.com/john990/WaveView/master/screenshot%26apk/demo.unaligned.apk\" target=\"_blank\" rel=\"external\">https://raw.github.com/john990/WaveView/master/screenshot%26apk/demo.unaligned.apk</a>  </p>\n</li>\n<li><p>MaterialLoadingProgressBar<br>抽取自 SwipeRefreshLayout 的 Material Design 进度指示器<br>项目地址：<a href=\"https://github.com/lsjwzh/MaterialLoadingProgressBar\" target=\"_blank\" rel=\"external\">https://github.com/lsjwzh/MaterialLoadingProgressBar</a>  </p>\n</li>\n<li><p>MetaballLoading<br>A 2d metaball loading<br>项目地址：<a href=\"https://github.com/dodola/MetaballLoading\" target=\"_blank\" rel=\"external\">https://github.com/dodola/MetaballLoading</a></p>\n</li>\n<li><p>SectorProgressView<br>一个圆形或环形的进度显示控件，用圆中扇形的角度大小来表示进度信息<br>项目地址：<a href=\"https://github.com/timqi/SectorProgressView\" target=\"_blank\" rel=\"external\">https://github.com/timqi/SectorProgressView</a><br>Demo：<a href=\"https://github.com/timqi/SectorProgressView/raw/master/art/example.apk\" target=\"_blank\" rel=\"external\">apk download</a> </p>\n</li>\n<li><p>CircularFillableLoaders<br>一个可以用于闪屏或者其他地方加载的控件<br>项目地址：<a href=\"https://github.com/lopspower/CircularFillableLoaders\" target=\"_blank\" rel=\"external\">https://github.com/lopspower/CircularFillableLoaders</a><br>Demo地址：(<a href=\"https://play.google.com/store/apps/details?id=com.mikhaellopez.circularfillableloaderssample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.mikhaellopez.circularfillableloaderssample</a>) </p>\n</li>\n<li><p>PinWheel<br>一个旋转的大风车Dialog<br>项目地址：<a href=\"https://github.com/codingWang/PinWheel\" target=\"_blank\" rel=\"external\">https://github.com/codingWang/PinWheel</a></p>\n</li>\n<li><p>ColorArcProgressBar<br>一个可定制的圆形进度条，通过xml参数配置可实现QQ健康中步数的弧形进度显示、仪盘表显示速度、最常见的下载进度条等功能。<br>项目地址：<a href=\"https://github.com/Shinelw/ColorArcProgressBar\" target=\"_blank\" rel=\"external\">https://github.com/Shinelw/ColorArcProgressBar</a></p>\n</li>\n</ol>\n<h3 id=\"八、TextView\"><a href=\"#八、TextView\" class=\"headerlink\" title=\"八、TextView\"></a>八、TextView</h3><p>包括 TextView 及所有继承自 TextView 控件，如 EditText、Button、RadioButton  </p>\n<ol>\n<li><p>android-flowtextview<br>文字自动环绕其他 View 的 Layout<br>项目地址：<a href=\"https://github.com/deano2390/FlowTextView\" target=\"_blank\" rel=\"external\">https://github.com/deano2390/FlowTextView</a>  </p>\n</li>\n<li><p>Android Form EditText<br>验证输入合法性的编辑框，支持输入、英文、ip、url 等多种正则验证<br>项目地址：<a href=\"https://github.com/vekexasia/android-edittext-validator\" target=\"_blank\" rel=\"external\">https://github.com/vekexasia/android-edittext-validator</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.andreabaccega.edittextformexample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.andreabaccega.edittextformexample</a>  </p>\n</li>\n<li><p>Emojicon<br>支持 emojis 的 TextView 和 EditText<br>项目地址：<a href=\"https://github.com/rockerhieu/emojicon\" target=\"_blank\" rel=\"external\">https://github.com/rockerhieu/emojicon</a><br>文档介绍：<a href=\"http://rockerhieu.com/emojicon/\" target=\"_blank\" rel=\"external\">http://rockerhieu.com/emojicon/</a>  </p>\n</li>\n<li><p>android-circlebutton<br>Android 圆形按钮，实际实现是继承自 ImageView<br>项目地址：<a href=\"https://github.com/markushi/android-circlebutton\" target=\"_blank\" rel=\"external\">https://github.com/markushi/android-circlebutton</a><br>Demo 地址：<a href=\"https://github.com/markushi/android-circlebutton/blob/master/example/example.apk\" target=\"_blank\" rel=\"external\">https://github.com/markushi/android-circlebutton/blob/master/example/example.apk</a>  </p>\n</li>\n<li><p>Segmented Radio Buttons for Android<br>iOS’s segmented controls 的实现<br>项目地址：<a href=\"https://github.com/vinc3m1/android-segmentedradiobutton\" target=\"_blank\" rel=\"external\">https://github.com/vinc3m1/android-segmentedradiobutton</a><br>Demo 地址：<a href=\"https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true</a>  </p>\n</li>\n<li><p>Chips EditText Library<br>支持国家名字联想从而选择显示该国国旗的 EditText，实际就是通过 SpannableStringBuilder 实现<br>项目地址：<a href=\"https://github.com/kpbird/chips-edittext-library\" target=\"_blank\" rel=\"external\">https://github.com/kpbird/chips-edittext-library</a><br>Demo 地址：<a href=\"https://github.com/kpbird/chips-edittext-library/tree/master/ChipsEditTextDemo/bin\" target=\"_blank\" rel=\"external\">https://github.com/kpbird/chips-edittext-library/tree/master/ChipsEditTextDemo/bin</a>  </p>\n</li>\n<li><p>AutoFitTextView<br>可固定边界内容字体大小自适应的 TextView<br>项目地址：<a href=\"https://github.com/grantland/android-autofittextview\" target=\"_blank\" rel=\"external\">https://github.com/grantland/android-autofittextview</a>  </p>\n</li>\n<li><p>Shimmer for Android<br>文字发淡光的 TextView<br>项目地址：<a href=\"https://github.com/RomainPiel/Shimmer-android\" target=\"_blank\" rel=\"external\">https://github.com/RomainPiel/Shimmer-android</a>  </p>\n</li>\n<li><p>Titanic<br>可以显示水位上升下降(不知道该怎么描述 囧)的 TextView<br>项目地址：<a href=\"https://github.com/RomainPiel/Titanic\" target=\"_blank\" rel=\"external\">https://github.com/RomainPiel/Titanic</a>  </p>\n</li>\n<li><p>android-iconify<br>提供带 Icon 的 TextView,Menu,Button 等<br>项目地址：<a href=\"https://github.com/JoanZapata/android-iconify\" target=\"_blank\" rel=\"external\">https://github.com/JoanZapata/android-iconify</a>  </p>\n</li>\n<li><p>Calligraphy<br>让我们在 android 开发中使用自定义字体变得更加简单<br>项目地址：<a href=\"https://github.com/chrisjenx/Calligraphy\" target=\"_blank\" rel=\"external\">https://github.com/chrisjenx/Calligraphy</a>  </p>\n</li>\n<li><p>CreditsRoll<br>类似星球大战字幕效果的 TextView<br>项目地址：<a href=\"https://github.com/frakbot/CreditsRoll\" target=\"_blank\" rel=\"external\">https://github.com/frakbot/CreditsRoll</a>  </p>\n</li>\n<li><p>android-process-buton<br>带加载或提交进度的 Button<br>项目地址：<a href=\"https://github.com/dmytrodanylyk/android-process-buton\" target=\"_blank\" rel=\"external\">https://github.com/dmytrodanylyk/android-process-buton</a>  </p>\n</li>\n<li><p>FButton<br>扁平化的 Button<br>项目地址：<a href=\"https://github.com/hoang8f/android-flat-button\" target=\"_blank\" rel=\"external\">https://github.com/hoang8f/android-flat-button</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo</a>  </p>\n</li>\n<li><p>FloatingActionButton<br>一个类似 Android 版 Google+浮动功能按钮的控件，可以响应 ListView 的滚动事件。当列表向上滚动的时候会自动显示，向下滚动的时候自动隐藏。<br>项目地址：<a href=\"https://github.com/makovkastar/FloatingActionButton\" target=\"_blank\" rel=\"external\">https://github.com/makovkastar/FloatingActionButton</a><br>Demo 地址：<a href=\"https://github.com/makovkastar/FloatingActionButton/tree/master/\" target=\"_blank\" rel=\"external\">https://github.com/makovkastar/FloatingActionButton/tree/master/</a>  </p>\n</li>\n<li><p>Android Saripaar<br>Android 表单验证<br>项目地址：<a href=\"https://github.com/ragunathjawahar/android-saripaar/\" target=\"_blank\" rel=\"external\">https://github.com/ragunathjawahar/android-saripaar/</a>  </p>\n</li>\n<li><p>JumpingBeans<br>文字像 Mexican beans 一样跳动<br>项目地址：<a href=\"https://github.com/frakbot/JumpingBeans\" target=\"_blank\" rel=\"external\">https://github.com/frakbot/JumpingBeans</a><br>Demo 地址：<a href=\"http://play.google.com/store/apps/details?id=net.frakbot.jumpingbeans.demo\" target=\"_blank\" rel=\"external\">http://play.google.com/store/apps/details?id=net.frakbot.jumpingbeans.demo</a>  </p>\n</li>\n<li><p>FancyButtons<br>一个不用图片就可以帮助我们创建出漂亮按钮的库。<br>项目地址：<a href=\"https://github.com/medyo/fancybuttons\" target=\"_blank\" rel=\"external\">https://github.com/medyo/fancybuttons</a><br>Demo 地址：<a href=\"https://github.com/medyo/fancybuttons/tree/master/samples\" target=\"_blank\" rel=\"external\">https://github.com/medyo/fancybuttons/tree/master/samples</a>  </p>\n</li>\n<li><p>Android-RobotoTextView<br>一个实现了所有 Roboto 字体的 TextView，包括新出的 Roboto Slab 字体。<br>项目地址：<a href=\"https://github.com/johnkil/Android-RobotoTextView\" target=\"_blank\" rel=\"external\">https://github.com/johnkil/Android-RobotoTextView</a><br>Demo 地址：<a href=\"http://play.google.com/store/apps/details?id=com.devspark.robototextview\" target=\"_blank\" rel=\"external\">http://play.google.com/store/apps/details?id=com.devspark.robototextview</a><br>Demo 项目：<a href=\"https://github.com/johnkil/Android-RobotoTextView/tree/master/robototextview-sample\" target=\"_blank\" rel=\"external\">https://github.com/johnkil/Android-RobotoTextView/tree/master/robototextview-sample</a>  </p>\n</li>\n<li><p>Android-WizardPager<br>一个表单向导库<br>项目地址：<a href=\"https://github.com/romannurik/android-wizardpager\" target=\"_blank\" rel=\"external\">https://github.com/romannurik/android-wizardpager</a><br>Demo 项目：<a href=\"https://github.com/str4d/android-wizardpager/tree/textfield\" target=\"_blank\" rel=\"external\">https://github.com/str4d/android-wizardpager/tree/textfield</a>  </p>\n</li>\n<li><p>RippleView<br>一个实现了 Android L 上才引入的点击按钮后出现水波纹效果的按钮<br>项目地址：<a href=\"https://github.com/siriscac/RippleView\" target=\"_blank\" rel=\"external\">https://github.com/siriscac/RippleView</a><br>Demo 项目：<a href=\"https://github.com/siriscac/RippleView/tree/master/RippleViewExample\" target=\"_blank\" rel=\"external\">https://github.com/siriscac/RippleView/tree/master/RippleViewExample</a>  </p>\n</li>\n<li><p>RippleEffect<br>一个实现 Material Design Ripple 效果的库，支持 Android API 9+以上版本。<br>项目地址：<a href=\"https://github.com/traex/RippleEffect\" target=\"_blank\" rel=\"external\">https://github.com/traex/RippleEffect</a><br>Demo 项目：<a href=\"https://github.com/traex/RippleEffect/tree/master/sample\" target=\"_blank\" rel=\"external\">https://github.com/traex/RippleEffect/tree/master/sample</a>  </p>\n</li>\n<li><p>RippleCompat<br>使用易于移植的方式为UI控件实现波纹效应，可以适配控件原背景及Palette支持。api简单，可自定义效果，兼容至Android API 7+。<br>项目地址：<a href=\"https://github.com/desmond1121/RippleCompat\" target=\"_blank\" rel=\"external\">https://github.com/desmond1121/RippleCompat</a><br>Demo 项目：<a href=\"https://github.com/desmond1121/RippleCompat/tree/master/app\" target=\"_blank\" rel=\"external\">https://github.com/desmond1121/RippleCompat/tree/master/app</a></p>\n</li>\n<li><p>Android Floating Label Widgets<br>包含一系列控件，这些控件特点是：有默认值，当值不为空时默认值浮动到上面变为提示<br>项目地址：<a href=\"https://github.com/marvinlabs/android-floatinglabel-widgets\" target=\"_blank\" rel=\"external\">https://github.com/marvinlabs/android-floatinglabel-widgets</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.marvinlabs.widget.floatinglabel.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.marvinlabs.widget.floatinglabel.demo</a><br>在线演示：<a href=\"http://www.youtube.com/watch?v=hpZD9gJcRg0&amp;feature=youtu.be\" target=\"_blank\" rel=\"external\">http://www.youtube.com/watch?v=hpZD9gJcRg0&amp;feature=youtu.be</a>  </p>\n</li>\n<li><p>MaterialEditText<br>EditText 的 Material Design 实现。包含 <a href=\"http://www.google.com/design/spec/components/text-fields.html\" target=\"_blank\" rel=\"external\">Google Material Design Spec</a>中的 UI 效果和一些新增特性。<br>项目地址：<a href=\"https://github.com/rengwuxian/MaterialEditText\" target=\"_blank\" rel=\"external\">https://github.com/rengwuxian/MaterialEditText</a>  </p>\n</li>\n<li><p>MaterialEditText<br>实现 <a href=\"http://www.google.com/design/spec/components/text-fields.html\" target=\"_blank\" rel=\"external\">Material Design</a> 中 Ripple 效果线条背景的 EditText。直接替换原生 EditText 即可集成。<br>项目地址：<a href=\"https://github.com/DreamingInCodeZH/MaterialEditText\" target=\"_blank\" rel=\"external\">https://github.com/DreamingInCodeZH/MaterialEditText</a>    </p>\n</li>\n<li><p>MultiActionTextView<br>可以分别给 TextView 中的某几个字设置点击事件的 TextView<br>项目地址：<a href=\"https://github.com/ajaysahani/MultiActionTextView\" target=\"_blank\" rel=\"external\">https://github.com/ajaysahani/MultiActionTextView</a>  </p>\n</li>\n<li><p>ToggleButton<br>状态切换的 Button，类似 iOS，用 View 实现<br>项目地址：<a href=\"https://github.com/zcweng/ToggleButton\" target=\"_blank\" rel=\"external\">https://github.com/zcweng/ToggleButton</a>  </p>\n</li>\n<li><p>SwitchButton<br>状态切换的 Button，类似 iOS，拥有良好的用户界面<br>项目地址：<a href=\"https://github.com/kyleduo/SwitchButton\" target=\"_blank\" rel=\"external\">https://github.com/kyleduo/SwitchButton</a>  </p>\n</li>\n<li><p>SlideSwitch<br>状态切换的开关，可以设置为类似 IOS 的圆形，也可以设置为矩形，用 View 实现<br>项目地址：<a href=\"https://github.com/Leaking/SlideSwitch\" target=\"_blank\" rel=\"external\">https://github.com/Leaking/SlideSwitch</a>  </p>\n</li>\n<li><p>ExpandableTextView<br>可展开和收缩内容的 TextView。<br>项目地址：<a href=\"https://github.com/Manabu-GT/ExpandableTextView\" target=\"_blank\" rel=\"external\">https://github.com/Manabu-GT/ExpandableTextView</a>  </p>\n</li>\n<li><p>TagCloudView(支持 SingleLine 模式的标签云)<br>标签云效果，只需要一行代码即可设置为 SingleLine 模式，轻松实现知乎问题话题列表效果。SingleLine 模式时末尾文字及图片可自定义。<br>项目地址：<a href=\"https://github.com/kingideayou/TagCloudView\" target=\"_blank\" rel=\"external\">https://github.com/kingideayou/TagCloudView</a><br>示例APK地址：<a href=\"https://github.com/kingideayou/TagCloudView/raw/master/apk/Demo.apk\" target=\"_blank\" rel=\"external\">https://github.com/kingideayou/TagCloudView/raw/master/apk/Demo.apk</a><br>APP示例：知乎  </p>\n</li>\n<li><p>BubbleTextView<br>Android Bubble View<br>项目地址：<a href=\"https://github.com/dupengtao/BubbleTextView\" target=\"_blank\" rel=\"external\">https://github.com/dupengtao/BubbleTextView</a> </p>\n</li>\n<li><p>shadow-layout<br>Android Shadow Layout<br>解决了<code>CardView</code>：1.不能画圆的阴影。2.设置阴影的位置。3.设置阴影颜色。<br>项目地址：<a href=\"https://github.com/dmytrodanylyk/shadow-layout\" target=\"_blank\" rel=\"external\">https://github.com/dmytrodanylyk/shadow-layout</a></p>\n</li>\n</ol>\n<h3 id=\"九、ScrollView\"><a href=\"#九、ScrollView\" class=\"headerlink\" title=\"九、ScrollView\"></a>九、ScrollView</h3><ol>\n<li><p>Discrollview<br>支持滚动时 Item 淡入淡出，平移，缩放效果的 ScrollView<br>项目地址：<a href=\"https://github.com/flavienlaurent/discrollview\" target=\"_blank\" rel=\"external\">https://github.com/flavienlaurent/discrollview</a><br>Demo 地址：<a href=\"https://github.com/flavienlaurent/discrollview/raw/master/sample.apk\" target=\"_blank\" rel=\"external\">https://github.com/flavienlaurent/discrollview/raw/master/sample.apk</a>  </p>\n</li>\n<li><p>PullScrollView<br>仿照新浪微博 Android 客户端个人中心的 ScrollView，下拉背景伸缩回弹效果。<br>项目地址：<a href=\"https://github.com/MarkMjw/PullScrollView\" target=\"_blank\" rel=\"external\">https://github.com/MarkMjw/PullScrollView</a>  </p>\n</li>\n<li><p>ArcLayout<br>一个非常简单的弧布局库<br>项目地址：<a href=\"https://github.com/ogaclejapan/ArcLayout\" target=\"_blank\" rel=\"external\">https://github.com/ogaclejapan/ArcLayout</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.ogaclejapan.arclayout.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.ogaclejapan.arclayout.demo</a>  </p>\n</li>\n<li><p>ParallaxScrollView<br>支持视差滚动的 ScrollView ，背景图片的滚动速度小于 ScrollView 中子控件的滚动速度<br>项目地址：<a href=\"https://github.com/chrisjenx/ParallaxScrollView\" target=\"_blank\" rel=\"external\">https://github.com/chrisjenx/ParallaxScrollView</a><br>Demo 地址：<a href=\"http://cloud.github.com/downloads/chrisjenx/ParallaxScrollView/ParallaxScrollViewDemo-v1.0.5.apk\" target=\"_blank\" rel=\"external\">http://cloud.github.com/downloads/chrisjenx/ParallaxScrollView/ParallaxScrollViewDemo-v1.0.5.apk</a>  </p>\n</li>\n<li><p>AKParallax-Android<br>支持视差滚动的 ScrollView<br>项目地址：<a href=\"https://github.com/ideaismobile/AKParallax-Android\" target=\"_blank\" rel=\"external\">https://github.com/ideaismobile/AKParallax-Android</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.appkraft.parallax_sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.appkraft.parallax_sample</a>  </p>\n</li>\n<li><p>Android-ObservableScrollView<br>监听滚动视图滚动事件的库，帮助与 Toolbar 的交互动效处理与 Material Design 的实现<br>项目地址：<a href=\"https://github.com/ksoichiro/Android-ObservableScrollView\" target=\"_blank\" rel=\"external\">https://github.com/ksoichiro/Android-ObservableScrollView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.github.ksoichiro.android.observablescrollview.samples2\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.github.ksoichiro.android.observablescrollview.samples2</a>  </p>\n</li>\n<li><p>OverScrollView<br>有弹性的 ScrollView，实现了当手指滑动到 ScrollView 的顶部、底部时，可以继续的向上、向下拉伸。当释放手指的时候，向上、下回弹<br>项目地址：<a href=\"https://github.com/EverythingMe/OverScrollView\" target=\"_blank\" rel=\"external\">https://github.com/EverythingMe/OverScrollView</a>  </p>\n</li>\n</ol>\n<h3 id=\"十、TimeView\"><a href=\"#十、TimeView\" class=\"headerlink\" title=\"十、TimeView\"></a>十、TimeView</h3><p>包括 TimePicker、DatePicker、CalendarView、Clock 等时间相关控件  </p>\n<ol>\n<li><p>android-times-square<br>Android 日历时间部件，支持选取单个日期，多个日期，及日期区间段和对话框形式显示<br>项目地址：<a href=\"https://github.com/square/android-times-square\" target=\"_blank\" rel=\"external\">https://github.com/square/android-times-square</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/times-square-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/times-square-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>android-calendar-card<br>日历<br>项目地址：<a href=\"https://github.com/kenumir/android-calendar-card\" target=\"_blank\" rel=\"external\">https://github.com/kenumir/android-calendar-card</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.wt.calendarcardsample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.wt.calendarcardsample</a>  </p>\n</li>\n<li><p>AndroidWheel<br>Android Wheel 支持城市、多种日期时间、密码、图片<br>项目地址：<a href=\"https://code.google.com/p/android-wheel/\" target=\"_blank\" rel=\"external\">https://code.google.com/p/android-wheel/</a>  </p>\n</li>\n<li><p>GoogleDateTimePickers<br>时间选择部件<br>项目地址：<a href=\"https://github.com/Mirkoddd/GoogleDateTimePickers\" target=\"_blank\" rel=\"external\">https://github.com/Mirkoddd/GoogleDateTimePickers</a><br>文档介绍：<a href=\"https://play.google.com/store/apps/details?id=com.mirko.sample&amp;hl=it\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.mirko.sample&amp;hl=it</a>  </p>\n</li>\n<li><p>DateTimePicker<br>日期选择部件(Google Agenda 的样式风格)<br>项目地址：<a href=\"https://github.com/flavienlaurent/datetimepicker\" target=\"_blank\" rel=\"external\">https://github.com/flavienlaurent/datetimepicker</a><br>Demo 地址：<a href=\"https://raw.github.com/biboune/datetimepicker/master/datetimepicker-sample.apk\" target=\"_blank\" rel=\"external\">https://raw.github.com/biboune/datetimepicker/master/datetimepicker-sample.apk</a>  </p>\n</li>\n<li><p>android-betterpickers<br>提供日期、数字、时间（数字方式和钟表方式）、重复周期（闹钟的周期重复）、HMS（时、分、秒）的选择，支持以 DialogFragment 的弹窗选择<br>项目地址：<a href=\"https://github.com/derekbrameyer/android-betterpickers\" target=\"_blank\" rel=\"external\">https://github.com/derekbrameyer/android-betterpickers</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.doomonafireball.betterpickers.sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.doomonafireball.betterpickers.sample</a>  </p>\n</li>\n<li><p>Android Week View<br>日期控件，支持周，天视图，支持自定义样式<br>项目地址：<a href=\"https://github.com/alamkanak/Android-Week-View\" target=\"_blank\" rel=\"external\">https://github.com/alamkanak/Android-Week-View</a>  </p>\n</li>\n<li><p>PickerView<br>仿 iOS 的 PickerView 控件，有时间选择和选项选择并支持一二三级联动效果，TimePopupWindow 时间选择器，支持年月日时分，年月日，时分等格式；OptionsPopupWindow 选项选择器，支持一，二，三级选项选择，并且可以设置是否联动<br>项目地址：<a href=\"https://github.com/saiwu-bigkoo/Android-PickerView\" target=\"_blank\" rel=\"external\">https://github.com/saiwu-bigkoo/Android-PickerView</a>  </p>\n</li>\n<li><p>CountdownView<br>Android 倒计时控件，使用Canvas绘制，支持多种样式<br>项目地址：<a href=\"https://github.com/iwgang/CountdownView\" target=\"_blank\" rel=\"external\">https://github.com/iwgang/CountdownView</a>  </p>\n</li>\n</ol>\n<h3 id=\"十一、TipView\"><a href=\"#十一、TipView\" class=\"headerlink\" title=\"十一、TipView\"></a>十一、TipView</h3><p>包括 Toast、角标、UndoBar 等提示性控件  </p>\n<ol>\n<li><p>SVProgressHUD<br>SVProgressHUD For Android 精仿iOS的提示库 SVProgressHUD，api也几乎一样。<br>项目地址：<a href=\"https://github.com/saiwu-bigkoo/Android-SVProgressHUD\" target=\"_blank\" rel=\"external\">https://github.com/saiwu-bigkoo/Android-SVProgressHUD</a>  </p>\n</li>\n<li><p>Crouton<br>丰富样式的 Toast，允许 alert、comfirm、info 样式及点击消失样式，允许设置 Toast 显示时间，允许自定义 View。 本文 32. SuperToasts 为其扩展版<br>项目地址：<a href=\"https://github.com/keyboardsurfer/Crouton\" target=\"_blank\" rel=\"external\">https://github.com/keyboardsurfer/Crouton</a><br>Demo 地址：<a href=\"http://play.google.com/store/apps/details?id=de.keyboardsurfer.app.demo.crouton\" target=\"_blank\" rel=\"external\">http://play.google.com/store/apps/details?id=de.keyboardsurfer.app.demo.crouton</a>  </p>\n</li>\n<li><p>supertooltips<br>带动画效果的 Tips 显示<br>项目地址：<a href=\"https://github.com/nhaarman/supertooltips\" target=\"_blank\" rel=\"external\">https://github.com/nhaarman/supertooltips</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.haarman.supertooltips\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.haarman.supertooltips</a>  </p>\n</li>\n<li><p>Android ViewBadger<br>为其他 View 添加角标（消息圆点）等<br>项目地址：<a href=\"https://github.com/jgilfelt/android-viewbadger\" target=\"_blank\" rel=\"external\">https://github.com/jgilfelt/android-viewbadger</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/android-viewbadger.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/android-viewbadger.apk?raw=true</a>  </p>\n</li>\n<li><p>SuperToasts<br>更丰富样式的 toast，支持 Button、Progress、Horizontal Progress 样式、支持进入动画、支持撤销及其动画设置<br>项目地址：<a href=\"https://github.com/JohnPersano/SuperToasts\" target=\"_blank\" rel=\"external\">https://github.com/JohnPersano/SuperToasts</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.supertoastsdemo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.supertoastsdemo</a>  </p>\n</li>\n<li><p>UndoBar<br>屏幕底部显示取消或是确认的 PopupWindows<br>项目地址：<a href=\"https://github.com/soarcn/UndoBar\" target=\"_blank\" rel=\"external\">https://github.com/soarcn/UndoBar</a>  </p>\n</li>\n<li><p>UndoBar<br>屏幕底部显示取消或是确认某操作<br>项目地址：<a href=\"https://github.com/jenzz/Android-UndoBar\" target=\"_blank\" rel=\"external\">https://github.com/jenzz/Android-UndoBar</a>  </p>\n</li>\n<li><p>Android-ActionItemBadge<br>可以在 ActionBar 的 MenuItem 上显示一个小角标<br>项目地址：<a href=\"https://github.com/mikepenz/Android-ActionItemBadge\" target=\"_blank\" rel=\"external\">https://github.com/mikepenz/Android-ActionItemBadge</a>  </p>\n</li>\n<li><p>SnackBar<br>Material Design 风格的 Toast，类似 Google inbox 中的提示<br>项目地址：<a href=\"https://github.com/MrEngineer13/SnackBar\" target=\"_blank\" rel=\"external\">https://github.com/MrEngineer13/SnackBar</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.mrengineer13.snackbar.sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.mrengineer13.snackbar.sample</a>  </p>\n</li>\n<li><p>HeadsUp<br>在 2.3 上使用 android  5.0 的 HeadsUp 效果<br>项目地址：<a href=\"https://github.com/zzz40500/HeadsUp\" target=\"_blank\" rel=\"external\">https://github.com/zzz40500/HeadsUp</a>  </p>\n</li>\n</ol>\n<h3 id=\"十二、FlipView\"><a href=\"#十二、FlipView\" class=\"headerlink\" title=\"十二、FlipView\"></a>十二、FlipView</h3><ol>\n<li><p>android-flip<br>类似 Flipboard 翻转动画的实现<br>项目地址：<a href=\"https://github.com/openaphid/android-flip\" target=\"_blank\" rel=\"external\">https://github.com/openaphid/android-flip</a><br>Demo 地址：<a href=\"https://github.com/openaphid/android-flip/blob/master/FlipView/Demo/APK/Aphid-FlipView-Demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/openaphid/android-flip/blob/master/FlipView/Demo/APK/Aphid-FlipView-Demo.apk?raw=true</a><br>APP 示例：flipboard  </p>\n</li>\n<li><p>FlipImageView<br>支持 x、y、z 及动画选择的翻转动画的实现<br>项目地址：<a href=\"https://github.com/castorflex/FlipImageView\" target=\"_blank\" rel=\"external\">https://github.com/castorflex/FlipImageView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=fr.castorflex.android.flipimageview\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=fr.castorflex.android.flipimageview</a>  </p>\n</li>\n<li><p>FoldableLayout<br>Flip 翻转效果的 ListView，目前还不支持 ListView 缓存<br>项目地址：<a href=\"https://github.com/alexvasilkov/FoldableLayout\" target=\"_blank\" rel=\"external\">https://github.com/alexvasilkov/FoldableLayout</a><br>Demo 地址：<a href=\"http://play.google.com/store/apps/details?id=com.alexvasilkov.foldablelayout.sample\" target=\"_blank\" rel=\"external\">http://play.google.com/store/apps/details?id=com.alexvasilkov.foldablelayout.sample</a>  </p>\n</li>\n<li><p>FlipViewPager.Draco<br>Flip 翻转效果的 ViewPager<br>项目地址：<a href=\"https://github.com/Yalantis/FlipViewPager.Draco\" target=\"_blank\" rel=\"external\">https://github.com/Yalantis/FlipViewPager.Draco</a>  </p>\n</li>\n</ol>\n<h3 id=\"十三、ColorPickView\"><a href=\"#十三、ColorPickView\" class=\"headerlink\" title=\"十三、ColorPickView\"></a>十三、ColorPickView</h3><ol>\n<li><p>ColorPickerView<br>颜色选择器，支持 PopupWindows 或新的 Activity 中打开<br>项目地址：<a href=\"https://code.google.com/p/color-picker-view/\" target=\"_blank\" rel=\"external\">https://code.google.com/p/color-picker-view/</a>  </p>\n</li>\n<li><p>HoloColorPicker<br>颜色选择器<br>项目地址：<a href=\"https://github.com/LarsWerkman/HoloColorPicker\" target=\"_blank\" rel=\"external\">https://github.com/LarsWerkman/HoloColorPicker</a><br>Demo 地址：<a href=\"https://docs.google.com/file/d/0BwclyDTlLrdXRzVnTGJvTlRfU2s/edit\" target=\"_blank\" rel=\"external\">https://docs.google.com/file/d/0BwclyDTlLrdXRzVnTGJvTlRfU2s/edit</a>  </p>\n</li>\n<li><p>ColorPickerPreference<br>颜色选择器<br>项目地址：<a href=\"https://github.com/attenzione/android-ColorPickerPreference\" target=\"_blank\" rel=\"external\">https://github.com/attenzione/android-ColorPickerPreference</a>  </p>\n</li>\n<li><p>ColorPicker<br>颜色选择器（Google Agenda 中的样式风格）<br>项目地址：<a href=\"https://github.com/flavienlaurent/colorpicker\" target=\"_blank\" rel=\"external\">https://github.com/flavienlaurent/colorpicker</a><br>Demo 地址：<a href=\"https://raw.github.com/biboune/colorpicker/master/colorpicker-sample.apk\" target=\"_blank\" rel=\"external\">https://raw.github.com/biboune/colorpicker/master/colorpicker-sample.apk</a>  </p>\n</li>\n</ol>\n<h3 id=\"十四、GraphView\"><a href=\"#十四、GraphView\" class=\"headerlink\" title=\"十四、GraphView\"></a>十四、GraphView</h3><ol>\n<li><p>MPAndroidChart<br>强大的图表绘制工具，支持折线图、面积图、散点图、时间图、柱状图、条图、饼图、气泡图、圆环图、范围（高至低）条形图、网状图等；支持图的拖拽缩放；支持 Android 2.2 以上，支持横纵轴缩放，多指缩放，展现动画、高亮、保存到 sdcard、从文件读取图表<br>项目地址：<a href=\"https://github.com/PhilJay/MPAndroidChart\" target=\"_blank\" rel=\"external\">https://github.com/PhilJay/MPAndroidChart</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.xxmassdeveloper.mpchartexample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.xxmassdeveloper.mpchartexample</a><br>Demo 项目：<a href=\"https://github.com/PhilJay/MPAndroidChart/tree/master/MPChartExample\" target=\"_blank\" rel=\"external\">https://github.com/PhilJay/MPAndroidChart/tree/master/MPChartExample</a><br>在线演示：<a href=\"https://www.youtube.com/watch?v=ufaK_Hd6BpI\" target=\"_blank\" rel=\"external\">https://www.youtube.com/watch?v=ufaK_Hd6BpI</a>  </p>\n</li>\n<li><p>achartengine<br>强大的图表绘制工具，支持折线图、面积图、散点图、时间图、柱状图、条图、饼图、气泡图、圆环图、范围（高至低）条形图、拨号图/表、立方线图及各种图的结合<br>项目地址：<a href=\"https://code.google.com/p/achartengine/\" target=\"_blank\" rel=\"external\">https://code.google.com/p/achartengine/</a><br>官网网址：<a href=\"http://www.achartengine.org/\" target=\"_blank\" rel=\"external\">http://www.achartengine.org/</a><br>APP 示例：Wordpress Android，Google Analytics  </p>\n</li>\n<li><p>GraphView<br>绘制图表和曲线图的 View，可用于 Android 上的曲形图、柱状图、波浪图展示<br>项目地址：<a href=\"https://github.com/jjoe64/GraphView\" target=\"_blank\" rel=\"external\">https://github.com/jjoe64/GraphView</a><br>Demo 项目：<a href=\"https://github.com/jjoe64/GraphView-Demos\" target=\"_blank\" rel=\"external\">https://github.com/jjoe64/GraphView-Demos</a><br>APP 示例：Wordpress Android，Google Analytics  </p>\n</li>\n<li><p>HoloGraphLibrary<br>绘制现状图、柱状图、饼状图<br>项目地址：<a href=\"https://bitbucket.org/danielnadeau/holographlibrary/src\" target=\"_blank\" rel=\"external\">https://bitbucket.org/danielnadeau/holographlibrary/src</a><br>文档介绍：<a href=\"https://bitbucket.org/danielnadeau/holographlibrary/wiki/Home\" target=\"_blank\" rel=\"external\">https://bitbucket.org/danielnadeau/holographlibrary/wiki/Home</a>  </p>\n</li>\n<li><p>XCL-Charts<br>XCL-Charts 基于原生的 Canvas 来绘制各种图表,在设计时，尽量在保证开发效率的同时，给使用者提供足够多的定制化能力。因此使用简便,同时具有相当灵活的定制能力。目前支持 3D/非 3D 柱形图(Bar Chart)、3D/非 3D 饼图(Pie Chart)、堆积图(Stacked Bar Chart)、面积图(Area Chart)、 折线图(Line Chart)、曲线图(Spline Chart)、环形图(Dount Chart)、南丁格尔玫瑰图(Rose Chart)、仪表盘(Dial Chart)、刻度盘(Gauge Chart)、雷达图(Radar Chart)、圆形图(Circle Chart)等图表。其它特性还包括支持图表缩放、手势移动、动画显示效果、高密度柱形显示、图表分界定制线、多图表的混合显示及同数据源不同类型图表切换等。<br>项目地址：<a href=\"https://github.com/xcltapestry/XCL-Charts\" target=\"_blank\" rel=\"external\">https://github.com/xcltapestry/XCL-Charts</a><br>Demo 地址：<a href=\"https://github.com/xcltapestry/XCL-Charts/blob/master/XCL-Charts-demo/bin/XCL-Charts-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/xcltapestry/XCL-Charts/blob/master/XCL-Charts-demo/bin/XCL-Charts-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>EazeGraph<br>Android 图表库，支持柱状图、分层柱状图、饼状图、线性图<br>项目地址：<a href=\"https://github.com/blackfizz/EazeGraph\" target=\"_blank\" rel=\"external\">https://github.com/blackfizz/EazeGraph</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=org.eazegraph.app\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=org.eazegraph.app</a>  </p>\n</li>\n<li><p>WilliamChart<br>绘制图表的库，支持 LineChartView、BarChartView 和 StackBarChartView 三中图表类型，并且支持 Android 2.2 及以上的系统。<br>项目地址：<a href=\"https://github.com/diogobernardino/WilliamChart\" target=\"_blank\" rel=\"external\">https://github.com/diogobernardino/WilliamChart</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.db.williamchartdemo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.db.williamchartdemo</a><br>Demo 项目：<a href=\"https://github.com/diogobernardino/WilliamChart/tree/master/sample\" target=\"_blank\" rel=\"external\">https://github.com/diogobernardino/WilliamChart/tree/master/sample</a>  </p>\n</li>\n<li><p>HelloCharts for Android<br>支持折线图、柱状图、饼图、气泡图、组合图；支持预览、放大缩小，滚动，部分图表支持动画；支持 Android 2.2 以上<br>项目地址：<a href=\"https://github.com/lecho/hellocharts-android\" target=\"_blank\" rel=\"external\">https://github.com/lecho/hellocharts-android</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=lecho.lib.hellocharts.samples\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=lecho.lib.hellocharts.samples</a><br>在线演示：<a href=\"https://www.youtube.com/watch?v=xbSBjyjH2SY\" target=\"_blank\" rel=\"external\">https://www.youtube.com/watch?v=xbSBjyjH2SY</a>  </p>\n</li>\n<li><p>PieChartView<br>比较简单直接的饼状统计报表图，使用方便，设置相应的属性参数即可<br>项目地址：<a href=\"https://github.com/wuseal/PieChartView\" target=\"_blank\" rel=\"external\">https://github.com/wuseal/PieChartView</a><br>Demo 地址：<a href=\"https://github.com/wuseal/PieChartView\" target=\"_blank\" rel=\"external\">https://github.com/wuseal/PieChartView</a>  </p>\n</li>\n</ol>\n<h3 id=\"十五、UI-Style\"><a href=\"#十五、UI-Style\" class=\"headerlink\" title=\"十五、UI Style\"></a>十五、UI Style</h3><p>不同样式的系统 UI 风格，如 IOS、Bootstrap 风格  </p>\n<ol>\n<li><p>UITableView<br>ios 风格控件，包括 Button、ListView、TableView<br>项目地址：<a href=\"https://github.com/thiagolocatelli/android-uitableview\" target=\"_blank\" rel=\"external\">https://github.com/thiagolocatelli/android-uitableview</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/ui-tableview-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/ui-tableview-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>ATableView<br>ios 风格控件<br>项目地址：<a href=\"https://github.com/dmacosta/ATableView\" target=\"_blank\" rel=\"external\">https://github.com/dmacosta/ATableView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.nakardo.atableview.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.nakardo.atableview.demo</a>  </p>\n</li>\n<li><p>Cards-UI<br>卡片式 View，支持单个卡片，item 为卡片的 ListView<br>项目地址：<a href=\"https://github.com/afollestad/Cards-UI\" target=\"_blank\" rel=\"external\">https://github.com/afollestad/Cards-UI</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/cards-ui-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/cards-ui-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>cardslib<br>卡片式 View，支持单个卡片，item 为卡片的 ListView 和 GridView<br>项目地址：<a href=\"https://github.com/gabrielemariotti/cardslib\" target=\"_blank\" rel=\"external\">https://github.com/gabrielemariotti/cardslib</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=it.gmariotti.cardslib.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=it.gmariotti.cardslib.demo</a>  </p>\n</li>\n<li><p>Android-Bootstrap<br>Bootstrap 风格的按钮<br>项目地址：<a href=\"https://github.com/Bearded-Hen/Android-Bootstrap\" target=\"_blank\" rel=\"external\">https://github.com/Bearded-Hen/Android-Bootstrap</a>  </p>\n</li>\n<li><p>Material Design Android Library<br>Android L 中 Material Design 风格的组件适配到 Android 2.2+<br>项目地址：<a href=\"https://github.com/navasmdc/MaterialDesignLibrary\" target=\"_blank\" rel=\"external\">https://github.com/navasmdc/MaterialDesignLibrary</a>  </p>\n</li>\n<li><p>Android FlatUI<br>Android 扁平化风格的组件，支持一些自定义样式<br>项目地址：<a href=\"https://github.com/eluleci/FlatUI\" target=\"_blank\" rel=\"external\">https://github.com/eluleci/FlatUI</a>  </p>\n</li>\n<li><p>cheesesquare<br>全新 Android 设计库演示 Demo，包括 Collapsing Toolbar、FloatingActionButton、View anchoring、NavigationView、Snackbar<br>项目地址：<a href=\"https://github.com/chrisbanes/cheesesquare\" target=\"_blank\" rel=\"external\">https://github.com/chrisbanes/cheesesquare</a>  </p>\n</li>\n</ol>\n<h3 id=\"十六、其他\"><a href=\"#十六、其他\" class=\"headerlink\" title=\"十六、其他\"></a>十六、其他</h3><ol>\n<li><p>SnappingStepper<br>一种漂亮的UI控件，能更灵活的控制数字的增减。可用于购物车商品数量控制。<br>项目地址：<a href=\"https://github.com/saiwu-bigkoo/Android-SnappingStepper\" target=\"_blank\" rel=\"external\">https://github.com/saiwu-bigkoo/Android-SnappingStepper</a>  </p>\n</li>\n<li><p>SwipeBackLayout<br>左右或向上滑动返回的 Activity<br>项目地址：<a href=\"https://github.com/Issacw0ng/SwipeBackLayout\" target=\"_blank\" rel=\"external\">https://github.com/Issacw0ng/SwipeBackLayout</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=me.imid.swipebacklayout.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=me.imid.swipebacklayout.demo</a><br>APP 示例：知乎  </p>\n</li>\n<li><p>android-styled-dialogs<br>可自定义样式的 dialog，默认与 Holo 主题样式一致，在 Android2.2 以上同一样式<br>项目地址：<a href=\"https://github.com/inmite/android-styled-dialogs\" target=\"_blank\" rel=\"external\">https://github.com/inmite/android-styled-dialogs</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/styled-dialogs-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/styled-dialogs-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>Android Sliding Up Panel<br>可拖动的 View，能在当前 Activity 上扶起一个可拖动的 Panel<br>项目地址：<a href=\"https://github.com/umano/AndroidSlidingUpPanel\" target=\"_blank\" rel=\"external\">https://github.com/umano/AndroidSlidingUpPanel</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.sothree.umano\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.sothree.umano</a><br>APP 示例：Google Music 精简播放栏  </p>\n</li>\n<li><p>TableFixHeaders<br>第一列固定的 Table<br>项目地址：<a href=\"https://github.com/InQBarna/TableFixHeaders\" target=\"_blank\" rel=\"external\">https://github.com/InQBarna/TableFixHeaders</a><br>Demo 地址：<a href=\"http://bit.ly/13buAIq\" target=\"_blank\" rel=\"external\">http://bit.ly/13buAIq</a>  </p>\n</li>\n<li><p>Inscription<br>可用于展示应用 change 和 new feature 信息<br>项目地址：<a href=\"https://github.com/MartinvanZ/Inscription\" target=\"_blank\" rel=\"external\">https://github.com/MartinvanZ/Inscription</a>  </p>\n</li>\n<li><p>ActivityTransition<br>Activity 切换动画，包括渐变、flip、某个位置进入等等<br>项目地址：<a href=\"https://github.com/ophilbert/ActivityTransition\" target=\"_blank\" rel=\"external\">https://github.com/ophilbert/ActivityTransition</a><br>文档介绍：<a href=\"https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true</a>  </p>\n</li>\n<li><p>EasyAndroidAnimations<br>针对 View 的各种动画<br>项目地址：<a href=\"https://github.com/2359media/EasyAndroidAnimations\" target=\"_blank\" rel=\"external\">https://github.com/2359media/EasyAndroidAnimations</a>  </p>\n</li>\n<li><p>ViewAnimation<br>对android view 动画进行封装,实现起更简单，自带三种常见运动路径，其他的可自定义<br>项目地址：<a href=\"https://github.com/guohuanwen/ViewAniamtion\" target=\"_blank\" rel=\"external\">https://github.com/guohuanwen/ViewAniamtion</a><br>APP 示例：QQ名片圈圈效果  </p>\n</li>\n<li><p>AndroidLoadingAnimation<br>多种android加载动画<br>项目地址：<a href=\"https://github.com/guohuanwen/AndroidLoadingAnimation\" target=\"_blank\" rel=\"external\">https://github.com/guohuanwen/AndroidLoadingAnimation</a>  </p>\n</li>\n<li><p>android-lockpattern<br>Android 的图案密码解锁<br>项目地址：<a href=\"https://code.google.com/p/android-lockpattern/\" target=\"_blank\" rel=\"external\">https://code.google.com/p/android-lockpattern/</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/爱早起/Android Lock Pattern 源码解析\" target=\"_blank\" rel=\"external\">android-lockpattern</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=group.pals.android.lib.ui.lockpattern.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=group.pals.android.lib.ui.lockpattern.demo</a><br>文档介绍：<a href=\"https://code.google.com/p/android-lockpattern/wiki/QuickUse\" target=\"_blank\" rel=\"external\">https://code.google.com/p/android-lockpattern/wiki/QuickUse</a><br>APP 示例：Android 开机的图案密码解锁，支付宝的密码解锁  </p>\n</li>\n<li><p>PatternLock<br>另一个 Android 图案解锁库<br>项目地址：<a href=\"https://github.com/DreaminginCodeZH/PatternLock\" target=\"_blank\" rel=\"external\">https://github.com/DreaminginCodeZH/PatternLock</a><br>Demo 地址：<a href=\"https://github.com/DreaminginCodeZH/PatternLock/raw/master/dist/sample.apk\" target=\"_blank\" rel=\"external\">https://github.com/DreaminginCodeZH/PatternLock/raw/master/dist/sample.apk</a><br>APP 示例：Android 开机的图案密码解锁，支付宝的密码解锁  </p>\n</li>\n<li><p>RangeBar<br>类似于 SeekBar，不同的是可以选择一个范围内的值而不是单个值<br>项目地址：<a href=\"https://github.com/edmodo/range-bar\" target=\"_blank\" rel=\"external\">https://github.com/edmodo/range-bar</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/range-bar-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/range-bar-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>ChromeView<br>利用 Chromium 实现的 WebView，解决各个 Android 版本 WebView 不同的问题，同时利用最新 Chrome 代码<br>项目地址：<a href=\"https://github.com/pwnall/chromeview\" target=\"_blank\" rel=\"external\">https://github.com/pwnall/chromeview</a>  </p>\n</li>\n<li><p>android-phased-seek-bar<br>支持预先定义状态的 SeekBar<br>项目地址：<a href=\"https://github.com/ademar111190/android-phased-seek-bar\" target=\"_blank\" rel=\"external\">https://github.com/ademar111190/android-phased-seek-bar</a>  </p>\n</li>\n<li><p>Android Slider Preference Library<br>可添加到设置中的基于对话框的 RankBar 小部件<br>项目地址：<a href=\"https://github.com/jayschwa/AndroidSliderPreference\" target=\"_blank\" rel=\"external\">https://github.com/jayschwa/AndroidSliderPreference</a>  </p>\n</li>\n<li><p>ShowcaseView library<br>用于高亮显示应用程序的特定部分，从而突出突出重点<br>项目地址：<a href=\"https://github.com/amlcurran/ShowcaseView\" target=\"_blank\" rel=\"external\">https://github.com/amlcurran/ShowcaseView</a>  </p>\n</li>\n<li><p>android-segmented-control<br>Android 上的 Segmented Controls，相当于 RadioButton 组<br>项目地址：<a href=\"https://github.com/hoang8f/android-segmented-control\" target=\"_blank\" rel=\"external\">https://github.com/hoang8f/android-segmented-control</a>  </p>\n</li>\n<li><p>Swipeable Cards<br>类似 Tinder 的卡片效果，可以加载图片并动画效果展示，向左滑动表示喜欢，向右表示不喜欢<br>项目地址：<a href=\"https://github.com/kikoso/Swipeable-Cards\" target=\"_blank\" rel=\"external\">https://github.com/kikoso/Swipeable-Cards</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo</a>  </p>\n</li>\n<li><p>EdgeEffectOverride<br>改变 ScrollView, ListView, ExpandableListView, GridView, ViewPager 等滚动控件滚动到边缘的颜色效果<br>项目地址：<a href=\"https://github.com/AndroidAlliance/EdgeEffectOverride\" target=\"_blank\" rel=\"external\">https://github.com/AndroidAlliance/EdgeEffectOverride</a>  </p>\n</li>\n<li><p>android-pinned-header-listviews<br>使 ExpandListView 的 Group 滑动到顶端时会固定不动直到另外一个 Group 到达顶端<br>项目地址：<a href=\"https://github.com/rtyley/android-pinned-header-listviews\" target=\"_blank\" rel=\"external\">https://github.com/rtyley/android-pinned-header-listviews</a>  </p>\n</li>\n<li><p>AndroidSwipeLayout<br>滑动 Layout，支持单个 View，ListView，GridView<br>项目地址：<a href=\"https://github.com/daimajia/AndroidSwipeLayout\" target=\"_blank\" rel=\"external\">https://github.com/daimajia/AndroidSwipeLayout</a><br>Demo 地址：<a href=\"https://github.com/daimajia/AndroidSwipeLayout/releases/download/v1.0.0/AndroidSwipeLayout-Demo-1.0.1-snapshot.apk\" target=\"_blank\" rel=\"external\">Download Demo</a>  </p>\n</li>\n<li><p>DynamicCardLayout<br>在 Android 中实现的类似 Windows8 的瓷片布局<br>项目地址：<a href=\"https://github.com/dodola/DynamicCardLayout\" target=\"_blank\" rel=\"external\">https://github.com/dodola/DynamicCardLayout</a>  </p>\n</li>\n<li><p>Emoticons-Keyboard<br>带表情情符号的自定义键盘<br>项目地址：<a href=\"https://github.com/chiragjain/Emoticons-Keyboard\" target=\"_blank\" rel=\"external\">https://github.com/chiragjain/Emoticons-Keyboard</a>  </p>\n</li>\n<li><p>Android Typeface Helper<br>可以帮你轻松实现自定义字体的库<br>项目地址：<a href=\"https://github.com/norbsoft/android-typeface-helper\" target=\"_blank\" rel=\"external\">https://github.com/norbsoft/android-typeface-helper</a>  </p>\n</li>\n<li><p>Android-Anim-Playground<br>几个动画效果，其中第二个基于 android-svg 的绘制效果非常好<br>项目地址：<a href=\"https://github.com/Tibolte/Android-Anim-Playground\" target=\"_blank\" rel=\"external\">https://github.com/Tibolte/Android-Anim-Playground</a>  </p>\n</li>\n<li><p>AlertView<br>仿iOS的AlertViewController 几乎完美还原iOS 的 AlertViewController ，同时支持Alert和ActionSheet模式，每一个细节都是精雕细琢，并把api封装成懒到极致模式，一行代码就可以进行弹窗.<br>项目地址：<a href=\"https://github.com/saiwu-bigkoo/Android-AlertView\" target=\"_blank\" rel=\"external\">https://github.com/saiwu-bigkoo/Android-AlertView</a>  </p>\n</li>\n<li><p>NiftyDialogEffects<br>支持自定义飞入动画样式的 Dialog<br>项目地址：<a href=\"https://github.com/sd6352051/NiftyDialogEffects\" target=\"_blank\" rel=\"external\">https://github.com/sd6352051/NiftyDialogEffects</a><br>在线演示：<a href=\"http://tympanus.net/Development/ModalWindowEffects/\" target=\"_blank\" rel=\"external\">http://tympanus.net/Development/ModalWindowEffects/</a>  </p>\n</li>\n<li><p>PostOffice<br>创建 Holo 及 Material Design 样式的 Dialog<br>项目地址：<a href=\"https://github.com/r0adkll/PostOffice\" target=\"_blank\" rel=\"external\">https://github.com/r0adkll/PostOffice</a>  </p>\n</li>\n<li><p>Swipecards<br>类似 Tinder 的卡片效果，可以加载图片并动画效果展示，向左滑动表示喜欢，向右表示不喜欢，根据 Kikoso’s Swipeable-Cards 改造而来<br>项目地址：<a href=\"https://github.com/Diolor/Swipecards\" target=\"_blank\" rel=\"external\">https://github.com/Diolor/Swipecards</a>  </p>\n</li>\n<li><p>SeekArc<br>圆形的 SeekBar<br>项目地址：<a href=\"https://github.com/TriggerTrap/SeekArc\" target=\"_blank\" rel=\"external\">https://github.com/TriggerTrap/SeekArc</a>  </p>\n</li>\n<li><p>BlurDialogFragment<br>显示  DialogFragment 时背景模糊效果<br>项目地址：<a href=\"https://github.com/tvbarthel/BlurDialogFragment\" target=\"_blank\" rel=\"external\">https://github.com/tvbarthel/BlurDialogFragment</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=fr.tvbarthel.lib.blurdialogfragment.sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=fr.tvbarthel.lib.blurdialogfragment.sample</a>  </p>\n</li>\n<li><p>range-seek-bar<br>随机值选取的 SeekBar<br>项目地址：<a href=\"https://github.com/yahoo/android-range-seek-bar\" target=\"_blank\" rel=\"external\">https://github.com/yahoo/android-range-seek-bar</a>  </p>\n</li>\n<li><p>MaterialRangeBar<br>可以选择一个范围内的值而不是单个值的 SeekBar，RangeBar 的 Material Design 风格适配<br>项目地址：<a href=\"https://github.com/oli107/material-range-bar\" target=\"_blank\" rel=\"external\">https://github.com/oli107/material-range-bar</a>  </p>\n</li>\n<li><p>MaterialList<br>Material Design 风格的 CardView<br>项目地址：<a href=\"https://github.com/dexafree/MaterialList\" target=\"_blank\" rel=\"external\">https://github.com/dexafree/MaterialList</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.dexafree.materiallistviewexample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.dexafree.materiallistviewexample</a>  </p>\n</li>\n<li><p>road-trip<br>设置 path 的各种动画效果，以及如何实现复杂路径动画，类似于 ios 中的指纹注册界面的指纹动画效果<br>项目地址：<a href=\"https://github.com/romainguy/road-trip\" target=\"_blank\" rel=\"external\">https://github.com/romainguy/road-trip</a>  </p>\n</li>\n<li><p>dialogplus<br>一个简单的 Android 对话框，支持不同的弹出模式<br>项目地址：<a href=\"https://github.com/orhanobut/dialogplus\" target=\"_blank\" rel=\"external\">https://github.com/orhanobut/dialogplus</a>  </p>\n</li>\n<li><p>FlowLayout<br>一个简单的流式布局，用法类似 LinearLayout，但是能够让子元素根据宽度自动换行<br>项目地址：<a href=\"https://github.com/LyndonChin/AndroidFlowLayout\" target=\"_blank\" rel=\"external\">FLowLayout</a>  </p>\n</li>\n<li><p>CircleSeekbar<br>一个环形Seekbar组件,支持叠加复合使用<br>项目地址：<a href=\"https://github.com/feeeei/CircleSeekbar\" target=\"_blank\" rel=\"external\">CircleSeekbar</a>  </p>\n</li>\n<li><p>FinestWebView<br>美麗的和可定制的Android的活動，顯示在一個應用程序的網頁。<br>项目地址: <a href=\"https://github.com/TheFinestArtist/FinestWebView-Android\" target=\"_blank\" rel=\"external\">https://github.com/TheFinestArtist/FinestWebView-Android</a><br>Sample 地址: <a href=\"https://play.google.com/store/apps/details?id=com.thefinestartist.finestwebview.sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.thefinestartist.finestwebview.sample</a>  </p>\n</li>\n<li><p>YouTubePlayerActivity<br>只需通過一個URL來在新的活動播放YouTube視頻。它支持屏幕方向，媒體音量控制等。<br>项目地址: <a href=\"https://github.com/TheFinestArtist/YouTubePlayerActivity\" target=\"_blank\" rel=\"external\">https://github.com/TheFinestArtist/YouTubePlayerActivity</a><br>Sample 地址: <a href=\"https://play.google.com/store/apps/details?id=com.thefinestartist.ytpa.sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.thefinestartist.ytpa.sample</a>  </p>\n</li>\n<li><p>material-camera<br>material风格的camera。能使camera使用起来更简单的库。<br>项目地址：<a href=\"https://github.com/afollestad/material-camera\" target=\"_blank\" rel=\"external\">https://github.com/afollestad/material-camera</a>   </p>\n</li>\n<li><p>material-dialogs<br>各种material风格的dialog。<br>漂亮的的、易于使用的和可定制的Dialog API，你能够使用Material designed风格的Dialog到API 8。<br>项目地址：<a href=\"https://github.com/afollestad/material-dialogs\" target=\"_blank\" rel=\"external\">https://github.com/afollestad/material-dialogs</a><br>Sample地址：<a href=\"https://github.com/afollestad/material-dialogs/blob/master/sample/sample.apk\" target=\"_blank\" rel=\"external\">https://github.com/afollestad/material-dialogs/blob/master/sample/sample.apk</a>  </p>\n</li>\n<li><p>NotifyUtil<br>最常见的通知样式库<br>项目地址:<a href=\"https://github.com/wenmingvs/NotifyUtil\" target=\"_blank\" rel=\"external\">https://github.com/wenmingvs/NotifyUtil</a><br>demo地址：<a href=\"https://github.com/wenmingvs/NotifyUtil#notifydemo\" target=\"_blank\" rel=\"external\">https://github.com/wenmingvs/NotifyUtil#notifydemo</a>  </p>\n</li>\n<li><p>CanPhotos<br>使用fresco选取多张图片并可预览图片<br>项目地址：<a href=\"https://github.com/canyinghao/CanPhotos\" target=\"_blank\" rel=\"external\">https://github.com/canyinghao/CanPhotos</a>   </p>\n</li>\n<li><p>CanDialog<br>仿照系统Dialog所写，继承于FrameLayout，添加一些动画，一些显示类型。<br>项目地址：<a href=\"https://github.com/canyinghao/CanDialog\" target=\"_blank\" rel=\"external\">https://github.com/canyinghao/CanDialog</a>  </p>\n</li>\n</ol>\n<h2 id=\"第二部分-工具库\"><a href=\"#第二部分-工具库\" class=\"headerlink\" title=\"第二部分 工具库\"></a>第二部分 工具库</h2><p>主要包括那些不错的开发库，包括依赖注入框架、图片缓存、网络请求、数据库 ORM 建模、Android 公共库、Android 高版本向低版本兼容、多媒体相关及其他。  </p>\n<h3 id=\"一、依赖注入-DI\"><a href=\"#一、依赖注入-DI\" class=\"headerlink\" title=\"一、依赖注入 DI\"></a>一、依赖注入 DI</h3><p>通过依赖注入减少 View、服务、资源简化初始化，事件绑定等重复繁琐工作  </p>\n<ol>\n<li><p>AndroidAnnotations(Code Diet)<br>android 快速开发框架<br>项目地址：<a href=\"https://github.com/excilys/androidannotations\" target=\"_blank\" rel=\"external\">https://github.com/excilys/androidannotations</a><br>文档介绍：<a href=\"https://github.com/excilys/androidannotations/wiki\" target=\"_blank\" rel=\"external\">https://github.com/excilys/androidannotations/wiki</a><br>官网网址：<a href=\"http://androidannotations.org/\" target=\"_blank\" rel=\"external\">http://androidannotations.org/</a><br>特点：(1) 依赖注入：包括 view，extras，系统服务，资源等等<br>(2) 简单的线程模型，通过 annotation 表示方法运行在 ui 线程还是后台线程<br>(3) 事件绑定：通过 annotation 表示 view 的响应事件，不用在写内部类<br>(4) REST 客户端：定义客户端接口，自动生成 REST 请求的实现<br>(5) 没有你想象的复杂：AndroidAnnotations 只是在在编译时生成相应子类<br>(6) 不影响应用性能：仅 50kb，在编译时完成，不会对运行时有性能影响。<br>其他：与 roboguice 的比较：roboguice 通过运行时读取 annotations 进行反射，所以可能影响应用性能，而 AndroidAnnotations 在编译时生成子类，所以对性能没有影响  </p>\n</li>\n<li><p>roboguice<br>帮你处理了很多代码异常，利用 annotation 使得更少的代码完成项目<br>项目地址：<a href=\"https://github.com/roboguice/roboguice\" target=\"_blank\" rel=\"external\">https://github.com/roboguice/roboguice</a><br>文档介绍：<a href=\"https://github.com/roboguice/roboguice/wiki\" target=\"_blank\" rel=\"external\">https://github.com/roboguice/roboguice/wiki</a>  </p>\n</li>\n<li><p>butterknife<br>利用 annotation 帮你快速完成 View 的初始化，减少代码<br>项目地址：<a href=\"https://github.com/JakeWharton/butterknife\" target=\"_blank\" rel=\"external\">https://github.com/JakeWharton/butterknife</a><br>文档介绍：<a href=\"http://jakewharton.github.io/butterknife/\" target=\"_blank\" rel=\"external\">http://jakewharton.github.io/butterknife/</a>  </p>\n</li>\n<li><p>Dagger<br>依赖注入，适用于 Android 和 Java<br>项目地址：<a href=\"https://github.com/square/dagger\" target=\"_blank\" rel=\"external\">https://github.com/square/dagger</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/扔物线/Dagger 源码解析\" target=\"_blank\" rel=\"external\">Dagger</a><br>文档介绍：<a href=\"http://square.github.io/dagger/\" target=\"_blank\" rel=\"external\">http://square.github.io/dagger/</a>  </p>\n</li>\n<li><p>AutoParcel<br>注解自动生成Parcelable实现代码的库<br>项目地址：<a href=\"https://github.com/frankiesardo/auto-parcel\" target=\"_blank\" rel=\"external\">https://github.com/frankiesardo/auto-parcel</a><br>这篇文章详细介绍了它的使用方法：<a href=\"https://passy.svbtle.com/simpler-android-apis-with-autoparcel\" target=\"_blank\" rel=\"external\">AutoParcel</a><br>作者认为使用AutoParcel的好处是，可以简化构造函数，方便IDE代码自动完成，方便测试，前向兼容，生成不可变的对象。<br>文档介绍：<a href=\"https://github.com/frankiesardo/auto-parcel\" target=\"_blank\" rel=\"external\">https://github.com/frankiesardo/auto-parcel</a></p>\n</li>\n</ol>\n<h3 id=\"二、图片缓存\"><a href=\"#二、图片缓存\" class=\"headerlink\" title=\"二、图片缓存\"></a>二、图片缓存</h3><ol>\n<li><p>Android-Universal-Image-Loader<br>图片缓存，目前使用最广泛的图片缓存，支持主流图片缓存的绝大多数特性。<br>项目地址：<a href=\"https://github.com/nostra13/Android-Universal-Image-Loader\" target=\"_blank\" rel=\"external\">https://github.com/nostra13/Android-Universal-Image-Loader</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/huxian99/Android Universal Image Loader 源码分析\" target=\"_blank\" rel=\"external\">Android-Universal-Image-Loader</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/universal-imageloader-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/universal-imageloader-demo.apk?raw=true</a><br>文档介绍：<a href=\"http://www.intexsoft.com/blog/item/74-universal-image-loader-part-3.html\" target=\"_blank\" rel=\"external\">http://www.intexsoft.com/blog/item/74-universal-image-loader-part-3.html</a>  </p>\n</li>\n<li><p>picasso<br>square 开源的图片缓存<br>项目地址：<a href=\"https://github.com/square/picasso\" target=\"_blank\" rel=\"external\">https://github.com/square/picasso</a><br>文档介绍：<a href=\"http://square.github.io/picasso/\" target=\"_blank\" rel=\"external\">http://square.github.io/picasso/</a><br>特点：(1)可以自动检测 adapter 的重用并取消之前的下载<br>(2)图片变换<br>(3)可以加载本地资源<br>(4)可以设置占位资源<br>(5)支持 debug 模式  </p>\n</li>\n<li><p>Cube ImageLoader<br>阿里巴巴一淘使用的图片加载，综合了 Android-Universal-Image-Loader 和 square 等组件优点，简单易用，良好的中文文档支持<br>项目地址：<a href=\"https://github.com/etao-open-source/cube-sdk\" target=\"_blank\" rel=\"external\">https://github.com/etao-open-source/cube-sdk</a><br>Demo 地址：<a href=\"https://github.com/liaohuqiu/cube-sdk/raw/master/cube-sdk-sample.apk\" target=\"_blank\" rel=\"external\">https://github.com/liaohuqiu/cube-sdk/raw/master/cube-sdk-sample.apk</a><br>文档介绍：<a href=\"http://cube-sdk.liaohuqiu.net/\" target=\"_blank\" rel=\"external\">http://cube-sdk.liaohuqiu.net/</a>  </p>\n</li>\n<li><p>fresco<br>一款强大的图片缓存工具，由 Facebook 开发<br>项目地址：<a href=\"https://github.com/facebook/fresco\" target=\"_blank\" rel=\"external\">https://github.com/facebook/fresco</a><br>文档介绍：<a href=\"http://frescolib.org/\" target=\"_blank\" rel=\"external\">http://frescolib.org/</a><br>特点：(1) 两个内存缓存加上磁盘缓存构成了三级缓存<br>(2) 支持流式，可以类似网页上模糊渐进式显示图片<br>(3) 对多帧动画图片支持更好，如 Gif、WebP<br>(4) 更多样的显示，如圆角、进度条、点击重试、自定义对焦点<br>(5) 更多样的加载，如支持 EXIF、全面支持 WebP<br>(6) 支持 Android 2.3+  </p>\n</li>\n<li><p>Glide<br>Glide 是一个 android 平台上的快速和高效的开源的多媒体资源管理库,提供 多媒体文件的压缩,内存和磁盘缓存, 资源池的接口。<br>它可以最大性能地在 Android 设备上读取、解码、显示图片和视频。Glide 可以将远程的图片、视频、动画图片等缓存在设备本地便于提高用户浏览图片的流畅体验。<br>项目地址：<a href=\"https://github.com/bumptech/glide\" target=\"_blank\" rel=\"external\">https://github.com/bumptech/glide</a><br>特点：<br>(1) GIF 动画的解码<br>(2) 本地视频剧照的解码<br>(3) 支持缩略图<br>(4) Activity 生命周期的集成<br>(5) 转码的支持<br>(6) 动画的支持<br>(7) OkHttp 和 Volley 的支持  </p>\n</li>\n</ol>\n<h3 id=\"三、网络请求\"><a href=\"#三、网络请求\" class=\"headerlink\" title=\"三、网络请求\"></a>三、网络请求</h3><ol>\n<li><p>Volley<br>Google 提供的网络通信库，使得网络请求更简单、更快速<br>项目地址：<a href=\"https://android.googlesource.com/platform/frameworks/volley\" target=\"_blank\" rel=\"external\">https://android.googlesource.com/platform/frameworks/volley</a><br>文档介绍：<a href=\"http://commondatastorage.googleapis.com/io-2013/presentations/110%20-%20Volley-%20Easy,%20Fast%20Networking%20for%20Android.pdf\" target=\"_blank\" rel=\"external\">http://commondatastorage.googleapis.com/io-2013/presentations/110%20-%20Volley-%20Easy,%20Fast%20Networking%20for%20Android.pdf</a>  </p>\n</li>\n<li><p>Asynchronous Http Client for Android<br>Android 异步 Http 请求<br>项目地址：<a href=\"https://github.com/loopj/android-async-http\" target=\"_blank\" rel=\"external\">https://github.com/loopj/android-async-http</a><br>文档介绍：<a href=\"http://loopj.com/android-async-http/\" target=\"_blank\" rel=\"external\">http://loopj.com/android-async-http/</a><br>特点：(1) 在匿名回调中处理请求结果<br>(2) 在 UI 线程外进行 http 请求<br>(3) 文件断点上传<br>(4) 智能重试<br>(5) 默认 gzip 压缩<br>(6) 支持解析成 Json 格式<br>(7) 可将 Cookies 持久化到 SharedPreferences  </p>\n</li>\n<li><p>android-query<br>异步加载，更少代码完成 Android 加载<br>项目地址：<a href=\"https://github.com/androidquery/androidquery\" target=\"_blank\" rel=\"external\">https://github.com/androidquery/androidquery</a> 或 <a href=\"https://code.google.com/p/android-query/\" target=\"_blank\" rel=\"external\">https://code.google.com/p/android-query/</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.androidquery\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.androidquery</a><br>文档介绍：<a href=\"https://code.google.com/p/android-query/#Why_AQuery?\" target=\"_blank\" rel=\"external\">https://code.google.com/p/android-query/#Why_AQuery?</a><br>特点：<a href=\"https://code.google.com/p/android-query/#Why_AQuery?\" target=\"_blank\" rel=\"external\">https://code.google.com/p/android-query/#Why_AQuery?</a>  </p>\n</li>\n<li><p>Async Http Client<br>Java 异步 Http 请求<br>项目地址：<a href=\"https://github.com/AsyncHttpClient/async-http-client\" target=\"_blank\" rel=\"external\">https://github.com/AsyncHttpClient/async-http-client</a><br>文档介绍：<a href=\"http://sonatype.github.io/async-http-client/\" target=\"_blank\" rel=\"external\">http://sonatype.github.io/async-http-client/</a>  </p>\n</li>\n<li><p>Ion<br>支持图片、json、http post 等异步请求<br>项目地址：<a href=\"https://github.com/koush/ion\" target=\"_blank\" rel=\"external\">https://github.com/koush/ion</a><br>文档介绍：<a href=\"https://github.com/koush/ion#more-examples\" target=\"_blank\" rel=\"external\">https://github.com/koush/ion#more-examples</a>  </p>\n</li>\n<li><p>Http Request<br>项目地址：<a href=\"https://github.com/kevinsawicki/http-request\" target=\"_blank\" rel=\"external\">https://github.com/kevinsawicki/http-request</a><br>文档介绍：<a href=\"https://github.com/kevinsawicki/http-request#examples\" target=\"_blank\" rel=\"external\">https://github.com/kevinsawicki/http-request#examples</a>  </p>\n</li>\n<li><p>okhttp<br>square 开源的 http 工具类<br>项目地址：<a href=\"https://github.com/square/okhttp\" target=\"_blank\" rel=\"external\">https://github.com/square/okhttp</a><br>文档介绍：<a href=\"http://square.github.io/okhttp/\" target=\"_blank\" rel=\"external\">http://square.github.io/okhttp/</a><br>特点：(1) 支持 SPDY( <a href=\"http://zh.wikipedia.org/wiki/SPDY\" target=\"_blank\" rel=\"external\">http://zh.wikipedia.org/wiki/SPDY</a> )协议。SPDY 协议是 Google 开发的基于传输控制协议的应用层协议，通过压缩，多路复用(一个 TCP 链接传送网页和图片等资源)和优先级来缩短加载时间。<br>(2) 如果 SPDY 不可用，利用连接池减少请求延迟<br>(3) Gzip 压缩<br>(4) Response 缓存减少不必要的请求  </p>\n</li>\n<li><p>Retrofit<br>RESTFUL API 设计<br>项目地址：<a href=\"https://github.com/square/retrofit\" target=\"_blank\" rel=\"external\">https://github.com/square/retrofit</a><br>文档介绍：<a href=\"http://square.github.io/retrofit/\" target=\"_blank\" rel=\"external\">http://square.github.io/retrofit/</a>  </p>\n</li>\n<li><p>RoboSpice<br>Android 异步网络请求工具，支持缓存、REST 等等<br>项目地址：<a href=\"https://github.com/stephanenicolas/robospice\" target=\"_blank\" rel=\"external\">https://github.com/stephanenicolas/robospice</a><br>Demo 地址：<a href=\"https://github.com/stephanenicolas/RoboDemo/downloads\" target=\"_blank\" rel=\"external\">https://github.com/stephanenicolas/RoboDemo/downloads</a>  </p>\n</li>\n<li><p>TwistVolley<br>TwistVolley 是对 Volley 的一个封装库。提供类似 Picasso 一样的串联式 API。使得使用 Volley 更加方便。<br>项目地址：<a href=\"https://github.com/TwistedEquations/TwistVolley\" target=\"_blank\" rel=\"external\">https://github.com/TwistedEquations/TwistVolley</a>  </p>\n</li>\n</ol>\n<h3 id=\"四、数据库-orm-工具包\"><a href=\"#四、数据库-orm-工具包\" class=\"headerlink\" title=\"四、数据库 orm 工具包\"></a>四、数据库 orm 工具包</h3><p>orm 的 db 工具类，简化建表、查询、更新、插入、事务、索引的操作 </p>\n<ol>\n<li><p>greenDAO<br>Android Sqlite orm 的 db 工具类<br>项目地址：<a href=\"https://github.com/greenrobot/greenDAO\" target=\"_blank\" rel=\"external\">https://github.com/greenrobot/greenDAO</a><br>文档介绍：<a href=\"http://greendao-orm.com/documentation/\" target=\"_blank\" rel=\"external\">http://greendao-orm.com/documentation/</a><br>官网网址：<a href=\"http://greendao-orm.com/\" target=\"_blank\" rel=\"external\">http://greendao-orm.com/</a><br>特点：(1) 性能佳<br>(2) 简单易用的 API<br>(3) 内存小好小<br>(4) 库大小小  </p>\n</li>\n<li><p>GreenDaoUpgradeHelper<br>greenDAO的数据库升级帮助类，只需一行代码解决数据库升级<br>项目地址：<a href=\"https://github.com/yuweiguocn/GreenDaoUpgradeHelper\" target=\"_blank\" rel=\"external\">https://github.com/yuweiguocn/GreenDaoUpgradeHelper</a></p>\n</li>\n<li><p>ActiveAndroid<br>Android Sqlite orm 的 db 工具类<br>项目地址：<a href=\"https://github.com/pardom/ActiveAndroid\" target=\"_blank\" rel=\"external\">https://github.com/pardom/ActiveAndroid</a><br>文档介绍：<a href=\"https://github.com/pardom/ActiveAndroid/wiki/_pages\" target=\"_blank\" rel=\"external\">https://github.com/pardom/ActiveAndroid/wiki/_pages</a>  </p>\n</li>\n<li><p>Sprinkles<br>Android Sqlite orm 的 db 工具类，比较显著的特点就是配合 <a href=\"https://github.com/square/retrofit\" target=\"_blank\" rel=\"external\">https://github.com/square/retrofit</a> 能保存从服务器获取的数据<br>项目地址：<a href=\"https://github.com/emilsjolander/sprinkles\" target=\"_blank\" rel=\"external\">https://github.com/emilsjolander/sprinkles</a><br>文档介绍：<a href=\"http://emilsjolander.github.io/blog/2013/12/18/android-with-sprinkles/\" target=\"_blank\" rel=\"external\">http://emilsjolander.github.io/blog/2013/12/18/android-with-sprinkles/</a>  </p>\n</li>\n<li><p>Realm<br>移动端的数据库，适用于 Phone、Tablet、Wearable，支持 ORM，线程安全、支持连表及数据库加密，比 SQLite 性能更好<br>项目地址：<a href=\"https://github.com/realm/realm-java\" target=\"_blank\" rel=\"external\">https://github.com/realm/realm-java</a><br>文档介绍：<a href=\"http://realm.io/docs/java/0.72.0/\" target=\"_blank\" rel=\"external\">http://realm.io/docs/java/0.72.0/</a>  </p>\n</li>\n<li><p>ormlite-android<br>项目地址：<a href=\"https://github.com/j256/ormlite-android\" target=\"_blank\" rel=\"external\">https://github.com/j256/ormlite-android</a><br>文档介绍：<a href=\"http://ormlite.com/sqlite_java_android_orm.shtml\" target=\"_blank\" rel=\"external\">http://ormlite.com/sqlite_java_android_orm.shtml</a>  </p>\n</li>\n<li><p>Schematic<br>根据 SQLite 生成 ContentProvider<br>项目地址：<a href=\"https://github.com/SimonVT/schematic\" target=\"_blank\" rel=\"external\">https://github.com/SimonVT/schematic</a>  </p>\n</li>\n<li><p>DBFlow<br>Android SQLite ORM 工具库。综合了 Active Android, Schematic, Ollie,Sprinkles 等库的优点；通过注解实现，性能好；能生成 ContentProvider。<br>项目地址：<a href=\"https://github.com/Raizlabs/DBFlow\" target=\"_blank\" rel=\"external\">https://github.com/Raizlabs/DBFlow</a><br>文档介绍：<a href=\"https://github.com/Raizlabs/DBFlow#usage-docs\" target=\"_blank\" rel=\"external\">https://github.com/Raizlabs/DBFlow#usage-docs</a>  </p>\n</li>\n<li><p>SnappyDB<br>SnappyDB是一个key-value数据库，非常流行的NoSQL数据库。<br>项目地址：<a href=\"https://github.com/nhachicha/SnappyDB\" target=\"_blank\" rel=\"external\">https://github.com/nhachicha/SnappyDB</a><br>演示Demo：<a href=\"https://play.google.com/store/apps/details?id=com.snappydb.snippets.app\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.snappydb.snippets.app</a></p>\n</li>\n</ol>\n<h3 id=\"五、Android-公共库\"><a href=\"#五、Android-公共库\" class=\"headerlink\" title=\"五、Android 公共库\"></a>五、Android 公共库</h3><ol>\n<li><p>Guava<br>Google 的基于 java1.6 的类库集合的扩展项目，包括 collections, caching, primitives support, concurrency libraries, common annotations, string processing, I/O 等等. 这些高质量的 API 可以使你的 JAVa 代码更加优雅，更加简洁<br>项目地址：<a href=\"https://code.google.com/p/guava-libraries/\" target=\"_blank\" rel=\"external\">https://code.google.com/p/guava-libraries/</a><br>文档介绍：<a href=\"https://code.google.com/p/guava-libraries/wiki/GuavaExplained\" target=\"_blank\" rel=\"external\">https://code.google.com/p/guava-libraries/wiki/GuavaExplained</a>  </p>\n</li>\n<li><p>AndroidCommon<br>Android 公共库<br>项目地址：<a href=\"https://github.com/Trinea/AndroidCommon\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/AndroidCommon</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=cn.trinea.android.demo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=cn.trinea.android.demo</a><br>文档介绍：<a href=\"http://www.trinea.cn/android/android-common-lib/\" target=\"_blank\" rel=\"external\">http://www.trinea.cn/android/android-common-lib/</a><br>包括：a. ImageCache 图片缓存，包含内存和 Sdcard 缓存<br><a href=\"http://www.trinea.cn/android/android-imagecache/\" target=\"_blank\" rel=\"external\">http://www.trinea.cn/android/android-imagecache/</a><br>特点：(1)支持预取新图片，支持等待队列<br>(2)包含二级缓存，可自定义文件名保存规则<br>(3)可选择多种缓存算法(FIFO、LIFO、LRU、MRU、LFU、MFU 等 13 种)或自定义缓存算法<br>(4)可方便的保存及初始化恢复数据<br>(5)支持不同类型网络处理<br>(6)可根据系统配置初始化缓存等  </p>\n</li>\n<li><p>HttpCache Http 缓存<br>文档介绍：<a href=\"http://www.trinea.cn/android/android-http-cache\" target=\"_blank\" rel=\"external\">http://www.trinea.cn/android/android-http-cache</a><br>特点是：(1) 根据 cache-control、expires 缓存 http 请求<br>(2) 支持同步、异步 Http 请求<br>(3) 在匿名回调中处理请求结果<br>(4) 在 UI 线程外进行 http 请求<br>(5) 默认 gzip 压缩<br>(2) 公共 View(下拉及底部加载更多 ListView、底部加载更多 ScrollView、滑动一页 Gallery)<br>(3) Android 常用工具类(网络、下载、Android 资源操作、shell、文件、Json、随机数、Collection 等等)  </p>\n</li>\n<li><p>DropDownListView 下拉刷新及滑动到底部加载更多 ListView<br>文档介绍：<a href=\"http://www.trinea.cn/android/dropdown-to-refresh-and-bottom-load-more-listview/\" target=\"_blank\" rel=\"external\">http://www.trinea.cn/android/dropdown-to-refresh-and-bottom-load-more-listview/</a>  </p>\n</li>\n<li><p>shipfaster<br>整合了 Dagger Otto Retrofit Robolectric Picasso OkHttp，方便快速开发<br>项目地址：<a href=\"https://github.com/pyricau/shipfaster\" target=\"_blank\" rel=\"external\">https://github.com/pyricau/shipfaster</a>  </p>\n</li>\n<li><p>CleanAndroidCode<br>整合了 Dagger Otto AndroidAnnotations，方便快速开发<br>项目地址：<a href=\"https://github.com/pyricau/CleanAndroidCode\" target=\"_blank\" rel=\"external\">https://github.com/pyricau/CleanAndroidCode</a>  </p>\n</li>\n<li><p>xUtils<br>基于 Afinal，包含 DbUtils、ViewUtils、HttpUtils、BitmapUtils 四大模块，可用于快速开发<br>项目地址：<a href=\"https://github.com/wyouflf/xUtils\" target=\"_blank\" rel=\"external\">https://github.com/wyouflf/xUtils</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/Caij/xUtils 源码解析\" target=\"_blank\" rel=\"external\">xUtils</a>  </p>\n</li>\n<li><p>Afinal<br>Afinal 是一个 android 的 ioc，orm 框架，内置了四大模块功能：FinalAcitivity,FinalBitmap,FinalDb,FinalHttp。通过 finalActivity，我们可以通过注解的方式进行绑定 ui 和事件。通过 finalBitmap，我们可以方便的加载 bitmap 图片，而无需考虑 oom 等问题。通过 finalDB 模块，我们一行代码就可以对 android 的 sqlite 数据库进行增删改查。通过 FinalHttp 模块，我们可以以 ajax 形式请求 http 数据<br>项目地址：<a href=\"https://github.com/yangfuhai/afinal\" target=\"_blank\" rel=\"external\">https://github.com/yangfuhai/afinal</a><br>官网网址：<a href=\"http://www.afinal.org\" target=\"_blank\" rel=\"external\">http://www.afinal.org</a>  </p>\n</li>\n<li><p>UltimateAndroid<br>UltimateAndroid 是一个快速开发 Android 应用的框架，框架目前主要包含的功能有 View Injection,ORM,异步网络请求和图片加载，自动化脚本测试,磁盘 LRU 等功能.同时提供了类似于 TripleDes、Webview 快速设置、Md5 处理、String 处理,Https 处理等常用工具类，还有超过 100 多种 UI 控件效果。<br>项目地址：<a href=\"https://github.com/cymcsg/UltimateAndroid\" target=\"_blank\" rel=\"external\">https://github.com/cymcsg/UltimateAndroid</a><br>官网网址：<a href=\"http://blog.marshalchen.com/UltimateAndroid/\" target=\"_blank\" rel=\"external\">http://blog.marshalchen.com/UltimateAndroid/</a>  </p>\n</li>\n<li><p>SAF<br>SAF(Simple Android Framework)是一个简单的 android 框架，它为开发 Android app 提供了基础性组件。<br>项目地址：<a href=\"https://github.com/fengzhizi715/SAF\" target=\"_blank\" rel=\"external\">https://github.com/fengzhizi715/SAF</a><br>官网网址：<a href=\"http://www.salesuite.cn/\" target=\"_blank\" rel=\"external\">http://www.salesuite.cn/</a><br>包括：(1)Event Bus(事件总线)<br>(2) Rest Client(http 的框架)<br>(3) Image Cache(图片缓存)<br>(4) Dependency Injection(依赖注入)<br>(5) Sqlite ORM(sqlite 的 orm)<br>(6) Router(Activity、Fragment 的 Router)<br>(7) Utils(各种常用的工具类)  </p>\n</li>\n<li><p>Barber<br>Custom View 神器。通过简单的注解帮助你大大减少 Custom View 中的代码量。由于和 ButterKnife 一样使用了 Annotation Proccessor ，所以对程序性能没有影响。<br>项目地址：<a href=\"https://github.com/hzsweers/barber\" target=\"_blank\" rel=\"external\">https://github.com/hzsweers/barber</a>  </p>\n</li>\n<li><p>device-year-class<br>A library that analyzes an Android device’s specifications and calculates which year the device would be considered “high end”.(facebook 开发的检测手机主流配置工具)<br>项目地址：<a href=\"https://github.com/facebook/device-year-class\" target=\"_blank\" rel=\"external\">https://github.com/facebook/device-year-class</a>  </p>\n</li>\n<li><p>RxAndroid<br>对RxJava在Android上的扩展，使得Android上也很容易实现reactive components，简化线程操作，从而写出很漂亮的代码。<br>项目地址：<a href=\"https://github.com/ReactiveX/RxAndroid\" target=\"_blank\" rel=\"external\">https://github.com/ReactiveX/RxAndroid</a><br>文档介绍：<a href=\"http://gank.io/post/560e15be2dca930e00da1083\" target=\"_blank\" rel=\"external\">给Android 开发者的 RxJava 详解</a>  </p>\n</li>\n<li><p>MultiImageSelector<br>一个本地图片选择器，支持图片的单选和多选，直接返回所选图片的路径。<br>项目地址：<a href=\"https://github.com/lovetuzitong/MultiImageSelector.git\" target=\"_blank\" rel=\"external\">https://github.com/lovetuzitong/MultiImageSelector.git</a> </p>\n</li>\n</ol>\n<h3 id=\"六、Android-高版本向低版本兼容\"><a href=\"#六、Android-高版本向低版本兼容\" class=\"headerlink\" title=\"六、Android 高版本向低版本兼容\"></a>六、Android 高版本向低版本兼容</h3><ol>\n<li><p>Nine Old Androids<br>将 Android 3.0(Honeycomb)所有动画 API(ObjectAnimator ValueAnimator 等)兼容到 Android1.0<br>项目地址：<a href=\"https://github.com/JakeWharton/NineOldAndroids\" target=\"_blank\" rel=\"external\">https://github.com/JakeWharton/NineOldAndroids</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/Mr.Simple/NineOldAnimations 源码解析\" target=\"_blank\" rel=\"external\">Nine Old Androids</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.jakewharton.nineoldandroids.sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.jakewharton.nineoldandroids.sample</a><br>文档介绍：<a href=\"http://nineoldandroids.com/\" target=\"_blank\" rel=\"external\">http://nineoldandroids.com/</a>  </p>\n</li>\n<li><p>HoloEverywhere<br>将 Android 3.0 的 Holo 主题兼容到 Android2.1++<br>项目地址：<a href=\"https://github.com/Prototik/HoloEverywhere\" target=\"_blank\" rel=\"external\">https://github.com/Prototik/HoloEverywhere</a><br>Demo 地址：<a href=\"https://raw.github.com/Prototik/HoloEverywhere/repo/org/holoeverywhere/demo/2.1.0/demo-2.1.0.apk\" target=\"_blank\" rel=\"external\">https://raw.github.com/Prototik/HoloEverywhere/repo/org/holoeverywhere/demo/2.1.0/demo-2.1.0.apk</a><br>文档介绍：<a href=\"http://android-developers.blogspot.com/2012/01/holo-everywhere.html\" target=\"_blank\" rel=\"external\">http://android-developers.blogspot.com/2012/01/holo-everywhere.html</a>  </p>\n</li>\n<li><p>SherlockNavigationDrawer<br>将 Android NavigationDrawer 和 ActionbarSherlock 结合，解决 4.0 以下 NavigationDrawer 的适配问题<br>项目地址：<a href=\"https://github.com/tobykurien/SherlockNavigationDrawer\" target=\"_blank\" rel=\"external\">https://github.com/tobykurien/SherlockNavigationDrawer</a><br>文档介绍：<a href=\"http://developer.android.com/training/implementing-navigation/nav-drawer.html\" target=\"_blank\" rel=\"external\">http://developer.android.com/training/implementing-navigation/nav-drawer.html</a>  </p>\n</li>\n<li><p>Notifications4EveryWhere<br>将 Android 4.1 的 Notification 兼容到 Android2.2++<br>项目地址：<a href=\"https://github.com/youxiachai/Notifications4EveryWhere\" target=\"_blank\" rel=\"external\">https://github.com/youxiachai/Notifications4EveryWhere</a>  </p>\n</li>\n<li><p>Android Switch Widget Backport<br>将 Android Switch 和 SwitchPreference 的兼容到 Android2.1++<br>项目地址：<a href=\"https://github.com/BoD/android-switch-backport\" target=\"_blank\" rel=\"external\">https://github.com/BoD/android-switch-backport</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=org.jraf.android.backport.switchwidget.sample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=org.jraf.android.backport.switchwidget.sample</a><br>文档介绍：<a href=\"https://github.com/BoD/android-switch-backport#using-the-switch\" target=\"_blank\" rel=\"external\">https://github.com/BoD/android-switch-backport#using-the-switch</a>  </p>\n</li>\n<li><p>android-datepicker<br>将 Android 4.0 的 datepicker 兼容到 Android2.2++<br>项目地址：<a href=\"https://github.com/SimonVT/android-datepicker\" target=\"_blank\" rel=\"external\">https://github.com/SimonVT/android-datepicker</a>  </p>\n</li>\n<li><p>Transitions Everywhere<br>Android 4.4 的 Transitions API 兼容到 Android 2.2 以上<br>项目地址：<a href=\"https://github.com/andkulikov/transitions-everywhere\" target=\"_blank\" rel=\"external\">https://github.com/andkulikov/transitions-everywhere</a>  </p>\n</li>\n<li><p>KShareViewActivityManager<br>一个兼容Android 5.0 以下Shared Element Transition （页面间共享元素位移动画）库<br>项目地址：<a href=\"https://github.com/kot32go/KShareViewActivityManager\" target=\"_blank\" rel=\"external\">https://github.com/kot32go/KShareViewActivityManager</a>  </p>\n</li>\n</ol>\n<h3 id=\"七、多媒体相关\"><a href=\"#七、多媒体相关\" class=\"headerlink\" title=\"七、多媒体相关\"></a>七、多媒体相关</h3><ol>\n<li><p>cocos2d-x<br>跨平台的 2d 游戏框架，支持 Android、IOS、Linux、Windows 等众多平台<br>项目地址：<a href=\"https://github.com/cocos2d/cocos2d-x\" target=\"_blank\" rel=\"external\">https://github.com/cocos2d/cocos2d-x</a><br>文档介绍：<a href=\"http://www.cocos2d-x.org/wiki\" target=\"_blank\" rel=\"external\">http://www.cocos2d-x.org/wiki</a><br>官网网址：<a href=\"http://www.cocos2d-x.org/\" target=\"_blank\" rel=\"external\">http://www.cocos2d-x.org/</a>  </p>\n</li>\n<li><p>JustWeEngine<br>Android的轻量级游戏框架，能大大缩减编写原生游戏的代码量和难度，仍在持续更新中。<br>项目地址: <a href=\"https://github.com/lfkdsk/JustWeEngine\" target=\"_blank\" rel=\"external\">https://github.com/lfkdsk/JustWeEngine</a><br>Demo地址: <a href=\"https://github.com/lfkdsk/EngineDemo\" target=\"_blank\" rel=\"external\">https://github.com/lfkdsk/EngineDemo</a>  </p>\n</li>\n<li><p>Vitamio<br>是一款 Android 与 iOS 平台上的全能多媒体开发框架<br>项目地址：<a href=\"https://github.com/yixia/VitamioBundle\" target=\"_blank\" rel=\"external\">https://github.com/yixia/VitamioBundle</a><br>网站介绍：<a href=\"http://www.vitamio.org/docs/\" target=\"_blank\" rel=\"external\">http://www.vitamio.org/docs/</a><br>特点：(1) 全面支持硬件解码与 GPU 渲染<br>(2) 能够流畅播放 720P 甚至 1080P 高清 MKV，FLV，MP4，MOV，TS，RMVB 等常见格式的视频<br>(3) 在 Android 与 iOS 上跨平台支持 MMS, RTSP, RTMP, HLS(m3u8)等常见的多种视频流媒体协议，包括点播与直播。 </p>\n</li>\n<li><p>VDPlayerSDK<br>最容易集成的开源播放器组件，支持直播，支持软硬解切换，支持清晰度切换<br>项目地址：<a href=\"https://github.com/SinaVDDeveloper/\" target=\"_blank\" rel=\"external\">https://github.com/SinaVDDeveloper/</a><br>Demo 地址：<a href=\"https://github.com/SinaVDDeveloper/demo\" target=\"_blank\" rel=\"external\">https://github.com/SinaVDDeveloper/demo</a><br>文档介绍：<a href=\"https://github.com/SinaVDDeveloper/sinavideo_playersdk\" target=\"_blank\" rel=\"external\">https://github.com/SinaVDDeveloper/sinavideo_playersdk</a><br>特点：<br>(1) 使用自定义控件方式提供播放器UI，不需要视频相关知识，能编写android应用就能使用<br>(2) 软硬解切换、点播直播支持<br>(3) 解码内核小于4M，更方便集成到非专业视频app中<br>(4) 修正一些vitaimio的问题，比如m3u8可以拖动等等</p>\n</li>\n<li><p>VideoPlayerManager<br>帮助实现VideoPlayer控制，使得它更容易使用ListView和recyclerview。它还可以跟踪滚动列表中可见的项。当列表中的新项可见域最大时，该库给出了接口来跟踪它。<br>项目地址：<a href=\"https://github.com/danylovolokh/VideoPlayerManager\" target=\"_blank\" rel=\"external\">https://github.com/danylovolokh/VideoPlayerManager</a><br>文档介绍：<a href=\"https://medium.com/@v.danylo/implementing-video-playback-in-a-scrolled-list-listview-recyclerview-d04bc2148429#.hs5n0geqn\" target=\"_blank\" rel=\"external\">https://medium.com/@v.danylo/implementing-video-playback-in-a-scrolled-list-listview-recyclerview-d04bc2148429#.hs5n0geqn</a>  </p>\n</li>\n<li><p>UniversalVideoView<br>Android上定义播放器控件,支持自定义控制UI, 全屏播放, 重力感应自动切换横竖屏.<br>项目地址：<a href=\"https://github.com/linsea/UniversalVideoView\" target=\"_blank\" rel=\"external\">https://github.com/linsea/UniversalVideoView</a>  </p>\n</li>\n<li><p>PhotoProcessing<br>利用 ndk 处理图片库，支持 Instafix、Ansel、Testino、XPro、Retro、BW、Sepia、Cyano、Georgia、Sahara、HDR、Rotate(旋转)、Flip(翻转)等各种特效<br>项目地址：<a href=\"https://github.com/lightbox/PhotoProcessing\" target=\"_blank\" rel=\"external\">https://github.com/lightbox/PhotoProcessing</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/photo-processing.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/photo-processing.apk?raw=true</a>  </p>\n</li>\n<li><p>Android StackBlur<br>图片模糊效果工具类<br>项目地址：<a href=\"https://github.com/kikoso/android-stackblur\" target=\"_blank\" rel=\"external\">https://github.com/kikoso/android-stackblur</a><br>Demo 地址：<a href=\"https://github.com/kikoso/android-stackblur/blob/master/StackBlurDemo/bin/StackBlurDemo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/kikoso/android-stackblur/blob/master/StackBlurDemo/bin/StackBlurDemo.apk?raw=true</a><br>文档介绍：<a href=\"https://github.com/kikoso/android-stackblur#usage\" target=\"_blank\" rel=\"external\">https://github.com/kikoso/android-stackblur#usage</a>  </p>\n</li>\n<li><p>Bitmap Smart Clipping using OpenCV<br>图片智能裁剪保留重要部分显示<br>项目地址：<a href=\"https://github.com/beartung/tclip-android\" target=\"_blank\" rel=\"external\">https://github.com/beartung/tclip-android</a><br>利用淘宝的 <a href=\"http://code.taobao.org/p/tclip/\" target=\"_blank\" rel=\"external\">http://code.taobao.org/p/tclip/</a> 库完成<br>一淘玩客正在使用的图片裁剪，自动识别图片中的重要区域，并且在图片裁剪时保留重要区域<br>特点：(1). 能进行人脸识别。图片中有人脸，将自动视为人脸区域为重要区域，将不会被裁剪掉<br>(2).自动其它重要区域。如果图片中未识别出人脸，则会根据特征分布计算出重区域  </p>\n</li>\n<li><p>Cropper<br>图片局部剪切工具，可触摸控制选择区域或旋转<br>项目地址：<a href=\"https://github.com/edmodo/cropper\" target=\"_blank\" rel=\"external\">https://github.com/edmodo/cropper</a><br>文档介绍：<a href=\"https://github.com/edmodo/cropper/wiki\" target=\"_blank\" rel=\"external\">https://github.com/edmodo/cropper/wiki</a>  </p>\n</li>\n<li><p>uCrop<br>Yalantis 出品的强大的图片裁剪库 ，支持缩放，旋转图片，支持各种比例的裁剪框<br>项目地址：<a href=\"https://github.com/Yalantis/uCrop\" target=\"_blank\" rel=\"external\">https://github.com/Yalantis/uCrop</a>  </p>\n</li>\n<li><p>android-crop<br>图片裁剪 Activity<br>项目地址：<a href=\"https://github.com/jdamcd/android-crop\" target=\"_blank\" rel=\"external\">https://github.com/jdamcd/android-crop</a>  </p>\n</li>\n<li><p>TileView<br>可分块显示大图，支持 2D 拖动、双击、双指放大、双指捏合<br>项目地址：<a href=\"https://github.com/moagrius/TileView\" target=\"_blank\" rel=\"external\">https://github.com/moagrius/TileView</a><br>Demo 地址：<a href=\"http://moagrius.github.io/TileView/TileViewDemo.apk\" target=\"_blank\" rel=\"external\">http://moagrius.github.io/TileView/TileViewDemo.apk</a>  </p>\n</li>\n<li><p>BlurEffectForAndroidDesign<br>图片模糊效果<br>项目地址：<a href=\"https://github.com/PomepuyN/BlurEffectForAndroidDesign\" target=\"_blank\" rel=\"external\">https://github.com/PomepuyN/BlurEffectForAndroidDesign</a>  </p>\n</li>\n<li><p>android-eye<br>PC 端网页查看同一局域网内的手机摄像头内容，可以用来监控哦<br>项目地址：<a href=\"https://github.com/Teaonly/android-eye\" target=\"_blank\" rel=\"external\">https://github.com/Teaonly/android-eye</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=teaonly.droideye\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=teaonly.droideye</a>  </p>\n</li>\n<li><p>libpng for Android<br>PNG 图片的 jni 库，支持几乎 png 的所有特性<br>项目地址：<a href=\"https://github.com/julienr/libpng-android\" target=\"_blank\" rel=\"external\">https://github.com/julienr/libpng-android</a><br>文档介绍：<a href=\"http://www.libpng.org/pub/png/libpng.html\" target=\"_blank\" rel=\"external\">http://www.libpng.org/pub/png/libpng.html</a>  </p>\n</li>\n<li><p>android-gpuimage<br>基于 GPU 的图片滤镜<br>项目地址：<a href=\"https://github.com/CyberAgent/android-gpuimage\" target=\"_blank\" rel=\"external\">https://github.com/CyberAgent/android-gpuimage</a>  </p>\n</li>\n<li><p>AndroidFaceCropper<br>图片脸部自动识别，将识别后的局部图片返回<br>项目地址：<a href=\"https://github.com/lafosca/AndroidFaceCropper\" target=\"_blank\" rel=\"external\">https://github.com/lafosca/AndroidFaceCropper</a>  </p>\n</li>\n<li><p>Android Video Crop<br>利用 TextureView 播放和剪切视频，类似 ImageView.setScaleType<br>项目地址：<a href=\"https://github.com/dmytrodanylyk/android-video-crop\" target=\"_blank\" rel=\"external\">https://github.com/dmytrodanylyk/android-video-crop</a><br>Demo 地址：<a href=\"https://github.com/lafosca/AndroidFaceCropper/releases/download/1.0/FaceCropper-sample-debug-unaligned.apk\" target=\"_blank\" rel=\"external\">https://github.com/lafosca/AndroidFaceCropper/releases/download/1.0/FaceCropper-sample-debug-unaligned.apk</a>  </p>\n</li>\n<li><p>svg-android<br>Android Svg 矢量图形支持<br>项目地址：<a href=\"https://github.com/japgolly/svg-android\" target=\"_blank\" rel=\"external\">https://github.com/japgolly/svg-android</a> <a href=\"https://github.com/japgolly/svg-android\" target=\"_blank\" rel=\"external\">https://github.com/japgolly/svg-android</a>  </p>\n</li>\n<li><p>Android Visualizer<br>从 Android MediaPlayer 获得音频，然后像 iTunes 及 WinAmp 一样展示音轨<br>项目地址：<a href=\"https://github.com/felixpalmer/android-visualizer\" target=\"_blank\" rel=\"external\">https://github.com/felixpalmer/android-visualizer</a>  </p>\n</li>\n<li><p>ExoPlayer<br>包括仪表板和 SmoothStreaming 自适应回放，缓存持久化和自定义渲染器，方便自定义和扩展，并且可以通过应用商店更新<br>项目地址：<a href=\"https://github.com/google/ExoPlayer\" target=\"_blank\" rel=\"external\">https://github.com/google/ExoPlayer</a>  </p>\n</li>\n<li><p>DanmakuFlameMaster<br>android 上开源弹幕解析绘制引擎项目<br>项目地址：<a href=\"https://github.com/ctiao/DanmakuFlameMaster\" target=\"_blank\" rel=\"external\">https://github.com/ctiao/DanmakuFlameMaster</a>  </p>\n</li>\n<li><p>OpenDanmaku<br>android 上一个轻量级的更简单的开源弹幕控件<br>项目地址：<a href=\"https://github.com/linsea/OpenDanmaku\" target=\"_blank\" rel=\"external\">https://github.com/linsea/OpenDanmaku</a>  </p>\n</li>\n</ol>\n<h3 id=\"八、事件总线-订阅者模式\"><a href=\"#八、事件总线-订阅者模式\" class=\"headerlink\" title=\"八、事件总线(订阅者模式)\"></a>八、事件总线(订阅者模式)</h3><p>通过发布/订阅事件解耦事件发送和接受，从而简化应用程序组件(Activities, Fragments 及后台线程)之间的通信  </p>\n<ol>\n<li><p>EventBus<br>greenrobot 的开源项目<br>项目地址：<a href=\"https://github.com/greenrobot/EventBus\" target=\"_blank\" rel=\"external\">https://github.com/greenrobot/EventBus</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/Trinea/EventBus 源码解析\" target=\"_blank\" rel=\"external\">EventBus</a><br>文档介绍：<a href=\"https://github.com/greenrobot/EventBus#general-usage-and-api\" target=\"_blank\" rel=\"external\">https://github.com/greenrobot/EventBus#general-usage-and-api</a><br>特点：(1) 支持在不同类型的线程中处理订阅，包括发布所在线程，UI 线程、单一后台线程、异步线程<br>(2) 支持事件优先级定义，支持优先级高的订阅者取消事件继续传递，支持粘性事件，是不是跟系统的有序广播、粘性广播很像啊<br>(3) 不是基于 annotations<br>(4) 性能更优<br>(5) 体积小<br>(6) 支持单例创建或创建多个对象<br>(7) 支持根据事件类型订阅  </p>\n</li>\n<li><p>Otto<br>Square 的开源项目，基于 Guava 的 Android 优化<br>项目地址：<a href=\"https://github.com/square/otto\" target=\"_blank\" rel=\"external\">https://github.com/square/otto</a><br>文档介绍：<a href=\"http://square.github.io/otto/\" target=\"_blank\" rel=\"external\">http://square.github.io/otto/</a><br><a href=\"https://github.com/greenrobot/EventBus#comparison-with-squares-otto\" target=\"_blank\" rel=\"external\">EventBus 与 Otto 的功能及性能对比文档</a><br><a href=\"https://play.google.com/store/apps/details?id=de.greenrobot.eventperf\" target=\"_blank\" rel=\"external\">EventBus 与 Otto 性能对比 Demo Apk</a>  </p>\n</li>\n</ol>\n<h3 id=\"九、传感器\"><a href=\"#九、传感器\" class=\"headerlink\" title=\"九、传感器\"></a>九、传感器</h3><ol>\n<li><p>Great Android Sensing Toolkit<br>Android 感应器工具包，包含示例及使用过程中可能需要的算法<br>项目地址：<a href=\"https://github.com/gast-lib/gast-lib\" target=\"_blank\" rel=\"external\">https://github.com/gast-lib/gast-lib</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=root.gast.playground\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=root.gast.playground</a><br>文档介绍：<a href=\"https://github.com/gast-lib/gast-lib#documentation\" target=\"_blank\" rel=\"external\">https://github.com/gast-lib/gast-lib#documentation</a>  </p>\n</li>\n<li><p>SensorManager<br>Android 传感器管理<br>项目地址：<a href=\"https://github.com/nlathia/SensorManager\" target=\"_blank\" rel=\"external\">https://github.com/nlathia/SensorManager</a><br>文档介绍：<a href=\"https://docs.google.com/document/d/1TqThJULb-4e6TGb1gdkAaPCfyuXStjJpbnt7a0OZ9OE/edit\" target=\"_blank\" rel=\"external\">https://docs.google.com/document/d/1TqThJULb-4e6TGb1gdkAaPCfyuXStjJpbnt7a0OZ9OE/edit</a>  </p>\n</li>\n<li><p>GPSLogger<br>记录 GPS 信息<br>项目地址：<a href=\"https://github.com/mendhak/gpslogger\" target=\"_blank\" rel=\"external\">https://github.com/mendhak/gpslogger</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.mendhak.gpslogger\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.mendhak.gpslogger</a><br>文档介绍：<a href=\"http://code.mendhak.com/gpslogger/\" target=\"_blank\" rel=\"external\">http://code.mendhak.com/gpslogger/</a>  </p>\n</li>\n<li><p>Pedometer<br>计步器，使用硬件计步感应器<br>项目地址：<a href=\"https://github.com/j4velin/Pedometer\" target=\"_blank\" rel=\"external\">https://github.com/j4velin/Pedometer</a>  </p>\n</li>\n<li><p>leapcast<br>ChromeCast 模拟器的 App<br>项目地址：<a href=\"https://github.com/dz0ny/leapcast\" target=\"_blank\" rel=\"external\">https://github.com/dz0ny/leapcast</a>  </p>\n</li>\n<li><p>Arduino-Communicator<br>与 Arduino 通信的 App<br>项目地址：<a href=\"https://github.com/jeppsson/Arduino-Communicator\" target=\"_blank\" rel=\"external\">https://github.com/jeppsson/Arduino-Communicator</a>  </p>\n</li>\n<li><p>android-pedometer<br>Android 计步器<br>项目地址：<a href=\"https://github.com/bagilevi/android-pedometer\" target=\"_blank\" rel=\"external\">https://github.com/bagilevi/android-pedometer</a><br>Demo 地址：<a href=\"http://pedometer.googlecode.com/files/Pedometer-1.4.apk\" target=\"_blank\" rel=\"external\">http://pedometer.googlecode.com/files/Pedometer-1.4.apk</a>  </p>\n</li>\n<li><p>OwnTracks for Android<br>自己的轨迹记录<br>项目地址：<a href=\"https://github.com/owntracks/android\" target=\"_blank\" rel=\"external\">https://github.com/owntracks/android</a>  </p>\n</li>\n<li><p>Shake Detector library for Android<br>Android 手机震动摇晃检测库，提供供 UI 线程调用的回调接口<br>项目地址：<a href=\"https://github.com/tbouron/ShakeDetector\" target=\"_blank\" rel=\"external\">https://github.com/tbouron/ShakeDetector</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.github.tbouron.shakedetector.example\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.github.tbouron.shakedetector.example</a>  </p>\n</li>\n<li><p>Android heart rate monitor<br>Android 心跳检测<br>项目地址：<a href=\"https://github.com/phishman3579/android-heart-rate-monitor\" target=\"_blank\" rel=\"external\">https://github.com/phishman3579/android-heart-rate-monitor</a>  </p>\n</li>\n<li><p>Bluetooth LE Library for Android<br>蓝牙源信息，包括宝库 Mac、更新时间、RSSI、UUID、信号源距离、影响范围等信息<br>项目地址：<a href=\"https://github.com/alt236/Bluetooth-LE-Library---Android\" target=\"_blank\" rel=\"external\">https://github.com/alt236/Bluetooth-LE-Library---Android</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=uk.co.alt236.btlescan\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=uk.co.alt236.btlescan</a>  </p>\n</li>\n<li><p>farebot<br>通过 NFC 从公交卡中读取数据的一个应用<br>项目地址：<a href=\"https://github.com/codebutler/farebot\" target=\"_blank\" rel=\"external\">https://github.com/codebutler/farebot</a>  </p>\n</li>\n</ol>\n<h3 id=\"十、安全\"><a href=\"#十、安全\" class=\"headerlink\" title=\"十、安全\"></a>十、安全</h3><ol>\n<li><p>SQLCipher<br>Sqlite 加密工具<br>项目地址：<a href=\"https://github.com/sqlcipher/sqlcipher\" target=\"_blank\" rel=\"external\">https://github.com/sqlcipher/sqlcipher</a><br>文档介绍：<a href=\"http://sqlcipher.net/sqlcipher-for-android/\" target=\"_blank\" rel=\"external\">http://sqlcipher.net/sqlcipher-for-android/</a>  </p>\n</li>\n<li><p>Conceal<br>快速高效的进行文件加密解密<br>项目地址：<a href=\"https://github.com/facebook/conceal\" target=\"_blank\" rel=\"external\">https://github.com/facebook/conceal</a><br>文档介绍：<a href=\"https://github.com/facebook/conceal#usage\" target=\"_blank\" rel=\"external\">https://github.com/facebook/conceal#usage</a>  </p>\n</li>\n<li><p>Android-PasscodeLock<br>应用锁，每次启动或从任何 Activity 启动应用都需要输入四位数字的密码方可进入<br>项目地址：<a href=\"https://github.com/wordpress-mobile/Android-PasscodeLock\" target=\"_blank\" rel=\"external\">https://github.com/wordpress-mobile/Android-PasscodeLock</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=org.wordpress.android\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=org.wordpress.android</a><br>APP 示例：Wordpress Android，支付宝，挖财  </p>\n</li>\n<li><p>GlowPadBackport<br>将 Android4.2 的锁屏界面解锁扩展到 Android1.6 及 1.6+<br>项目地址：<a href=\"https://github.com/rock3r/GlowPadBackport\" target=\"_blank\" rel=\"external\">https://github.com/rock3r/GlowPadBackport</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=net.sebastianopoggi.samples.ui.GlowPadSample\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=net.sebastianopoggi.samples.ui.GlowPadSample</a>  </p>\n</li>\n<li><p>GlowPadView<br>Android 4 锁屏界面解锁<br>项目地址：<a href=\"https://github.com/nadavfima/GlowPadView\" target=\"_blank\" rel=\"external\">https://github.com/nadavfima/GlowPadView</a>  </p>\n</li>\n<li><p>Android-InsecureBank<br>关于 Android 不安全性的示例<br>项目地址：<a href=\"https://github.com/dineshshetty/Android-InsecureBankv2\" target=\"_blank\" rel=\"external\">https://github.com/dineshshetty/Android-InsecureBankv2</a>  </p>\n</li>\n</ol>\n<h3 id=\"十一、插件化\"><a href=\"#十一、插件化\" class=\"headerlink\" title=\"十一、插件化\"></a>十一、插件化</h3><p>更多见：<a href=\"http://www.trinea.cn/android/android-plugin/\" target=\"_blank\" rel=\"external\">Android 插件化作用、概念以及不错的资料(包括开源项目)和解决方案</a>  </p>\n<ol>\n<li><p>dynamic-load-apk<br>Android 动态加载 Apk，热部署，利用 ClassLoader 以及 Activity 代理的方式解决<br>项目地址：<a href=\"https://github.com/singwhatiwanna/dynamic-load-apk\" target=\"_blank\" rel=\"external\">https://github.com/singwhatiwanna/dynamic-load-apk</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/FFish/DynamicLoadApk 源码解析\" target=\"_blank\" rel=\"external\">dynamic-load-apk</a><br>文档介绍：<a href=\"http://blog.csdn.net/singwhatiwanna/article/details/22597587\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/singwhatiwanna/article/details/22597587</a>  </p>\n</li>\n<li><p>Android Dynamic Loader<br>点评的实现方式，和上面不同的是：他不是用代理 Activity 的方式实现而是用 Fragment 以及 Schema 的方式实现<br>项目地址：<a href=\"https://github.com/mmin18/AndroidDynamicLoader\" target=\"_blank\" rel=\"external\">https://github.com/mmin18/AndroidDynamicLoader</a><br>Demo 地址：<a href=\"https://github.com/mmin18/AndroidDynamicLoader/raw/master/host.apk\" target=\"_blank\" rel=\"external\">https://github.com/mmin18/AndroidDynamicLoader/raw/master/host.apk</a>  </p>\n</li>\n<li><p>xCombine<br>Android App 插件式插件开发，插件必须先安装，更推荐看上面两个开源项目<br>项目地址：<a href=\"https://github.com/wyouflf/xCombine\" target=\"_blank\" rel=\"external\">https://github.com/wyouflf/xCombine</a><br>文档介绍：<a href=\"http://my.oschina.net/u/1171837/blog/155377\" target=\"_blank\" rel=\"external\">http://my.oschina.net/u/1171837/blog/155377</a>  </p>\n</li>\n<li><p>Android Plugin Framework<br>Android 插件式开发，开放的源码目前不完整<br>项目地址：<a href=\"https://github.com/umeng/apf\" target=\"_blank\" rel=\"external\">https://github.com/umeng/apf</a>  </p>\n</li>\n<li><p>Android OpenAtlas<br>Android插件框架，基于OSGI，非代理方式，组件需要在宿主中声明<br>项目地址：<a href=\"https://github.com/bunnyblue/OpenAtlas\" target=\"_blank\" rel=\"external\">https://github.com/bunnyblue/OpenAtlas</a><br>Demo 地址：<a href=\"https://github.com/bunnyblue/OpenAtlasExtension/blob/master/Dist/OpenAtlasLauncher.apk\" target=\"_blank\" rel=\"external\">https://github.com/bunnyblue/OpenAtlasExtension/blob/master/Dist/OpenAtlasLauncher.apk</a> </p>\n</li>\n<li><p>multidex<br>安装多 dex 的 classloader<br>项目地址：<a href=\"https://github.com/casidiablo/multidex\" target=\"_blank\" rel=\"external\">https://github.com/casidiablo/multidex</a>  </p>\n</li>\n<li><p>ANR-WatchDog<br>Android ANR 监听，通过监听自己的 UI Thread 是否被执行确定是否发生了 ANR，并可以设置相关事件<br>项目地址：<a href=\"https://github.com/SalomonBrys/ANR-WatchDog\" target=\"_blank\" rel=\"external\">https://github.com/SalomonBrys/ANR-WatchDog</a>  </p>\n</li>\n</ol>\n<h3 id=\"十二、文件\"><a href=\"#十二、文件\" class=\"headerlink\" title=\"十二、文件\"></a>十二、文件</h3><p>对不同文档类型的处理，包括 PDF、Word、EPub、Html、Zip 等  </p>\n<ol>\n<li><p>purePDF<br>允许从任何运行的 SWF 文件读取和创建 PDF 文档<br>项目地址：<a href=\"https://github.com/sephiroth74/purePDF\" target=\"_blank\" rel=\"external\">https://github.com/sephiroth74/purePDF</a>  </p>\n</li>\n<li><p>android-pdfview<br>快速解析 pdf 的 view，默认支持手势缩放和相关动画<br>项目地址：<a href=\"https://github.com/JoanZapata/android-pdfview\" target=\"_blank\" rel=\"external\">https://github.com/JoanZapata/android-pdfview</a>  </p>\n</li>\n<li><p>Office 365 SDK for Android Preview<br>可支持 Microsoft SharePoint Lists, Microsoft SharePoint Files, Microsoft Exchange Calendar, Microsoft Exchange Contacts, Microsoft Exchange Mail<br>项目地址：<a href=\"https://github.com/OfficeDev/Office-365-SDK-for-Android\" target=\"_blank\" rel=\"external\">https://github.com/OfficeDev/Office-365-SDK-for-Android</a>  </p>\n</li>\n<li><p>OpenSpritz-Android<br>EPub 阅读器<br>项目地址：<a href=\"https://github.com/OnlyInAmerica/OpenSpritz-Android\" target=\"_blank\" rel=\"external\">https://github.com/OnlyInAmerica/OpenSpritz-Android</a>  </p>\n</li>\n<li><p>jsoup<br>一个解析 html 的 java 库，可方便的提取和操作数据<br>项目地址：<a href=\"https://github.com/jhy/jsoup\" target=\"_blank\" rel=\"external\">https://github.com/jhy/jsoup</a><br>官网网址：<a href=\"http://jsoup.org/\" target=\"_blank\" rel=\"external\">http://jsoup.org/</a><br>作用：(1) 从一个 url、文件或 string 获得 html 并解析<br>(2) 利用 dom 遍历或 css 选择器查找、提取数据<br>(3) 操作 html 元素<br>(4) 根据白名单去除用于提交的非法数据防止 xss 攻击<br>(5) 输出整齐的 html  </p>\n</li>\n<li><p>ZIP<br>java 压缩和解压库<br>项目地址：<a href=\"https://github.com/zeroturnaround/zt-zip\" target=\"_blank\" rel=\"external\">https://github.com/zeroturnaround/zt-zip</a><br>文档介绍：<a href=\"https://github.com/zeroturnaround/zt-zip#examples\" target=\"_blank\" rel=\"external\">https://github.com/zeroturnaround/zt-zip#examples</a><br>作用：(1) 解压和压缩，并支持文件夹内递归操作<br>(2) 支持包含和排除某些元素<br>(3) 支持重命名元素<br>(4) 支持遍历 zip 包内容<br>(5) 比较两个 zip 包等功能  </p>\n</li>\n<li><p>Image File Selector<br>轻量级的图片文件选择器，用系统api选取，压缩和裁切图片，可以方便的得要指定尺寸的图片<br>项目地址：<a href=\"https://github.com/sw926/ImageFileSelector\" target=\"_blank\" rel=\"external\">https://github.com/sw926/ImageFileSelector</a>  </p>\n</li>\n</ol>\n<h3 id=\"十三、其他\"><a href=\"#十三、其他\" class=\"headerlink\" title=\"十三、其他\"></a>十三、其他</h3><ol>\n<li><p>FragmentStack<br>一个封装了启动模式的Fragment便捷使用库,方便构建单Activity+多Fragment轻量级框架<br>项目地址：<a href=\"https://github.com/Mr-wangyong/FragmentStack\" target=\"_blank\" rel=\"external\">https://github.com/Mr-wangyong/FragmentStack</a><br>App示例：<a href=\"http://www.wandoujia.com/apps/cn.vcinema.cinema\" target=\"_blank\" rel=\"external\">南瓜电影</a>  </p>\n</li>\n<li><p>CustomTabsHelper<br>快速集成 CustomTabs 的工具类<br>项目地址：<a href=\"https://github.com/DreaminginCodeZH/CustomTabsHelper\" target=\"_blank\" rel=\"external\">https://github.com/DreaminginCodeZH/CustomTabsHelper</a>  </p>\n</li>\n<li><p>Salvage view<br>带 View 缓存的 Viewpager PagerAdapter，很方便使用<br>项目地址：<a href=\"https://github.com/JakeWharton/salvage\" target=\"_blank\" rel=\"external\">https://github.com/JakeWharton/salvage</a>  </p>\n</li>\n<li><p>Android Priority Job Queue<br>Android 后台任务队列<br>项目地址：<a href=\"https://github.com/path/android-priority-jobqueue\" target=\"_blank\" rel=\"external\">https://github.com/path/android-priority-jobqueue</a><br>文档介绍：<a href=\"https://github.com/path/android-priority-jobqueue#getting-started\" target=\"_blank\" rel=\"external\">https://github.com/path/android-priority-jobqueue#getting-started</a>  </p>\n</li>\n<li><p>Cobub Razor<br>开源的 mobile 行为分析系统，包括 web 端、android 端，支持 ios 和 window phone<br>项目地址：<a href=\"https://github.com/cobub/razor\" target=\"_blank\" rel=\"external\">https://github.com/cobub/razor</a><br>Demo 地址：<a href=\"http://demo.cobub.com/razor\" target=\"_blank\" rel=\"external\">http://demo.cobub.com/razor</a><br>官网网址：<a href=\"http://dev.cobub.com/\" target=\"_blank\" rel=\"external\">http://dev.cobub.com/</a>  </p>\n</li>\n<li><p>Countly<br>Android 移动端数据采集分析系统<br>项目地址：<a href=\"https://github.com/Countly/countly-sdk-android\" target=\"_blank\" rel=\"external\">https://github.com/Countly/countly-sdk-android</a><br>官网网址：<a href=\"https://count.ly/\" target=\"_blank\" rel=\"external\">https://count.ly/</a>  </p>\n</li>\n<li><p>aFileChooser<br>文件选择器，可内嵌到程序中，而无需使用系统或三方文件选择器。<br>项目地址：<a href=\"https://github.com/iPaulPro/aFileChooser\" target=\"_blank\" rel=\"external\">https://github.com/iPaulPro/aFileChooser</a>  </p>\n</li>\n<li><p>androidpn<br>基于 xmpp 协议的消息推送解决方案，包括服务器端和 android 端。<br>项目地址：<a href=\"https://github.com/dannytiehui/androidpn\" target=\"_blank\" rel=\"external\">https://github.com/dannytiehui/androidpn</a>  </p>\n</li>\n<li><p>Bolts<br>Android 的异步编程模式<br>项目地址：<a href=\"https://github.com/BoltsFramework/Bolts-Android/\" target=\"_blank\" rel=\"external\">https://github.com/BoltsFramework/Bolts-Android/</a><br>与 AsyncTask 比较：(1) 使用的是无大小限制的线程池<br>(2) 任务可组合可级联，防止了代码耦合  </p>\n</li>\n<li><p>CastCompanionLibrary-android<br>使 Android 程序中更快的接入 Google Cast<br>项目地址：<a href=\"https://github.com/googlecast/CastCompanionLibrary-android\" target=\"_blank\" rel=\"external\">https://github.com/googlecast/CastCompanionLibrary-android</a><br>文档介绍：<a href=\"https://developers.google.com/cast/\" target=\"_blank\" rel=\"external\">https://developers.google.com/cast/</a>  </p>\n</li>\n<li><p>CastVideos-android<br>从 Android 设备分享 Video 通过 Google Cast<br>项目地址：<a href=\"https://github.com/googlecast/CastVideos-android\" target=\"_blank\" rel=\"external\">https://github.com/googlecast/CastVideos-android</a><br>文档介绍：<a href=\"https://developers.google.com/cast/\" target=\"_blank\" rel=\"external\">https://developers.google.com/cast/</a>  </p>\n</li>\n<li><p>Uninstall_Statics<br>Android 应用自身被卸载监听及打开浏览器等反馈功能实现<br>项目地址：<a href=\"https://github.com/sevenler/Uninstall_Statics\" target=\"_blank\" rel=\"external\">https://github.com/sevenler/Uninstall_Statics</a><br>文档介绍：<a href=\"http://www.cnblogs.com/zealotrouge/p/3157126.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/zealotrouge/p/3157126.html</a>  <a href=\"http://www.cnblogs.com/zealotrouge/p/3159772.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/zealotrouge/p/3159772.html</a>  </p>\n</li>\n<li><p>Memento<br>保证在系统配置改变时，Activity 中的某些数据可以简单安全的保持不变<br>项目地址：<a href=\"https://github.com/mttkay/memento\" target=\"_blank\" rel=\"external\">https://github.com/mttkay/memento</a><br>文档介绍：<a href=\"https://github.com/mttkay/memento#usage\" target=\"_blank\" rel=\"external\">https://github.com/mttkay/memento#usage</a>  </p>\n</li>\n<li><p>FreeFlow<br>布局引擎，更简单的创建自定义布局，并且当数据和布局改变时更美观的过渡动画<br>项目地址：<a href=\"https://github.com/Comcast/FreeFlow\" target=\"_blank\" rel=\"external\">https://github.com/Comcast/FreeFlow</a><br>Demo 地址：<a href=\"https://github.com/Comcast/FreeFlow/releases\" target=\"_blank\" rel=\"external\">https://github.com/Comcast/FreeFlow/releases</a>  </p>\n</li>\n<li><p>Android Gesture Detectors Framework<br>Android 手势框架，支持双指旋转、移动、平移、缩放等<br>项目地址：<a href=\"https://github.com/Almeros/android-gesture-detectors\" target=\"_blank\" rel=\"external\">https://github.com/Almeros/android-gesture-detectors</a>  </p>\n</li>\n<li><p>Mapbox Android SDK<br>Android Map 的替代版<br>项目地址：<a href=\"https://github.com/mapbox/mapbox-android-sdk\" target=\"_blank\" rel=\"external\">https://github.com/mapbox/mapbox-android-sdk</a>  </p>\n</li>\n<li><p>Activity animation<br>Activity 跳转动画，支持各个方向波浪的效果<br>项目地址：<a href=\"https://github.com/flavienlaurent/activityanimation\" target=\"_blank\" rel=\"external\">https://github.com/flavienlaurent/activityanimation</a><br>在线演示：<a href=\"https://www.youtube.com/watch?v=-E0sc6w_Jck\" target=\"_blank\" rel=\"external\">https://www.youtube.com/watch?v=-E0sc6w_Jck</a>  </p>\n</li>\n<li><p>KryoNet<br>通过 NIO 提供客户端和服务器端 TCP/UDP 网络传输的 Java 库<br>项目地址：<a href=\"https://github.com/EsotericSoftware/kryonet\" target=\"_blank\" rel=\"external\">https://github.com/EsotericSoftware/kryonet</a>  </p>\n</li>\n<li><p>Rebound<br>一个模仿弹簧反弹的 Java 库，可用于创建动画<br>项目地址：<a href=\"https://github.com/facebook/rebound\" target=\"_blank\" rel=\"external\">https://github.com/facebook/rebound</a>  </p>\n</li>\n<li><p>Android Social Networks<br>社交网络接入统一管理器，可方便的从 Twitter, LinkedIn, Facebook, Google Plus 登陆、获得个人信息、发送消息、发送专篇、添加或删除好友<br>项目地址：<a href=\"https://github.com/antonkrasov/AndroidSocialNetworks\" target=\"_blank\" rel=\"external\">https://github.com/antonkrasov/AndroidSocialNetworks</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.github.androidsocialnetworks.apidemos\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.github.androidsocialnetworks.apidemos</a>  </p>\n</li>\n<li><p>SmartAppUpdates<br>Android App 增量升级，包含前后端方案、Demo、以及 so 库，可用于商店或大体积 App 差分升级<br>项目地址：<a href=\"https://github.com/cundong/SmartAppUpdates\" target=\"_blank\" rel=\"external\">https://github.com/cundong/SmartAppUpdates</a>  </p>\n</li>\n<li><p>Magnet<br>创建类似 Facebook 聊天桌面悬浮窗的效果<br>项目地址：<a href=\"https://github.com/premnirmal/Magnet\" target=\"_blank\" rel=\"external\">https://github.com/premnirmal/Magnet</a>  </p>\n</li>\n<li><p>AcDisplay<br>将 Android 的通知都集中到锁屏显示<br>项目地址：<a href=\"https://github.com/AChep/AcDisplay\" target=\"_blank\" rel=\"external\">https://github.com/AChep/AcDisplay</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.achep.acdisplay\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.achep.acdisplay</a>  </p>\n</li>\n<li><p>QrCodeScan<br>ZXing 和 ZBar 结合的二维码扫描项目，提高了扫描效率<br>项目地址：<a href=\"https://github.com/SkillCollege/QrCodeScan\" target=\"_blank\" rel=\"external\">https://github.com/SkillCollege/QrCodeScan</a>  </p>\n</li>\n<li><p>Android-ScreenShot<br>实现 android 系统截屏功能<br>项目地址：<a href=\"https://github.com/Android-ScreenShot/AndroidScreenShotService\" target=\"_blank\" rel=\"external\">https://github.com/Android-ScreenShot/AndroidScreenShotService</a><br>文档介绍：<a href=\"http://blog.csdn.net/buptgshengod/article/details/39155979\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/buptgshengod/article/details/39155979</a>  </p>\n</li>\n<li><p>card.io SDK for Android<br>信用卡扫描 Android SDK<br>项目地址：<a href=\"https://github.com/card-io/card.io-Android-SDK\" target=\"_blank\" rel=\"external\">https://github.com/card-io/card.io-Android-SDK</a><br>Demo 项目：<a href=\"https://github.com/card-io/card.io-Android-SDK/tree/master/SampleApp\" target=\"_blank\" rel=\"external\">https://github.com/card-io/card.io-Android-SDK/tree/master/SampleApp</a>  </p>\n</li>\n<li><p>ASNE<br>Twitter, Facebook, Google Plus, LinkedIn, Instagram, Vkontakte, Odnoklassniki 的集成库，包括他们的大多数功能<br>项目地址：<a href=\"https://github.com/gorbin/ASNE\" target=\"_blank\" rel=\"external\">https://github.com/gorbin/ASNE</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.gorbin.androidsocialnetworksextended.asne\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.gorbin.androidsocialnetworksextended.asne</a>  </p>\n</li>\n<li><p>Android Signature Pad<br>Android 自定义的签名 View，可自定义笔颜色和大小<br>项目地址：<a href=\"https://github.com/gcacace/android-signaturepad\" target=\"_blank\" rel=\"external\">https://github.com/gcacace/android-signaturepad</a><br>Demo 项目：<a href=\"https://github.com/gcacace/android-signaturepad/tree/master/SignaturePad-Example\" target=\"_blank\" rel=\"external\">https://github.com/gcacace/android-signaturepad/tree/master/SignaturePad-Example</a>  </p>\n</li>\n<li><p>Teleport<br>Android Wear 数据同步和消息传送库<br>项目地址：<a href=\"https://github.com/Mariuxtheone/Teleport\" target=\"_blank\" rel=\"external\">https://github.com/Mariuxtheone/Teleport</a>  </p>\n</li>\n<li><p>DebugLog<br>可以帮你创建更简单和更容易理解的调试日志，能够友好的显示调试信息所在类和函数。<br>项目地址：<a href=\"https://github.com/MustafaFerhan/DebugLog\" target=\"_blank\" rel=\"external\">https://github.com/MustafaFerhan/DebugLog</a>  </p>\n</li>\n<li><p>Logger<br>简单、美观而且十分强大的 Android 日志工具<br>项目地址：<a href=\"https://github.com/orhanobut/logger\" target=\"_blank\" rel=\"external\">https://github.com/orhanobut/logger</a><br>Demo 地址：<a href=\"https://github.com/orhanobut/logger/tree/master/app\" target=\"_blank\" rel=\"external\">https://github.com/orhanobut/logger/tree/master/app</a>  </p>\n</li>\n<li><p>jlog<br>可以灵活配置的日志工具，支持JSON打印，日志保存到指定文件，日志显示调用位置（混淆模式下依然有效）<br>项目地址：<a href=\"https://github.com/JiongBull/jlog\" target=\"_blank\" rel=\"external\">https://github.com/JiongBull/jlog</a><br>Demo 地址：<a href=\"https://raw.githubusercontent.com/JiongBull/jlog/master/apk/JLog_sample.apk\" target=\"_blank\" rel=\"external\">apk地址</a>  </p>\n</li>\n<li><p>Phrase<br>square 组开源大牛写的字符串替换类<br>项目地址：<a href=\"https://github.com/square/phrase\" target=\"_blank\" rel=\"external\">https://github.com/square/phrase</a>  </p>\n</li>\n<li><p>ColorPhrase<br>模仿 phrase 写的对字符串个别字符颜色改变的类，高效强大！<br>项目地址：<a href=\"https://github.com/THEONE10211024/ColorPhrase\" target=\"_blank\" rel=\"external\">https://github.com/THEONE10211024/ColorPhrase</a>  </p>\n</li>\n<li><p>PinyinSearch<br>一个为 T9 搜索和 Qwerty 搜索,提供数据解析与匹配等方法的拼音搜索 java 库。<br>项目地址： <a href=\"https://github.com/handsomezhou/PinyinSearchLibrary\" target=\"_blank\" rel=\"external\">https://github.com/handsomezhou/PinyinSearchLibrary</a><br>Demo 地址： <a href=\"https://github.com/handsomezhou/PinyinSearchLibrary/blob/master/external_res/bin/ContactsSearch.apk?raw=true\" target=\"_blank\" rel=\"external\">ContactsSearch</a>    <a href=\"https://github.com/handsomezhou/PinyinSearchLibrary/blob/master/external_res/bin/AppSearch.apk?raw=true\" target=\"_blank\" rel=\"external\">AppSearch</a><br>APP 示例： 通讯录应用，微信电话本  </p>\n</li>\n<li><p>PrainView<br>PaintView 是一个画图工具:<br>可直接使用设定按钮来实现已拥有的方法，且拓展性强<br>基础功能：更换颜色、更换橡皮、以及更换橡皮和笔的粗细、清屏、倒入图片<br>特殊功能：保存画笔轨迹帧动画、帧动画导入导出、ReDo和UnDo<br>项目地址：<a href=\"https://github.com/lfkdsk/JustWeTools\" target=\"_blank\" rel=\"external\">Paintview</a><br>demo地址：<a href=\"https://github.com/lfkdsk/JustWeTools/blob/master/demo/DrawAPicture.apk\" target=\"_blank\" rel=\"external\">apk地址</a><br>原理解析：<a href=\"http://www.cnblogs.com/lfk-dsk/p/4768850.html\" target=\"_blank\" rel=\"external\">PaintView 绘图控件解析</a>  </p>\n</li>\n<li><p>CodeView<br>CodeView代码查看／修改工具: 基于WebView制作的代码编辑器,实现代码高亮，暗色主题<br>项目地址：<a href=\"https://github.com/lfkdsk/JustWeTools\" target=\"_blank\" rel=\"external\">CodeView</a><br>demo地址：<a href=\"https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk\" target=\"_blank\" rel=\"external\">apk地址</a>  </p>\n</li>\n<li><p>ExplorerView<br>文件浏览器：继承自ListView，可拓展性强，可进行文件类型分析<br>项目地址：<a href=\"https://github.com/lfkdsk/JustWeTools\" target=\"_blank\" rel=\"external\">CodeView</a><br>demo地址：<a href=\"https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk\" target=\"_blank\" rel=\"external\">apk地址</a>  </p>\n</li>\n<li><p>ReadView<br>小说阅读器，支持文字字体、颜色、背景、进度等多种调整，支持一键设置。<br>项目地址：<a href=\"https://github.com/lfkdsk/JustWeTools\" target=\"_blank\" rel=\"external\">ReadView</a><br>demo地址：<a href=\"https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk\" target=\"_blank\" rel=\"external\">apk地址</a>  </p>\n</li>\n<li><p>MarkDownView<br>支持MarkDown语法的渲染器,基于WebView的MarkDown渲染器,支持标准化的MarkDown语法,<br>调用接口和CodeView保持一致使用简便<br>项目地址：<a href=\"https://github.com/lfkdsk/JustWeTools\" target=\"_blank\" rel=\"external\">ReadView</a><br>demo地址：<a href=\"https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk\" target=\"_blank\" rel=\"external\">apk地址</a>  </p>\n</li>\n<li><p>VerTextView竖行排版的TextView:<br>支持竖行排版，添加了下划线功能，开启简便，下划线粗细、颜色、间距均可自定义，<br>接口调用方式与TextView相似，使用简便。<br>项目地址：<a href=\"https://github.com/lfkdsk/JustWeTools\" target=\"_blank\" rel=\"external\">ReadView</a><br>demo地址：<a href=\"https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk\" target=\"_blank\" rel=\"external\">apk地址</a>  </p>\n</li>\n<li><p>GHDownload下载框架<br>支持单线程和多线程断点下载，简单易用。<br>项目地址：<a href=\"https://github.com/guanchao/GHDownload\" target=\"_blank\" rel=\"external\">GHDownload</a>  </p>\n</li>\n</ol>\n<h2 id=\"第三部分-优秀项目\"><a href=\"#第三部分-优秀项目\" class=\"headerlink\" title=\"第三部分 优秀项目\"></a>第三部分 优秀项目</h2><p>主要介绍那些 Android 还不错的完整项目，目前包含的项目主要依据是项目有意思或项目分层规范比较好。  </p>\n<h3 id=\"一、系统及平台\"><a href=\"#一、系统及平台\" class=\"headerlink\" title=\"一、系统及平台\"></a>一、系统及平台</h3><ol>\n<li>Linux<br>项目地址：<a href=\"https://github.com/torvalds/linux\" target=\"_blank\" rel=\"external\">https://github.com/torvalds/linux</a>  </li>\n<li>Android<br>项目地址：<a href=\"https://android.googlesource.com/\" target=\"_blank\" rel=\"external\">https://android.googlesource.com/</a>  </li>\n</ol>\n<h3 id=\"二、项目\"><a href=\"#二、项目\" class=\"headerlink\" title=\"二、项目\"></a>二、项目</h3><ol>\n<li><p>ZXing<br>二维码扫描工具<br>项目地址：<a href=\"https://github.com/zxing/zxing\" target=\"_blank\" rel=\"external\">https://github.com/zxing/zxing</a> 或 <a href=\"https://code.google.com/p/zxing/\" target=\"_blank\" rel=\"external\">https://code.google.com/p/zxing/</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=com.google.zxing.client.android\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.google.zxing.client.android</a><br>其他：现在市面上很多应用的二维码扫描功能都是从这个修改而来  </p>\n</li>\n<li><p>photup<br>编辑机批量上传照片到 facebook 上<br>项目地址：<a href=\"https://github.com/chrisbanes/photup\" target=\"_blank\" rel=\"external\">https://github.com/chrisbanes/photup</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=uk.co.senab.photup\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=uk.co.senab.photup</a><br>其他：代码分包合理，很棒。不过这个项目依赖的开源项目比较多，比较难编译  </p>\n</li>\n<li><p>github-android<br>Github 的 Android 客户端项目<br>项目地址：<a href=\"https://github.com/github/android\" target=\"_blank\" rel=\"external\">https://github.com/github/android</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=com.github.mobile\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.github.mobile</a>  </p>\n</li>\n<li><p>Notes<br>MIUI 便签<br>项目地址：<a href=\"https://github.com/MiCode/Notes\" target=\"_blank\" rel=\"external\">https://github.com/MiCode/Notes</a><br>APK 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/miui-note-demo.apk?raw=true\" target=\"_blank\" rel=\"external\">https://github.com/Trinea/TrineaDownload/blob/master/miui-note-demo.apk?raw=true</a><br>其他：项目分包比较合理，相比较 miui 的文件管理器 <a href=\"https://github.com/MiCode/FileExplorer\" target=\"_blank\" rel=\"external\">https://github.com/MiCode/FileExplorer</a> 代码规范较好得多  </p>\n</li>\n<li><p>weicuiyuan<br>四次元-新浪微博客户端<br>项目地址：<a href=\"https://github.com/qii/weiciyuan\" target=\"_blank\" rel=\"external\">https://github.com/qii/weiciyuan</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=org.qii.weiciyuan\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=org.qii.weiciyuan</a>  </p>\n</li>\n<li><p>Douya<br>豆芽——Material Design 的豆瓣客户端<br>项目地址：<a href=\"https://github.com/DreaminginCodeZH/Douya\" target=\"_blank\" rel=\"external\">https://github.com/DreaminginCodeZH/Douya</a>  </p>\n</li>\n<li><p>gnucash-android<br>一个记账理财软件<br>项目地址：<a href=\"https://github.com/codinguser/gnucash-android\" target=\"_blank\" rel=\"external\">https://github.com/codinguser/gnucash-android</a><br>APK 地址：<a href=\"http://play.google.com/store/apps/details?id=org.gnucash.android\" target=\"_blank\" rel=\"external\">http://play.google.com/store/apps/details?id=org.gnucash.android</a>  </p>\n</li>\n<li><p>AntennaPod<br>支持 rss 订阅、音乐订阅<br>项目地址：<a href=\"https://github.com/danieloeh/AntennaPod\" target=\"_blank\" rel=\"external\">https://github.com/danieloeh/AntennaPod</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=de.danoeh.antennapod\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=de.danoeh.antennapod</a>  </p>\n</li>\n<li><p>ChaseWhisplyProject<br>打鬼游戏<br>项目地址：<a href=\"https://github.com/tvbarthel/ChaseWhisplyProject\" target=\"_blank\" rel=\"external\">https://github.com/tvbarthel/ChaseWhisplyProject</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=fr.tvbarthel.games.chasewhisply\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=fr.tvbarthel.games.chasewhisply</a>  </p>\n</li>\n<li><p>Tweet Lanes<br>功能完整的 Twitter 客户端<br>项目地址：<a href=\"https://github.com/chrislacy/TweetLanes\" target=\"_blank\" rel=\"external\">https://github.com/chrislacy/TweetLanes</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=com.tweetlanes.android\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.tweetlanes.android</a>  </p>\n</li>\n<li><p>Financius<br>简单易用的记账程序<br>项目地址：<a href=\"https://github.com/mvarnagiris/Financius\" target=\"_blank\" rel=\"external\">https://github.com/mvarnagiris/Financius</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=com.code44.finance\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.code44.finance</a>  </p>\n</li>\n<li><p>todo.txt-android<br>todo.txt 的官方 Android 应用<br>项目地址：<a href=\"https://github.com/ginatrapani/todo.txt-android\" target=\"_blank\" rel=\"external\">https://github.com/ginatrapani/todo.txt-android</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=com.todotxt.todotxttouch\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.todotxt.todotxttouch</a>  </p>\n</li>\n<li><p>simpletask<br>基于 todo.txt 官方应用的另一个客户端<br>项目地址：<a href=\"https://github.com/mpcjanssen/simpletask-android\" target=\"_blank\" rel=\"external\">https://github.com/mpcjanssen/simpletask-android</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=nl.mpcjanssen.todotxtholo\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=nl.mpcjanssen.todotxtholo</a>  </p>\n</li>\n<li><p>Muzei Live Wallpaper<br>定时更换桌面精美壁纸<br>项目地址：<a href=\"https://github.com/romannurik/muzei\" target=\"_blank\" rel=\"external\">https://github.com/romannurik/muzei</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=net.nurik.roman.muzei\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=net.nurik.roman.muzei</a>  </p>\n</li>\n<li><p>Scanbook<br>扫描搜索查询图书信息<br>项目地址：<a href=\"https://github.com/JayFang1993/ScanBook\" target=\"_blank\" rel=\"external\">https://github.com/JayFang1993/ScanBook</a><br>APK 地址：<a href=\"http://www.wandoujia.com/apps/com.scanbook\" target=\"_blank\" rel=\"external\">http://www.wandoujia.com/apps/com.scanbook</a>  </p>\n</li>\n<li><p>iosched<br>The Google I/O 2014 Android App<br>项目地址：<a href=\"https://github.com/google/iosched\" target=\"_blank\" rel=\"external\">https://github.com/google/iosched</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=com.google.samples.apps.iosched\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.google.samples.apps.iosched</a>  </p>\n</li>\n</ol>\n<h2 id=\"第四部分-开发工具及测试工具\"><a href=\"#第四部分-开发工具及测试工具\" class=\"headerlink\" title=\"第四部分 开发工具及测试工具\"></a>第四部分 开发工具及测试工具</h2><p>主要介绍和 Android 开发工具和测试工具相关的开源项目。  </p>\n<h3 id=\"一、开发效率工具\"><a href=\"#一、开发效率工具\" class=\"headerlink\" title=\"一、开发效率工具\"></a>一、开发效率工具</h3><ol>\n<li><p>Parceler<br>通过注解及工具类自动完成实体类 Parcelable 及值传递<br>项目地址：<a href=\"https://github.com/johncarl81/parceler\" target=\"_blank\" rel=\"external\">https://github.com/johncarl81/parceler</a>  </p>\n</li>\n<li><p>Json2Java<br>根据 JSon 数据自动生成对应的 Java 实体类，还支持 Parcel、Gson Annotations 对应代码自动生成。期待后续的提取父类以及多 url 构建整个工程的功能<br>项目地址：<a href=\"https://github.com/jonfhancock/JsonToJava\" target=\"_blank\" rel=\"external\">https://github.com/jonfhancock/JsonToJava</a><br>在线演示：<a href=\"http://jsontojava.appspot.com/\" target=\"_blank\" rel=\"external\">http://jsontojava.appspot.com/</a>  </p>\n</li>\n<li><p>IntelliJ Plugin for Android Parcelable boilerplate code generation<br>Android studio 插件，生成 Parcelable 代码<br>项目地址：<a href=\"https://github.com/mcharmas/android-parcelable-intellij-plugin\" target=\"_blank\" rel=\"external\">https://github.com/mcharmas/android-parcelable-intellij-plugin</a>  </p>\n</li>\n<li><p>Android Holo Colors IntelliJ Plugin<br>Android studio 插件，生成 holo 样式 9 patch 图片<br>项目地址：<a href=\"https://github.com/jeromevdl/android-holo-colors-idea-plugin\" target=\"_blank\" rel=\"external\">https://github.com/jeromevdl/android-holo-colors-idea-plugin</a>  </p>\n</li>\n<li><p>Android Drawable Factory<br>用于生成各个分辨率的图片<br>项目地址：<a href=\"https://github.com/tizionario/AndroidDrawableFactory\" target=\"_blank\" rel=\"external\">https://github.com/tizionario/AndroidDrawableFactory</a>  </p>\n</li>\n<li><p>SelectorChapek for Android<br>Android Studio 插件，可根据固定文件名格式资源自动生成 drawable selectors xml 文件。<br>项目地址：<a href=\"https://github.com/inmite/android-selector-chapek\" target=\"_blank\" rel=\"external\">https://github.com/inmite/android-selector-chapek</a>  </p>\n</li>\n<li><p>Android Action Bar Style Generator<br>Android ActionBar 样式生成器，可在线选择 ActionBar 样式自动生成所需要的图片资源及 xml 文件<br>项目地址：<a href=\"https://github.com/jgilfelt/android-actionbarstylegenerator\" target=\"_blank\" rel=\"external\">https://github.com/jgilfelt/android-actionbarstylegenerator</a><br>在线演示：<a href=\"http://jgilfelt.github.io/android-actionbarstylegenerator/\" target=\"_blank\" rel=\"external\">http://jgilfelt.github.io/android-actionbarstylegenerator/</a>  </p>\n</li>\n<li><p>ButterKnifeZelezny<br>用于快速生成<a href=\"https://github.com/JakeWharton/butterknife\" target=\"_blank\" rel=\"external\">ButterKnife</a>View 注入代码的 Android Studio/IDEA 插件<br>项目地址：<a href=\"https://github.com/inmite/android-butterknife-zelezny\" target=\"_blank\" rel=\"external\">https://github.com/inmite/android-butterknife-zelezny</a>  </p>\n</li>\n<li><p>RoboCoP<br>利用 Gradle task 根据固定格式的 json 文件生成 ContentProvider<br>项目地址：<a href=\"https://github.com/mediarain/RoboCoP\" target=\"_blank\" rel=\"external\">https://github.com/mediarain/RoboCoP</a>  </p>\n</li>\n<li><p>appiconsizes<br>用于生成各个分辨率的图片<br>项目地址：<a href=\"http://www.appiconsizes.com/\" target=\"_blank\" rel=\"external\">http://www.appiconsizes.com/</a>  </p>\n</li>\n<li><p>AndroidUtiles<br>集合了所有常用的安卓工具类<br>项目地址：<a href=\"https://github.com/l123456789jy/Lazy\" target=\"_blank\" rel=\"external\">https://github.com/l123456789jy/Lazy</a></p>\n</li>\n<li><p>Gradle Retrolambda Plugin<br><a href=\"https://github.com/orfjackal/retrolambda\" target=\"_blank\" rel=\"external\">Retrolambda</a>是将 Java8 的 Lambdas 应用于 Java7 的工具，本项目是 Gradle 插件，通过 Retrolambda 从而使 Java 或 Android 项目用 Java8 的 Lambdas 编写，将编译后的字节码转换为 Java6 和 7 的字节码从而正常运行<br>项目地址：<a href=\"https://github.com/evant/gradle-retrolambda\" target=\"_blank\" rel=\"external\">https://github.com/evant/gradle-retrolambda</a>  </p>\n</li>\n<li><p>Dagger IntelliJ Plugin<br>dagger 的 intellij 插件<br>项目地址：<a href=\"https://github.com/square/dagger-intellij-plugin\" target=\"_blank\" rel=\"external\">https://github.com/square/dagger-intellij-plugin</a>  </p>\n</li>\n<li><p>Android Gen Drawable Maven plugin<br>在编译时根据 SVG 描述文件生成不同分辨率的 jpg、png 或点 9 图片<br>项目地址：<a href=\"https://github.com/avianey/androidgendrawable-maven-plugin\" target=\"_blank\" rel=\"external\">https://github.com/avianey/androidgendrawable-maven-plugin</a>  </p>\n</li>\n<li><p>Android Asset Studio<br>各种 Android 资源自动生成器，包括启动图标、ActionBar 图标、通知栏图标、点 9 等<br>项目地址：<a href=\"https://github.com/romannurik/AndroidAssetStudio\" target=\"_blank\" rel=\"external\">https://github.com/romannurik/AndroidAssetStudio</a><br>在线演示：<a href=\"http://romannurik.github.io/AndroidAssetStudio/\" target=\"_blank\" rel=\"external\">http://romannurik.github.io/AndroidAssetStudio/</a>  </p>\n</li>\n<li><p>jsonschema2pojo<br>根据 Json 内容生成 java 对象，支持 jackjson 和 gson<br>项目地址：<a href=\"https://github.com/joelittlejohn/jsonschema2pojo\" target=\"_blank\" rel=\"external\">https://github.com/joelittlejohn/jsonschema2pojo</a><br>在线演示：<a href=\"http://www.jsonschema2pojo.org/\" target=\"_blank\" rel=\"external\">http://www.jsonschema2pojo.org/</a>  </p>\n</li>\n<li><p>GsonFormat<br>根据 JSONObject 格式的字符串,自动生成实体类参数的 Android Studio/IntelliJ IDEA 插件<br>项目地址：<a href=\"https://github.com/zzz40500/GsonFormat\" target=\"_blank\" rel=\"external\">https://github.com/zzz40500/GsonFormat</a>  </p>\n</li>\n<li><p>9-Patch-Resizer<br>自动生成 png 及点 9 图片的不同分辨率版本<br>项目地址：<a href=\"https://github.com/redwarp/9-Patch-Resizer\" target=\"_blank\" rel=\"external\">https://github.com/redwarp/9-Patch-Resizer</a>  </p>\n</li>\n<li><p>AndroidLocalizationer<br>可用于将项目中的 string 资源自动翻译为其他语言的 Android Studio/IntelliJ IDEA 插件<br>项目地址：<a href=\"https://github.com/westlinkin/AndroidLocalizationer\" target=\"_blank\" rel=\"external\">https://github.com/westlinkin/AndroidLocalizationer</a>  </p>\n</li>\n<li><p>Material Palette<br>一个将现有的色彩方案组合成材料设计的调色板方案，提供下载。选取两个主要色彩后便可以提供下载，提供下载的格式可以是 android 的资源 xml 文件，以色彩的方式提供，也可以是 CSS、SVG、PNG 等常见格式文件。<br>项目地址：<a href=\"http://www.materialpalette.com/\" target=\"_blank\" rel=\"external\">http://www.materialpalette.com/</a>  </p>\n</li>\n</ol>\n<h3 id=\"二、开发自测相关\"><a href=\"#二、开发自测相关\" class=\"headerlink\" title=\"二、开发自测相关\"></a>二、开发自测相关</h3><ol>\n<li><p>Quality Tools for Android<br>Android 测试及自测工具集合和示例<br>项目地址：<a href=\"https://github.com/stephanenicolas/Quality-Tools-for-Android\" target=\"_blank\" rel=\"external\">https://github.com/stephanenicolas/Quality-Tools-for-Android</a>  </p>\n</li>\n<li><p>android-test-kit<br>Google 的 Android 测试工具<br>包括 GoogleInstrumentationTestRunner(增强版的 InstrumentationTestRunner)和 Espresso(用于快速写出可靠测试用例的 API)<br>项目地址：<a href=\"https://code.google.com/p/android-test-kit/\" target=\"_blank\" rel=\"external\">https://code.google.com/p/android-test-kit/</a><br>文档介绍：<a href=\"https://code.google.com/p/android-test-kit/w/list\" target=\"_blank\" rel=\"external\">https://code.google.com/p/android-test-kit/w/list</a>  </p>\n</li>\n<li><p>robolectric<br>测试用例编写框架<br>项目地址：<a href=\"https://github.com/robolectric/robolectric\" target=\"_blank\" rel=\"external\">https://github.com/robolectric/robolectric</a><br>Demo 地址：<a href=\"https://github.com/robolectric/robolectricsample\" target=\"_blank\" rel=\"external\">https://github.com/robolectric/robolectricsample</a><br>文档介绍：<a href=\"http://robolectric.org/\" target=\"_blank\" rel=\"external\">http://robolectric.org/</a><br>特点：(1). 不需要模拟器在一般 JVM 就可以运行测试用例<br>(2). 能完成在真机上的大部分测试包括感应器<br>其他的测试用例及相关模块 Mock 可见：<a href=\"https://code.google.com/p/android-mock/\" target=\"_blank\" rel=\"external\">android-mock</a>, <a href=\"https://code.google.com/p/mockito/\" target=\"_blank\" rel=\"external\">mockito</a>, <a href=\"https://github.com/easymock/easymock\" target=\"_blank\" rel=\"external\">easy-mock</a>  </p>\n</li>\n<li><p>Android FEST<br>提供一些列方便的断言，可用于提高编写 Android 自测代码效率<br>项目地址：<a href=\"https://github.com/square/fest-android\" target=\"_blank\" rel=\"external\">https://github.com/square/fest-android</a>  </p>\n</li>\n<li><p>BoundBox<br>可用于测试类各种访问权限的属性、方法。实际是通过 BoundBox 这个 annotation 生成一个属性和方法都是 public 权限的中间类并对此类进行测试完成的<br>项目地址：<a href=\"https://github.com/stephanenicolas/boundbox\" target=\"_blank\" rel=\"external\">https://github.com/stephanenicolas/boundbox</a>  </p>\n</li>\n<li><p>Hugo<br>用于打印函数信息及执行时间的工具，仅在 debug 模式生效<br>项目地址：<a href=\"https://github.com/JakeWharton/hugo\" target=\"_blank\" rel=\"external\">https://github.com/JakeWharton/hugo</a>  </p>\n</li>\n<li><p>scalpel<br>在应用下面添加一层用于界面调试<br>项目地址：<a href=\"https://github.com/JakeWharton/scalpel\" target=\"_blank\" rel=\"external\">https://github.com/JakeWharton/scalpel</a>  </p>\n</li>\n<li><p>Android Screenshot library<br>Android 截图工具类，用于在持续集成时截图<br>项目地址：<a href=\"https://github.com/rtyley/android-screenshot-lib\" target=\"_blank\" rel=\"external\">https://github.com/rtyley/android-screenshot-lib</a>  </p>\n</li>\n<li><p>sonar-android-lint-plugin<br>将 android lint 的错误在 sonar 中展现<br>项目地址：<a href=\"https://github.com/SonarCommunity/sonar-android\" target=\"_blank\" rel=\"external\">https://github.com/SonarCommunity/sonar-android</a>  </p>\n</li>\n</ol>\n<h3 id=\"三、测试工具\"><a href=\"#三、测试工具\" class=\"headerlink\" title=\"三、测试工具\"></a>三、测试工具</h3><ol>\n<li><p>Spoon<br>可用于 android 不同机型设备自动化测试，能将应用 apk 和测试 apk 运行在不同机器上并生成相应测试报告。<br>项目地址：<a href=\"https://github.com/square/spoon\" target=\"_blank\" rel=\"external\">https://github.com/square/spoon</a>  </p>\n</li>\n<li><p>Tencent APT<br>APT 是腾讯开源的一个 Android 平台高效性能测试组件，提供丰富实用的功能，适用于开发自测、定位性能瓶颈；测试人员完成性能基准测试、竞品对比测试<br>项目地址：<a href=\"https://github.com/stormzhang/APT\" target=\"_blank\" rel=\"external\">https://github.com/stormzhang/APT</a>  </p>\n</li>\n<li><p>Emmagee<br>网易开源的性能测试工具，包括 CPU、内存、网络流量、启动时间、电池状态等<br>项目地址：<a href=\"https://github.com/NetEase/Emmagee\" target=\"_blank\" rel=\"external\">https://github.com/NetEase/Emmagee</a>  </p>\n</li>\n<li><p>Android py-uiautomator<br>py-uiautomator 是一个对 Android uiautomator 用 python 进行封装的测试框架.<br>项目地址：<a href=\"https://github.com/xiaocong/uiautomator\" target=\"_blank\" rel=\"external\">https://github.com/xiaocong/uiautomator</a>  </p>\n</li>\n<li><p>Augmented Traffic Control<br>模拟网络状况，包括带宽、时延抖动、丢包率、错包率、包重排率<br>项目地址：<a href=\"https://github.com/facebook/augmented-traffic-control\" target=\"_blank\" rel=\"external\">https://github.com/facebook/augmented-traffic-control</a>  </p>\n</li>\n<li><p>stetho<br>强大的 Android Debug 工具。支持网络请求监控以及数据库查看，可以和 Chrome DevTools 结合或者命令行模式。<br>项目地址：<a href=\"https://github.com/facebook/stetho\" target=\"_blank\" rel=\"external\">https://github.com/facebook/stetho</a>  </p>\n</li>\n</ol>\n<h3 id=\"四、开发及编译环境\"><a href=\"#四、开发及编译环境\" class=\"headerlink\" title=\"四、开发及编译环境\"></a>四、开发及编译环境</h3><ol>\n<li><p>Buck<br>facebook 开源的 Android 编译工具，效率是 ant 的两倍。主要优点在于：<br>(1) 加快编译速度，通过并行利用多核 cpu 和跟踪不变资源减少增量编译时间实现<br>(2) 可以在编译系统中生成编译规则而无须另外的系统生成编译规则文件<br>(3) 编译同时可生成单元测试结果<br>(4) 既可用于 IDE 编译也可用于持续集成编译<br>(5) facebook 持续优化中<br>项目地址：<a href=\"https://github.com/facebook/buck\" target=\"_blank\" rel=\"external\">https://github.com/facebook/buck</a>  </p>\n</li>\n<li><p>Android Maven Plugin<br>Android Maven 插件，可用于对 android 三方依赖进行管理。在 J2EE 开发中，maven 是非常成熟的依赖库管理工具，可统一管理依赖库。<br>项目地址：<a href=\"https://github.com/jayway/maven-android-plugin\" target=\"_blank\" rel=\"external\">https://github.com/jayway/maven-android-plugin</a>  </p>\n</li>\n<li><p>umeng-muti-channel-build-tool<br>渠道打包工具<br>项目地址：<a href=\"https://github.com/umeng/umeng-muti-channel-build-tool\" target=\"_blank\" rel=\"external\">https://github.com/umeng/umeng-muti-channel-build-tool</a><br>另可参见 Google 的构建系统 Gradle：<a href=\"http://tools.android.com/tech-docs/new-build-system/user-guide\" target=\"_blank\" rel=\"external\">http://tools.android.com/tech-docs/new-build-system/user-guide</a>  </p>\n</li>\n<li><p>Genymotion<br>目前最好用最快的 android 模拟器<br>项目地址：<a href=\"http://www.genymotion.com/\" target=\"_blank\" rel=\"external\">http://www.genymotion.com/</a><br>Android studio 集成控件： <a href=\"http://plugins.jetbrains.com/plugin/7269?pr=idea\" target=\"_blank\" rel=\"external\">http://plugins.jetbrains.com/plugin/7269?pr=idea</a><br>Cyril Mottier 推荐：<a href=\"http://cyrilmottier.com/2013/06/27/a-productive-android-development-environment/\" target=\"_blank\" rel=\"external\">http://cyrilmottier.com/2013/06/27/a-productive-android-development-environment/</a>  </p>\n</li>\n<li><p>gradle-mvn-push<br>方便的将 Gradle 的 Artifacts 上传到 Maven 仓库<br>项目地址：<a href=\"https://github.com/chrisbanes/gradle-mvn-push\" target=\"_blank\" rel=\"external\">https://github.com/chrisbanes/gradle-mvn-push</a><br>文档介绍：<a href=\"https://github.com/chrisbanes/gradle-mvn-push#usage\" target=\"_blank\" rel=\"external\">https://github.com/chrisbanes/gradle-mvn-push#usage</a>  </p>\n</li>\n<li><p>Android Emulator Plugin for Jenkins<br>Android 模拟器 jenkins 插件，用于 Jenkins 做持续集成时跑模拟器测试<br>项目地址：<a href=\"https://github.com/jenkinsci/android-emulator-plugin\" target=\"_blank\" rel=\"external\">https://github.com/jenkinsci/android-emulator-plugin</a>  </p>\n</li>\n<li><p>Android Maven Plugin<br>管理应用所需要的依赖库。包括的构建工具有 Maven、Gradle、ant、sbt<br>项目地址：<a href=\"https://github.com/mosabua/maven-android-sdk-deployer\" target=\"_blank\" rel=\"external\">https://github.com/mosabua/maven-android-sdk-deployer</a>  </p>\n</li>\n<li><p>SDK Manager Plugin<br>下载和管理 Android SDK 的 Gradle 插件<br>项目地址：<a href=\"https://github.com/JakeWharton/sdk-manager-plugin\" target=\"_blank\" rel=\"external\">https://github.com/JakeWharton/sdk-manager-plugin</a>  </p>\n</li>\n<li><p>Gradle Protobuf Plugin<br>将.proto 文件转换成 Java 文件的 gradle 插件<br>项目地址：<a href=\"https://github.com/andrewkroh/gradle-protobuf-plugin\" target=\"_blank\" rel=\"external\">https://github.com/andrewkroh/gradle-protobuf-plugin</a>  </p>\n</li>\n<li><p>ChromeADB<br>Chrome 的 Adb 插件，当登录后，能看到所有连接的设备并操作，可以看应用、进程、内存及磁盘使用情况等<br>项目地址：<a href=\"https://github.com/importre/chromeadb\" target=\"_blank\" rel=\"external\">https://github.com/importre/chromeadb</a>  </p>\n</li>\n</ol>\n<h3 id=\"五、其他\"><a href=\"#五、其他\" class=\"headerlink\" title=\"五、其他\"></a>五、其他</h3><ol>\n<li><p>GT<br>APP的随身调试平台，它是直接运行在手机上的“集成调试环境”(IDTE, Integrated Debug Environment)。<br>项目地址：<a href=\"https://github.com/TencentOpen/GT\" target=\"_blank\" rel=\"external\">https://github.com/TencentOpen/GT</a><br>文档介绍：<a href=\"http://gt.qq.com/docs.html\" target=\"_blank\" rel=\"external\">http://gt.qq.com/docs.html</a>  </p>\n</li>\n<li><p>ViewServer<br>允许 app 运行在任何手机上都可以用 HierarchyViewer 查看<br>项目地址：<a href=\"https://github.com/romainguy/ViewServer\" target=\"_blank\" rel=\"external\">https://github.com/romainguy/ViewServer</a>  </p>\n</li>\n<li><p>GridWichterle for Android<br>在整个系统上显示一个 grid，用来帮助查看应用布局及使得布局更美观，可设置 grid 网格大小和颜色，android 推荐 48dp 和 8dp，可见 Android Design Guidelines – Metrics and Grids，比起 hierarchyviewer 相差甚远，不过偶尔可用来作为布局查看工具。<br>项目地址：<a href=\"https://github.com/inmite/android-grid-wichterle\" target=\"_blank\" rel=\"external\">https://github.com/inmite/android-grid-wichterle</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=eu.inmite.android.gridwichterle\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=eu.inmite.android.gridwichterle</a>  </p>\n</li>\n<li><p>Catlog<br>手机端 log 查看工具，支持不同颜色显示、关键字过滤、级别过滤、进程 id 过滤、录制功能等<br>项目地址：<a href=\"https://github.com/nolanlawson/Catlog\" target=\"_blank\" rel=\"external\">https://github.com/nolanlawson/Catlog</a><br>在线演示：<a href=\"https://play.google.com/store/apps/details?id=com.nolanlawson.logcat\" target=\"_blank\" rel=\"external\">https://play.google.com/store/apps/details?id=com.nolanlawson.logcat</a>  </p>\n</li>\n<li><p>PID Cat<br>根据 package 查看 logcat 日志<br>项目地址：<a href=\"https://github.com/JakeWharton/pidcat\" target=\"_blank\" rel=\"external\">https://github.com/JakeWharton/pidcat</a>  </p>\n</li>\n<li><p>ACRA<br>应用崩溃信息日志上报到 GoogleDoc 工具，网页版展现结果三方开源地址 <a href=\"https://github.com/BenoitDuffez/crashreportsviewer\" target=\"_blank\" rel=\"external\">https://github.com/BenoitDuffez/crashreportsviewer</a><br>项目地址：<a href=\"https://github.com/ACRA/acra\" target=\"_blank\" rel=\"external\">https://github.com/ACRA/acra</a><br>文档介绍：<a href=\"https://github.com/ACRA/acra/wiki/BasicSetup\" target=\"_blank\" rel=\"external\">https://github.com/ACRA/acra/wiki/BasicSetup</a>  </p>\n</li>\n<li><p>Crashlytics<br>提供丰富的应用崩溃信息日志收集<br>轻量级，丰富，可自定义应用崩溃信息收集器，附有邮件通知<br>项目地址：<a href=\"http://www.crashlytics.com/\" target=\"_blank\" rel=\"external\">http://www.crashlytics.com/</a><br>集成插件：<a href=\"http://try.crashlytics.com/sdk-android/?utm_source=blog&amp;utm_medium=blog&amp;utm_campaign=Announcing_android_studio_wp&amp;utm_content=CTA_button\" target=\"_blank\" rel=\"external\">Android Studio, Eclipse and IntelliJ</a>  </p>\n</li>\n<li><p>Android Resource Navigator<br>chrome 插件，可以方便的查看 github 上 android 源码工程的 styles.xml 和 themes.xml。主要功能：<br>(1) 快速打开 android styles.xml themes.xml<br>(2) 方便在资源间跳转。styles.xml themes.xml 文件中资源链接跳转，可以方便跳转到某个资源<br>(3) 方便查找某个 style 和 theme。chrome 地址栏输入 arn+tab+搜索内容回车即可<br>(4) 自动下载不同分辨率下的 drawable<br>(5) 通过映射查找那些不是按照固定命名规则命名的 style 和 theme<br>项目地址：<a href=\"https://github.com/jgilfelt/android-resource-navigator\" target=\"_blank\" rel=\"external\">https://github.com/jgilfelt/android-resource-navigator</a><br>在线演示：<a href=\"https://chrome.google.com/webstore/detail/android-resource-navigato/agoomkionjjbejegcejiefodgbckeebo?hl=en&amp;gl=GB\" target=\"_blank\" rel=\"external\">https://chrome.google.com/webstore/detail/android-resource-navigato/agoomkionjjbejegcejiefodgbckeebo?hl=en&amp;gl=GB</a>  </p>\n</li>\n<li><p>android-resource-remover<br>根据 lint 的提示删除项目中无用的资源，减少包的大小<br>项目地址：<a href=\"https://github.com/KeepSafe/android-resource-remover\" target=\"_blank\" rel=\"external\">https://github.com/KeepSafe/android-resource-remover</a>  </p>\n</li>\n<li><p>Telescope<br>通过手势截图以特定主题发送到特定邮箱地址报告 Bug<br>项目地址：<a href=\"https://github.com/mattprecious/telescope\" target=\"_blank\" rel=\"external\">https://github.com/mattprecious/telescope</a>  </p>\n</li>\n<li><p>Complete Android Fragment &amp; Activity Lifecycle<br>完整的 Android Fragment/Activity 生命周期图<br>项目地址：<a href=\"https://github.com/xxv/android-lifecycle\" target=\"_blank\" rel=\"external\">https://github.com/xxv/android-lifecycle</a>  </p>\n</li>\n<li><p>Bugsnag Notifier for Android<br>通过<code>Thread.UncaughtExceptionHandler</code>捕获应用未处理的异常崩溃 Bug 并用 Notification 展示同时上传到后台服务器<br>项目地址：<a href=\"https://github.com/bugsnag/bugsnag-android\" target=\"_blank\" rel=\"external\">https://github.com/bugsnag/bugsnag-android</a><br>文档介绍：<a href=\"https://github.com/bugsnag/bugsnag-android#installation--setup\" target=\"_blank\" rel=\"external\">https://github.com/bugsnag/bugsnag-android#installation--setup</a>  </p>\n</li>\n<li><p>Material Design Icons<br>Google Material Design 规范中的 Icon<br>项目地址：<a href=\"https://github.com/google/material-design-icons\" target=\"_blank\" rel=\"external\">https://github.com/google/material-design-icons</a>  </p>\n</li>\n<li><p>scrollscreenshot<br>Android 滚动屏幕自动截图 jar 包，支持纵向、横向滚动截屏拼接<br>项目地址：<a href=\"https://github.com/PGSSoft/scrollscreenshot\" target=\"_blank\" rel=\"external\">https://github.com/PGSSoft/scrollscreenshot</a>  </p>\n</li>\n<li><p>droidicon<br>1600+的海量 Icon，包括 750+的 Material Design icons<br>项目地址：<a href=\"https://github.com/theDazzler/droidicon\" target=\"_blank\" rel=\"external\">https://github.com/theDazzler/droidicon</a>  </p>\n</li>\n<li><p>leakcanary<br>Android 内存泄露检测工具，集成方便，出现泄露后报告直观<br>项目地址：<a href=\"https://github.com/square/leakcanary\" target=\"_blank\" rel=\"external\">https://github.com/square/leakcanary</a>  </p>\n</li>\n<li><p>CacheUtilsLibrary<br>将任何Java Object类型的数据序列化后写入缓存文件，将来使用时读取缓存文件并反序列化成对应Java Object的库<br>项目地址：<a href=\"https://github.com/westlinkin/CacheUtilsLibrary\" target=\"_blank\" rel=\"external\">https://github.com/westlinkin/CacheUtilsLibrary</a></p>\n</li>\n<li><p>BlockCanary<br>BlockCanary是一个Android平台的一个非侵入式的性能监控组件，应用只需要实现一个抽象类，提供一些该组件需要的上下文环境，就可以在平时使用应用的时候检测主线程上的各种卡慢问题，并通过组件提供的各种信息分析出原因并进行修复。<br>项目地址: <a href=\"https://github.com/moduth/blockcanary\" target=\"_blank\" rel=\"external\">https://github.com/moduth/blockcanary</a>  </p>\n</li>\n</ol>\n<h2 id=\"第五部分\"><a href=\"#第五部分\" class=\"headerlink\" title=\"第五部分\"></a>第五部分</h2><p>主要介绍那些乐于分享并且有一些很不错的开源项目的个人和组织。Follow 大神，深挖大神的项目和 following，你会发现很多。  </p>\n<h3 id=\"一、个人\"><a href=\"#一、个人\" class=\"headerlink\" title=\"一、个人\"></a>一、个人</h3><ol>\n<li><p>JakeWharton<br>就职于 Square，绝对牛逼的大神，项目主要集中在 Android 版本兼容，ViewPager 及开发工具上<br>Github 地址：<a href=\"https://github.com/JakeWharton\" target=\"_blank\" rel=\"external\">https://github.com/JakeWharton</a><br>代表作：ActionBarSherlock，Android-ViewPagerIndicator，Nine Old Androids，SwipeToDismissNOA，hugo，butterknife，Android-DirectionalViewPager, scalpel<br>pidcat 另外对 square 及其他开源项目有很多贡献<br>主页：<a href=\"http://jakewharton.com/\" target=\"_blank\" rel=\"external\">http://jakewharton.com/</a>  </p>\n</li>\n<li><p>Chris Banes<br>Github 地址：<a href=\"https://github.com/chrisbanes\" target=\"_blank\" rel=\"external\">https://github.com/chrisbanes</a><br>代表作：ActionBar-PullToRefresh，PhotoView，Android-BitmapCache，Android-PullToRefresh<br>主页：<a href=\"http://chris.banes.me/\" target=\"_blank\" rel=\"external\">http://chris.banes.me/</a>  </p>\n</li>\n<li><p>Koushik Dutta<br>就职于 ClockworkMod<br>Github 地址：<a href=\"https://github.com/koush\" target=\"_blank\" rel=\"external\">https://github.com/koush</a><br>代表作：Superuser，AndroidAsync，UrlImageViewHelper，ion, 另外对 <a href=\"https://github.com/CyanogenMod\" target=\"_blank\" rel=\"external\">https://github.com/CyanogenMod</a> 的开源项目有很多贡献<br>主页：<a href=\"http://koush.com/\" target=\"_blank\" rel=\"external\">http://koush.com/</a>  </p>\n</li>\n<li><p>Simon Vig<br>Github 地址：<a href=\"https://github.com/SimonVT\" target=\"_blank\" rel=\"external\">https://github.com/SimonVT</a><br>代表作：android-menudrawer，MessageBar<br>主页：<a href=\"http://simonvt.net/\" target=\"_blank\" rel=\"external\">http://simonvt.net/</a>  </p>\n</li>\n<li><p>Manuel Peinado<br>Github 地址：<a href=\"https://github.com/ManuelPeinado\" target=\"_blank\" rel=\"external\">https://github.com/ManuelPeinado</a><br>代表作：FadingActionBar，GlassActionBar，RefreshActionItem，QuickReturnHeader  </p>\n</li>\n<li><p>Emil Sj?lander<br>Github 地址：<a href=\"https://github.com/emilsjolander\" target=\"_blank\" rel=\"external\">https://github.com/emilsjolander</a><br>代表作：StickyListHeaders，sprinkles，android-FlipView<br>主页：<a href=\"http://emilsjolander.se/\" target=\"_blank\" rel=\"external\">http://emilsjolander.se/</a>  </p>\n</li>\n<li><p>greenrobot<br>Github 地址：<a href=\"https://github.com/greenrobot\" target=\"_blank\" rel=\"external\">https://github.com/greenrobot</a><br>代表作：greenDAO，EventBus<br>主页：<a href=\"http://greenrobot.de/\" target=\"_blank\" rel=\"external\">http://greenrobot.de/</a>  </p>\n</li>\n<li><p>Jeff Gilfelt<br>Github 地址：<a href=\"https://github.com/jgilfelt\" target=\"_blank\" rel=\"external\">https://github.com/jgilfelt</a><br>代表作：android-mapviewballoons，android-viewbadger，android-actionbarstylegenerator，android-sqlite-asset-helper<br>主页：<a href=\"http://jeffgilfelt.com\" target=\"_blank\" rel=\"external\">http://jeffgilfelt.com</a>  </p>\n</li>\n<li><p>Romain Guy<br>Android team 成员(2013.10 已离开 Android team，仍在 Google)<br>Github 地址：<a href=\"https://github.com/romainguy\" target=\"_blank\" rel=\"external\">https://github.com/romainguy</a><br>代表作：ViewServer<br>主页：<a href=\"http://www.curious-creature.org/category/android/\" target=\"_blank\" rel=\"external\">http://www.curious-creature.org/category/android/</a><br>個人攝影作品：<a href=\"http://www.flickr.com/photos/romainguy\" target=\"_blank\" rel=\"external\">http://www.flickr.com/photos/romainguy</a>  </p>\n</li>\n<li><p>sephiroth74<br>就职于 Aviary.com<br>Github 地址：<a href=\"https://github.com/sephiroth74\" target=\"_blank\" rel=\"external\">https://github.com/sephiroth74</a><br>代表作：ImageViewZoom，HorizontalVariableListView，AndroidWheel，purePDF<br>主页：<a href=\"http://www.sephiroth.it/\" target=\"_blank\" rel=\"external\">http://www.sephiroth.it/</a>  </p>\n</li>\n<li><p>Cyril Mottier<br>Google 开发者专家认证，发布一些 Android 技巧及文章<br>Github 地址：<a href=\"https://github.com/cyrilmottier\" target=\"_blank\" rel=\"external\">https://github.com/cyrilmottier</a><br>代表作：GreenDroid，Polaris<br>主页：<a href=\"http://cyrilmottier.com/\" target=\"_blank\" rel=\"external\">http://cyrilmottier.com/</a>  </p>\n</li>\n</ol>\n<h3 id=\"二、组织\"><a href=\"#二、组织\" class=\"headerlink\" title=\"二、组织\"></a>二、组织</h3><ol>\n<li><p>Square<br>有态度有良心的企业，很多不错的分享<br>Github 地址：<a href=\"https://github.com/square\" target=\"_blank\" rel=\"external\">https://github.com/square</a><br>代表作：okhttp、fest-android，android-times-square、picasso、dagger、spoon 等等<br>主页：<a href=\"http://square.github.io/\" target=\"_blank\" rel=\"external\">http://square.github.io/</a>  </p>\n</li>\n<li><p>Inmite s.r.o.<br>Github 地址：<a href=\"https://github.com/inmite\" target=\"_blank\" rel=\"external\">https://github.com/inmite</a><br>代表作：android-styled-dialogs，android-grid-wichterle，android-selector-chapek<br>主页：<a href=\"http://www.inmite.eu/\" target=\"_blank\" rel=\"external\">http://www.inmite.eu/</a>  </p>\n</li>\n</ol>\n<h3 id=\"三、博客\"><a href=\"#三、博客\" class=\"headerlink\" title=\"三、博客\"></a>三、博客</h3><p><a href=\"https://github.com/android-cn/android-dev-com\" target=\"_blank\" rel=\"external\">部分国外著名 Android 开发者信息</a>  </p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><blockquote>\n<p>本文转自——<strong><a href=\"https://github.com/Trinea/android-open-project\" target=\"_blank\" rel=\"external\">Trinea 汇总的开源项目</a></strong><br>欢迎大家关注他的微信公众号：codekk。二维码如下：<br> 专注于 Android 开源分享、源码解析、框架设计、Android 内推。<br>  <img src=\"http://www.trinea.cn/wp-content/uploads/2016/01/weixin-codekk-160.jpg\" alt=\"img\"><br>   他的网站：<a href=\"http://a.codekk.com\" target=\"_blank\" rel=\"external\">www.codekk.com</a><br> <strong>关于trinea，欢迎关注</strong><br> 微博：<a title=\"Android 技术及移动互联网分享\" href=\"http://weibo.com/trinea?s=6cm7D0\" target=\"_blank\">Trinea</a>&nbsp;&nbsp;&nbsp;&nbsp;主页：<a title=\"关注于 Android、Java、性能优化、开源项目\" href=\"http://www.trinea.cn/\" target=\"_blank\">trinea.cn</a> </p>\n</blockquote>\n<h2 id=\"推荐\"><a href=\"#推荐\" class=\"headerlink\" title=\"推荐\"></a>推荐</h2><blockquote>\n<p><a href=\"http://a.codekk.com\" target=\"_blank\" rel=\"external\">Android 开源项目源码解析(Volley、UIL、Dagger、EventBus、插件化库等分析)</a></p>\n<p><a href=\"http://j.codekk.com\" target=\"_blank\" rel=\"external\">Android 职位内部推荐(阿里、腾讯、百度、京东、滴滴、美团、58、华为、网易、魅族等)</a></p>\n</blockquote>\n","excerpt":"<h2 id=\"目前包括：\"><a href=\"#目前包括：\" class=\"headerlink\" title=\"目前包括：\"></a>目前包括：</h2><blockquote>\n<ol>\n<li>Android 开源项目第一篇——个性化控件(View)篇<br><em>包括：ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style、其他</em>  </li>\n<li>Android 开源项目第二篇——工具库篇<br><em>包括：依赖注入、图片缓存、网络请求、数据库 ORM 工具包、Android 公共库、高版本向低版本兼容库、多媒体、事件总线、传感器、安全、插件化、文件、其他</em>  </li>\n<li>Android 开源项目第三篇——优秀项目篇<br><em>比较有意思的完整的 Android 项目</em>  </li>\n<li>Android 开源项目第四篇——开发及测试工具篇<br><em>包括：开发效率工具、开发自测相关、测试工具、开发及编译环境、其他</em>  </li>\n<li>Android 开源项目第五篇——优秀个人和团体篇<br><em>乐于分享并且有一些很不错的开源项目的个人和组织，包括 JakeWharton、Chris Banes、Koushik Dutta 等大牛</em>","more":"</li>\n</ol>\n</blockquote>\n<h3 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h3><p>以下链接网址若存在不能访问，请自行尝试翻墙，推荐使用GreenVPN<br><a href=\"http://gjsq.me/15038648\"><img src=\"/resources/greenvpn.gif\" alt=\"好用的GreenVPN\"></a></p>\n<h2 id=\"第一部分-个性化控件-View\"><a href=\"#第一部分-个性化控件-View\" class=\"headerlink\" title=\"第一部分 个性化控件(View)\"></a>第一部分 个性化控件(View)</h2><p>主要介绍那些不错个性化的 View，包括 ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style 等等。  </p>\n<h3 id=\"一、ListView\"><a href=\"#一、ListView\" class=\"headerlink\" title=\"一、ListView\"></a>一、ListView</h3><ol>\n<li><p>android-pulltorefresh<br>一个强大的拉动刷新开源项目，支持各种控件下拉刷新，ListView、ViewPager、WebView、ExpandableListView、GridView、ScrollView、Horizontal  ScrollView、Fragment 上下左右拉动刷新，比下面 johannilsson 那个只支持 ListView 的强大的多。并且它实现的下拉刷新 ListView 在 item 不足一屏情况下也不会显示刷新提示，体验更好。<br>项目地址：<a href=\"https://github.com/chrisbanes/Android-PullToRefresh\">https://github.com/chrisbanes/Android-PullToRefresh</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refreshview-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refreshview-demo.apk?raw=true</a><br>APP 示例：新浪微博各个页面 </p>\n</li>\n<li><p>android-pulltorefresh-listview<br>下拉刷新 ListView，这个被很多人使用的项目实际有不少 bug，推荐使用 <a href=\"https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh\">android-Ultra-Pull-to-Refresh</a><br>项目地址：<a href=\"https://github.com/johannilsson/android-pulltorefresh\">https://github.com/johannilsson/android-pulltorefresh</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refresh-listview-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/pull-to-refresh-listview-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>android-Ultra-Pull-to-Refresh<br>下拉刷新，第一个项目已经停止维护了，并且使用起来相对复杂，定制性也差。这个是替代和改良方案。这个继承于 ViewGroup 可以包含任何 View。功能甚至比 SwipeRefreshLayout 强大。使用起来非常简单。良好的设计，如果你想定制自己的 UI 样式，非常简单，就像给 ListView 加一个 Header View 那么简单。支持 <code>API LEVEL &gt;= 8</code><br>项目地址：<a href=\"https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh\">https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/Grumoon/android-Ultra-Pull-To-Refresh 源码解析\">android-Ultra-Pull-to-Refresh</a><br>Demo 地址：<a href=\"https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh/blob/master/ptr-demo/target/ultra-ptr-demo.apk?raw=true\">https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh/blob/master/ptr-demo/target/ultra-ptr-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>Android-PullToRefreshRecyclerView<br>支持下拉刷新的RecyclerView，同时支持滑动到底部自动加载数据、给RecyclerView添加Header。并且不更改原有RecyclerView的逻辑。<br>项目地址：<a href=\"https://github.com/HomHomLin/Android-PullToRefreshRecyclerView。\">https://github.com/HomHomLin/Android-PullToRefreshRecyclerView。</a><br>Demo地址：<a href=\"https://github.com/HomHomLin/Android-PullToRefreshRecyclerView/blob/master/sample.apk\">https://github.com/HomHomLin/Android-PullToRefreshRecyclerView/blob/master/sample.apk</a>  </p>\n</li>\n<li><p>DragSortListView<br>拖动排序的 ListView，同时支持 ListView 滑动 item 删除，各个 Item 高度不一、单选、复选、CursorAdapter 做为适配器、拖动背景变化等<br>项目地址：<a href=\"https://github.com/bauerca/drag-sort-listview\">https://github.com/bauerca/drag-sort-listview</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.mobeta.android.demodslv\">https://play.google.com/store/apps/details?id=com.mobeta.android.demodslv</a><br>APP 示例：Wordpress Android  </p>\n</li>\n<li><p>SwipeListView<br>支持定义 ListView 左右滑动事件，支持左右滑动位移，支持定义动画时间<br>项目地址：<a href=\"https://github.com/47deg/android-swipelistview\">https://github.com/47deg/android-swipelistview</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.fortysevendeg.android.swipelistview\">https://play.google.com/store/apps/details?id=com.fortysevendeg.android.swipelistview</a><br>APP 示例：微信 </p>\n</li>\n<li><p>SlideAndDragListView<br>支持ListView的Item的拖动排序、左右滑动事件，可自定义左右滑动显示文字、图标、位移，同时支持onItemClick、onItemLongClick等监听器，提供丰富的回调接口。<br>项目地址：<a href=\"https://github.com/yydcdut/SlideAndDragListView\">https://github.com/yydcdut/SlideAndDragListView</a><br>Demo 地址：<a href=\"https://github.com/yydcdut/SlideAndDragListView/blob/master/apk/sdlv.apk?raw=true\">https://github.com/yydcdut/SlideAndDragListView/blob/master/apk/sdlv.apk?raw=true</a><br>APP 示例：Android 手机QQ 5.0  </p>\n</li>\n<li><p>Android-SwipeToDismiss<br>滑动 Item 消失 ListView，支持 3.0 以下版本见：<a href=\"https://github.com/JakeWharton/SwipeToDismissNOA\">https://github.com/JakeWharton/SwipeToDismissNOA</a><br>项目地址：<a href=\"https://github.com/romannurik/Android-SwipeToDismiss\">https://github.com/romannurik/Android-SwipeToDismiss</a><br>Demo 地址：<a href=\"https://github.com/JakeWharton/SwipeToDismissNOA/SwipeToDismissNOA.apk/qr_code\">https://github.com/JakeWharton/SwipeToDismissNOA/SwipeToDismissNOA.apk/qr_code</a>  </p>\n</li>\n<li><p>RecyclerViewSwipeDismiss<br>轻量级支持 support-v7 中的 RecyclerView 的滑动删除(Swipe to dismiss)行为，不需要修改源代码，只要简单的绑定<code>onTouchListener</code><br>项目地址：<a href=\"https://github.com/CodeFalling/RecyclerViewSwipeDismiss\">https://github.com/CodeFalling/RecyclerViewSwipeDismiss</a>  </p>\n</li>\n<li><p>PinnedHeaderExpandableListView<br>首先它是一个 ExpandableListView，但是它的头部可以固定，其次，在它的上面还有一个头部可以来回伸缩<br>项目地址：<a href=\"https://github.com/singwhatiwanna/PinnedHeaderExpandableListView\">https://github.com/singwhatiwanna/PinnedHeaderExpandableListView</a><br>APP 示例：百度手机卫士垃圾清理界面  </p>\n</li>\n<li><p>StickyListHeaders<br>GroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView，支持快速滑动，支持 Android2.3 及以上<br>项目地址：<a href=\"https://github.com/emilsjolander/StickyListHeaders\">https://github.com/emilsjolander/StickyListHeaders</a><br>APP 示例：Android 4.0 联系人  </p>\n</li>\n<li><p>pinned-section-listview<br>GroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView<br>项目地址：<a href=\"https://github.com/beworker/pinned-section-listview\">https://github.com/beworker/pinned-section-listview</a>  </p>\n</li>\n<li><p>PinnedHeaderListView<br>GroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ExpandListView<br>项目地址：<a href=\"https://github.com/JimiSmith/PinnedHeaderListView\">https://github.com/JimiSmith/PinnedHeaderListView</a>  </p>\n</li>\n<li><p>QuickReturn<br>ListView/ScrollView 的 header 或 footer，当向下滚动时消失，向上滚动时出现<br>项目地址：<a href=\"https://github.com/lawloretienne/QuickReturn\">https://github.com/lawloretienne/QuickReturn</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.etiennelawlor.quickreturn\">https://play.google.com/store/apps/details?id=com.etiennelawlor.quickreturn</a>  </p>\n</li>\n<li><p>QuickReturnHeader<br>ListView/ScrollView 的 header 或 footer，当向下滚动时消失，向上滚动时出现<br>项目地址：<a href=\"https://github.com/ManuelPeinado/QuickReturnHeader\">https://github.com/ManuelPeinado/QuickReturnHeader</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/quick-return-header-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/quick-return-header-demo.apk?raw=true</a><br>APP 示例：google plus  </p>\n</li>\n<li><p>IndexableListView<br>ListView 右侧会显示 item 首字母快捷索引，点击可快速滑动到某个 item<br>项目地址：<a href=\"https://github.com/woozzu/IndexableListView\">https://github.com/woozzu/IndexableListView</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/indexable-listview.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/indexable-listview.apk?raw=true</a><br>APP 示例：微信通讯录、小米联系人  </p>\n</li>\n<li><p>CustomFastScrollView<br>ListView 快速滑动，同时屏幕中间 PopupWindows 显示滑动到的 item 内容或首字母<br>项目地址：<a href=\"https://github.com/nolanlawson/CustomFastScrollViewDemo\">https://github.com/nolanlawson/CustomFastScrollViewDemo</a>  </p>\n</li>\n<li><p>Android-ScrollBarPanel<br>ListView 滑动时固定的 Panel 指示显示在 scrollbar 旁边<br>项目地址：<a href=\"https://github.com/rno/Android-ScrollBarPanel\">https://github.com/rno/Android-ScrollBarPanel</a>  </p>\n</li>\n<li><p>SlideExpandableListView<br>用户点击 listView item 滑出固定区域，其他 item 的区域收缩<br>项目地址：<a href=\"https://github.com/tjerkw/Android-SlideExpandableListView\">https://github.com/tjerkw/Android-SlideExpandableListView</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/slide-expandable-listView-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/slide-expandable-listView-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>JazzyListView<br>ListView 及 GridView item 以特殊动画效果进入屏幕，效果包括 grow、cards、curl、wave、flip、fly 等等<br>项目地址：<a href=\"https://github.com/twotoasters/JazzyListView\">https://github.com/twotoasters/JazzyListView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.twotoasters.jazzylistview.sample\">https://play.google.com/store/apps/details?id=com.twotoasters.jazzylistview.sample</a><br>在线演示：<a href=\"http://lab.hakim.se/scroll-effects/\">http://lab.hakim.se/scroll-effects/</a>  </p>\n</li>\n<li><p>ListViewAnimations<br>带 Item 显示动画的 ListView，动画包括底部飞入、其他方向斜飞入、下层飞入、渐变消失、滑动删除等<br>项目地址：<a href=\"https://github.com/nhaarman/ListViewAnimations\">https://github.com/nhaarman/ListViewAnimations</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.haarman.listviewanimations\">https://play.google.com/store/apps/details?id=com.haarman.listviewanimations</a><br>APP 示例：Google plus、Google Now 卡片式进入、小米系统中应用商店、联系人、游戏中心、音乐、文件管理器的 ListView、Ultimate、Light Flow Lite、TreinVerkeer、Running Coach、Pearl Jam Lyrics、Calorie Chart、Car Hire、Super BART、DK FlashCards、Counter Plus、Voorlees Verhaaltjes 2.0  </p>\n</li>\n<li><p>DevsmartLib-Android<br>横向 ListView<br>项目地址：<a href=\"https://github.com/dinocore1/DevsmartLib-Android\">https://github.com/dinocore1/DevsmartLib-Android</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/horizontal-listview-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/horizontal-listview-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>TwoWayView<br>横向 ListView 的效果，继承自 AdapterView<br>项目地址：<a href=\"https://github.com/lucasr/twoway-view\">https://github.com/lucasr/twoway-view</a>  </p>\n</li>\n<li><p>HorizontalVariableListView<br>支持 Item 宽度不一致的 ListView<br>项目地址：<a href=\"https://github.com/sephiroth74/HorizontalVariableListView\">https://github.com/sephiroth74/HorizontalVariableListView</a>  </p>\n</li>\n<li><p>LinearListView<br>用 LinearLayout 实现的 ListView，可解决多个 ListView 并存等问题。目前自己也有需要，等亲自尝试过后会再具体介绍<br>项目地址：<a href=\"https://github.com/frankiesardo/LinearListView\">https://github.com/frankiesardo/LinearListView</a>  </p>\n</li>\n<li><p>MultiChoiceAdapter<br>支持多选的 ListView Adapter<br>项目地址：<a href=\"https://github.com/ManuelPeinado/MultiChoiceAdapter\">https://github.com/ManuelPeinado/MultiChoiceAdapter</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.manuelpeinado.multichoiceadapter.demo\">https://play.google.com/store/apps/details?id=com.manuelpeinado.multichoiceadapter.demo</a>  </p>\n</li>\n<li><p>EnhancedListView<br>支持横向滑动删除列表项以及撤销删除的 ListView，该项目的前身是<a href=\"https://github.com/timroes/SwipeToDismissUndoList\">SwipeToDismissUndoList</a><br>项目地址：<a href=\"https://github.com/timroes/EnhancedListView\">https://github.com/timroes/EnhancedListView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=de.timroes.android.listviewdemo&amp;rdid=de.timroes.android.listviewdemo\">https://play.google.com/store/apps/details?id=de.timroes.android.listviewdemo&amp;rdid=de.timroes.android.listviewdemo</a>  </p>\n</li>\n<li><p>ListBuddies<br>自动滚动的双列 ListView ，两个 ListView 滚动速度不一致，有视差效果<br>项目地址：<a href=\"https://github.com/jpardogo/ListBuddies\">https://github.com/jpardogo/ListBuddies</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.jpardogo.android.listbuddies\">https://play.google.com/store/apps/details?id=com.jpardogo.android.listbuddies</a>  </p>\n</li>\n<li><p>SwipeMenuListView<br>针对 ListView item 的侧滑菜单<br>项目地址：<a href=\"https://github.com/baoyongzhang/SwipeMenuListView\">https://github.com/baoyongzhang/SwipeMenuListView</a><br>APP 示例：手机 QQV5.0  </p>\n</li>\n<li><p>PagingListView<br>分页加载的 ListView。当滑动到 ListView 底部最后一个元素时，显示一个进度行，然后加载下一页数据，并显示。<br>项目地址：<a href=\"https://github.com/nicolasjafelle/PagingListView\">https://github.com/nicolasjafelle/PagingListView</a>  </p>\n</li>\n<li><p>PullZoomView<br>支持下拉时 HeaderView 缩放的 ListView、ScrollView<br>项目地址：<a href=\"https://github.com/Frank-Zhu/PullZoomView\">https://github.com/Frank-Zhu/PullZoomView</a>  </p>\n</li>\n<li><p>PullToZoomInListView<br>滑动 ListView 时使其 HeaderView 跟随滑动缩放<br>项目地址：<a href=\"https://github.com/matrixxun/PullToZoomInListView\">https://github.com/matrixxun/PullToZoomInListView</a>  </p>\n</li>\n<li><p>CalendarListview<br>实现每个月一行日历效果的 ListView<br>项目地址：<a href=\"https://github.com/traex/CalendarListview\">https://github.com/traex/CalendarListview</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/Rogary/CalendarListView%20%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90\">CalendarListview</a>  </p>\n</li>\n<li><p>sticky-headers-recyclerview<br>GroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 ListView，采用 support-v7 中的 RecyclerView 实现<br>项目地址：<a href=\"https://github.com/timehop/sticky-headers-recyclerview\">https://github.com/timehop/sticky-headers-recyclerview</a>  </p>\n</li>\n<li><p>PullSeparateListView<br>到达顶部或底部继续拉动时，实现 Item 间的相互分离，两种模式：(1) 全部分离的模式，即屏幕内所有 Item 都会分离 (2)部分分离模式，以点击位置为分界点，部分 item 分离<br>项目地址：<a href=\"https://github.com/chiemy/PullSeparateListView\">https://github.com/chiemy/PullSeparateListView</a>  </p>\n</li>\n<li><p>ExpandableLayout<br>Header 和 Content Item 都可以展开的 ExpandableListview<br>项目地址：<a href=\"https://github.com/traex/ExpandableLayout\">https://github.com/traex/ExpandableLayout</a>  </p>\n</li>\n<li><p>PagedHeadListView<br>支持 paginated header 以及 material page indicator 的 ListView.<br>项目地址：<a href=\"https://github.com/JorgeCastilloPrz/PagedHeadListView\">https://github.com/JorgeCastilloPrz/PagedHeadListView</a>  </p>\n</li>\n<li><p>CustomSwipeListView<br>支持左滑弹出自定义菜单，右滑删除且允许撤销，同时可以自定义滑动动画时间和滑动触发事件的时机等。<br>项目地址：<a href=\"https://github.com/xyczero/Android-CustomSwipeListView\">https://github.com/xyczero/Android-CustomSwipeListView</a><br>Demo 地址：<a href=\"http://7u2jsw.com1.z0.glb.clouddn.com/githubCustomSwipeListView.apk\">Download here</a>  </p>\n</li>\n<li><p>Pull-to-Refresh.Rentals-Android<br>提供一个简单可以自定义的下拉刷新实现，<a href=\"http://yalantis.com/\">Yalantis</a> 出品。<br>项目地址：<a href=\"https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android\">https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android</a>  </p>\n</li>\n<li><p>ScrollerCalendar<br>实现每行显示一年的 12 个月份的 RecyclerView 年历<br>项目地址：<a href=\"https://github.com/guanchao/ScrollerCalendar\">https://github.com/guanchao/ScrollerCalendar</a>  </p>\n</li>\n<li><p>ExtractWordView<br>一个可以提取单词的 ListView,支持”放大镜”效果。<br>项目地址：<a href=\"https://github.com/jcodeing/ExtractWordView\">https://github.com/jcodeing/ExtractWordView</a><br>Demo 地址：<a href=\"https://raw.githubusercontent.com/jcodeing/ExtractWordView/master/ExtractWordView-demo.apk\">Download here</a>  </p>\n</li>\n<li><p>FlyRefresh<br>支持 ListView, GridView, RecyclerView, ScrollView 的下拉刷新<br>项目地址：<a href=\"https://github.com/race604/FlyRefresh\">https://github.com/race604/FlyRefresh</a>  </p>\n</li>\n<li><p>MVCHelper<br>实现下拉刷新，滚动底部自动加载更多，分页加载，自动切换显示网络失败布局，暂无数据布局，支持任意 view，真正的 MVC 架构<br>支持切换主流下拉刷新框架 Android-PullToRefresh-Library,android-Ultra-Pull-To-Refresh-library，SwipeRefreshLayout<br>项目地址：<a href=\"https://github.com/LuckyJayce/MVCHelper\">https://github.com/LuckyJayce/MVCHelper</a><br>Demo 地址：<a href=\"https://github.com/LuckyJayce/MVCHelper/blob/master/raw/MVCHelper_Demo.apk?raw=true\">https://github.com/LuckyJayce/MVCHelper/blob/master/raw/MVCHelper_Demo.apk?raw=true</a>  </p>\n</li>\n<li><p>RecyclerViewSwipeDismiss<br>支持滑动 Item 操作、点击展开、拖动排序、展开后拖动排序等特性的 RecyclerView<br>项目地址：<a href=\"https://play.google.com/store/apps/details?id=com.h6ah4i.android.example.advrecyclerview\">https://play.google.com/store/apps/details?id=com.h6ah4i.android.example.advrecyclerview</a><br>视频：<a href=\"http://www.youtube.com/watch?feature=player_embedded&amp;v=S7cSwMArjUQ\">http://www.youtube.com/watch?feature=player_embedded&amp;v=S7cSwMArjUQ</a>  </p>\n</li>\n<li><p>WaterDropListView<br>模仿 iOS 下拉刷新“水滴”效果，支持下拉刷新和上拉加载<br>项目地址：<a href=\"https://github.com/THEONE10211024/WaterDropListView\">https://github.com/THEONE10211024/WaterDropListView</a>  </p>\n</li>\n<li><p>PopupListView<br>實現ListItem 點擊後置頂並可顯示客製化添加的item的內部View 的ListView<br>项目地址：<a href=\"https://github.com/s8871404/PopupListView\">https://github.com/s8871404/PopupListView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.baobomb.popuplistview_sample\">https://play.google.com/store/apps/details?id=com.baobomb.popuplistview_sample</a>  </p>\n</li>\n<li><p>CircleRefreshLayout<br>一个包含有趣的动画的自定义下拉刷新布局<br>项目地址：<a href=\"https://github.com/tuesda/CircleRefreshLayout\">https://github.com/tuesda/CircleRefreshLayout</a>  </p>\n</li>\n<li><p>EasyRecyclerView<br>一款简单易用的EasyRecyclerView<br>1.提供EasyRecyclerView，不需要写太多RecyclerView的配置代码<br>2.提供好一个可以适配单布局和多布局的RecyclerViewAdapter<br>3.提供了分割线的实现类，只需要传入一个DrawableId<br>项目地址：<a href=\"https://github.com/CaMnter/EasyRecyclerView\">https://github.com/CaMnter/EasyRecyclerView</a>  </p>\n</li>\n<li><p>CanRefresh<br>可适配所有视图的下拉刷新上拉加载，并支持各种风格<br>项目地址：<a href=\"https://github.com/canyinghao/CanRefresh\">https://github.com/canyinghao/CanRefresh</a>  </p>\n</li>\n</ol>\n<h3 id=\"二、ActionBar\"><a href=\"#二、ActionBar\" class=\"headerlink\" title=\"二、ActionBar\"></a>二、ActionBar</h3><ol>\n<li><p>ActionBarSherlock<br>为 Android 所有版本提供统一的 ActionBar，解决 4.0 以下 ActionBar 的适配问题<br>项目地址：<a href=\"https://github.com/JakeWharton/ActionBarSherlock\">https://github.com/JakeWharton/ActionBarSherlock</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.actionbarsherlock.sample.demos\">https://play.google.com/store/apps/details?id=com.actionbarsherlock.sample.demos</a><br>标签：兼容库, ActionBar  </p>\n</li>\n<li><p>ActionBar-PullToRefresh<br>下拉刷新，ActionBar 出现加载中提示<br>项目地址：<a href=\"https://github.com/chrisbanes/ActionBar-PullToRefresh\">https://github.com/chrisbanes/ActionBar-PullToRefresh</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=uk.co.senab.actionbarpulltorefresh.samples.stock\">https://play.google.com/store/apps/details?id=uk.co.senab.actionbarpulltorefresh.samples.stock</a><br>APP 示例：Gmail，Google Plus，知乎等  </p>\n</li>\n<li><p>FadingActionBar<br>ListView 向下滚动逐渐显现的 ActionBar<br>项目地址：<a href=\"https://github.com/ManuelPeinado/FadingActionBar\">https://github.com/ManuelPeinado/FadingActionBar</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.manuelpeinado.fadingactionbar.demo\">https://play.google.com/store/apps/details?id=com.manuelpeinado.fadingactionbar.demo</a><br>APP 示例：google music，知乎  </p>\n</li>\n<li><p>NotBoringActionBar<br>google music 下拉收缩的 ActionBar<br>项目地址：<a href=\"https://github.com/flavienlaurent/NotBoringActionBar\">https://github.com/flavienlaurent/NotBoringActionBar</a><br>Demo 地址：<a href=\"http://flavienlaurent.com/blog/2013/11/20/making-your-action-bar-not-boring/\">http://flavienlaurent.com/blog/2013/11/20/making-your-action-bar-not-boring/</a><br>APP 示例：Google 音乐  </p>\n</li>\n<li><p>RefreshActionItem<br>带进度显示和刷新按钮的 ActionBar<br>项目地址：<a href=\"https://github.com/ManuelPeinado/RefreshActionItem\">https://github.com/ManuelPeinado/RefreshActionItem</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.manuelpeinado.refreshactionitem.demo\">https://play.google.com/store/apps/details?id=com.manuelpeinado.refreshactionitem.demo</a><br>APP 示例：The New York Times，DevAppsDirect  </p>\n</li>\n<li><p>GlassActionBar<br>类似玻璃的有一定透明度的 ActionBar<br>项目地址：<a href=\"https://github.com/ManuelPeinado/GlassActionBar\">https://github.com/ManuelPeinado/GlassActionBar</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.manuelpeinado.glassactionbardemo\">https://play.google.com/store/apps/details?id=com.manuelpeinado.glassactionbardemo</a><br>APP 示例：google music  </p>\n</li>\n</ol>\n<h3 id=\"三、Menu\"><a href=\"#三、Menu\" class=\"headerlink\" title=\"三、Menu\"></a>三、Menu</h3><ol>\n<li><p>MenuDrawer<br>滑出式菜单，通过拖动屏幕边缘滑出菜单，支持屏幕上下左右划出，支持当前 View 处于上下层，支持 Windows 边缘、ListView 边缘、ViewPager 变化划出菜单等。<br>项目地址：<a href=\"https://github.com/SimonVT/android-menudrawer\">https://github.com/SimonVT/android-menudrawer</a><br>Demo 地址：<a href=\"http://simonvt.github.io/android-menudrawer/\">http://simonvt.github.io/android-menudrawer/</a><br>APP 示例：Gmail、Google Music 等大部分 google app  </p>\n</li>\n<li><p>SlidingMenu<br>滑出式菜单，通过拖动屏幕边缘滑出菜单，支持屏幕左右划出，支持菜单 zoom、scale、slide up 三种动画样式出现。与 MenuDrawer 相比而言，SlidingMenu 支持菜单动画样式出现，MenuDrawer 支持菜单 view 处于内容的上下层<br>项目地址：<a href=\"https://github.com/jfeinstein10/SlidingMenu\">https://github.com/jfeinstein10/SlidingMenu</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/huxian99/SlidingMenu 源码解析\">SlidingMenu</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.slidingmenu.example\">https://play.google.com/store/apps/details?id=com.slidingmenu.example</a><br>APP 示例：Foursquare, LinkedIn, Zappos, Rdio, Evernote Food, Plume, VLC for Android, ESPN ScoreCenter, MLS MatchDay, 9GAG, Wunderlist 2, The Verge, MTG Familiar, Mantano Reader, Falcon Pro (BETA), MW3 Barracks  </p>\n</li>\n<li><p>ArcMenu<br>支持类似 Path 的左下角动画旋转菜单及横向划出菜单、圆心弹出菜单<br>项目地址：<a href=\"https://github.com/daCapricorn/ArcMenu\">https://github.com/daCapricorn/ArcMenu</a><br><a href=\"https://dl.dropboxusercontent.com/u/11369687/preview1.png\">https://dl.dropboxusercontent.com/u/11369687/preview1.png</a><br><a href=\"https://dl.dropboxusercontent.com/u/11369687/raymenu.png\">https://dl.dropboxusercontent.com/u/11369687/raymenu.png</a><br>APP 示例：Path  </p>\n</li>\n<li><p>android-satellite-menu<br>类似 Path 的左下角动画旋转菜单<br>项目地址：<a href=\"https://github.com/siyamed/android-satellite-menu\">https://github.com/siyamed/android-satellite-menu</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/satellite-menu-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/satellite-menu-demo.apk?raw=true</a><br>APP 示例：Path  </p>\n</li>\n<li><p>radial-menu-widget<br>圆形菜单，支持二级菜单<br>项目地址：<a href=\"https://code.google.com/p/radial-menu-widget/\">https://code.google.com/p/radial-menu-widget/</a>  </p>\n</li>\n<li><p>Android Wheel Menu<br>圆形旋转选取菜单<br>项目地址：<a href=\"https://github.com/anupcowkur/Android-Wheel-Menu\">https://github.com/anupcowkur/Android-Wheel-Menu</a>  </p>\n</li>\n<li><p>FoldingNavigationDrawer<br>滑动并以折叠方式打开菜单<br>项目地址：<a href=\"https://github.com/tibi1712/FoldingNavigationDrawer-Android\">https://github.com/tibi1712/FoldingNavigationDrawer-Android</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.ptr.folding.sample\">https://play.google.com/store/apps/details?id=com.ptr.folding.sample</a>  </p>\n</li>\n<li><p>AndroidResideMenu<br>仿 Dribbble 的边栏菜单<br>项目地址：<a href=\"https://github.com/SpecialCyCi/AndroidResideMenu\">https://github.com/SpecialCyCi/AndroidResideMenu</a>  </p>\n</li>\n<li><p>CircularFloatingActionMenu<br>一个可定制的圆形的浮动菜单控件，类似于 Path 的圆形菜单。这个控件的可定制性更强，可以很容易的定制菜单出现消失时的动画，起始角度和半径。<br>项目地址：<a href=\"https://github.com/oguzbilgener/CircularFloatingActionMenu\">https://github.com/oguzbilgener/CircularFloatingActionMenu</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/cpacm/CircularFloatingActionMenu 源码解析\">CircularFloatingActionMenu</a><br>Demo 地址：<a href=\"https://github.com/oguzbilgener/CircularFloatingActionMenu/tree/master/samples\">https://github.com/oguzbilgener/CircularFloatingActionMenu/tree/master/samples</a>  </p>\n</li>\n<li><p>NavigationDrawerSI<br>Navigation Drawer 的一个简单实现，滑动并以折叠方式打开菜单<br>项目地址：<a href=\"https://github.com/mmBs/NavigationDrawerSI\">https://github.com/mmBs/NavigationDrawerSI</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi\">https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi</a><br>APP 示例：<a href=\"https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi\">https://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi</a>  </p>\n</li>\n<li><p>DragLayout<br>使用 support.v4 包下的 ViewDragHelper 实现 QQ5.0 侧滑<br>项目地址：<a href=\"https://github.com/BlueMor/DragLayout\">https://github.com/BlueMor/DragLayout</a>  </p>\n</li>\n<li><p>LDrawer<br>Material Design 形式的展开折叠 Icon<br>项目地址：<a href=\"https://github.com/ikimuhendis/LDrawer\">https://github.com/ikimuhendis/LDrawer</a>  </p>\n</li>\n<li><p>Floating Action Button<br>悬浮的圆形菜单栏，支持组建滚动时自动隐藏及其他设置<br>项目地址：<a href=\"https://github.com/shamanland/floating-action-button\">https://github.com/shamanland/floating-action-button</a>  </p>\n</li>\n<li><p>Side-Menu.Android<br>分类侧滑菜单，<a href=\"http://yalantis.com/\">Yalantis</a> 出品。<br>项目地址：<a href=\"https://github.com/Yalantis/Side-Menu.Android\">https://github.com/Yalantis/Side-Menu.Android</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/cpacm/Side Menu.Android 源码解析\">Side-Menu.Android</a>  </p>\n</li>\n<li><p>Context-Menu.Android<br>可以方便快速集成漂亮带有动画效果的上下文菜单，<a href=\"http://yalantis.com/\">Yalantis</a>出品。<br>项目地址：<a href=\"https://github.com/Yalantis/Context-Menu.Android\">https://github.com/Yalantis/Context-Menu.Android</a>  </p>\n</li>\n<li><p>Droppy<br>支持多种样式的下拉菜单<br>项目地址：<a href=\"https://github.com/shehabic/Droppy\">https://github.com/shehabic/Droppy</a>  </p>\n</li>\n<li><p>MaterialDrawer<br>Material Design 风格的导航抽屉，提供简便且强大的定制功能<br>项目地址：<a href=\"https://github.com/mikepenz/MaterialDrawer\">https://github.com/mikepenz/MaterialDrawer</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details？id=com.mikepenz.materialdrawer.app\">https://play.google.com/store/apps/details？id=com.mikepenz.materialdrawer.app</a>  </p>\n</li>\n<li><p>SlideBottomPanel<br>底部划出菜单，滑动时背景图透明度渐变，支持嵌套 LiewView 或 ScrollView<br>项目地址：<a href=\"https://github.com/kingideayou/SlideBottomPanel\">https://github.com/kingideayou/SlideBottomPanel</a><br>Demo 地址：<a href=\"https://github.com/kingideayou/SlideBottomPanel/raw/master/apk/SlideBottomPanelDemo.apk\">SlideBottomPanelDemo 下载</a>  </p>\n</li>\n<li><p>FlowingDrawer<br>带手势流动效果侧滑菜单<br>项目地址：<a href=\"https://github.com/mxn21/FlowingDrawer\">https://github.com/mxn21/FlowingDrawer</a></p>\n</li>\n</ol>\n<h3 id=\"四、ViewPager-、Gallery\"><a href=\"#四、ViewPager-、Gallery\" class=\"headerlink\" title=\"四、ViewPager 、Gallery\"></a>四、ViewPager 、Gallery</h3><ol>\n<li><p>AdvancedPagerSlidingTabStrip<br>一个完美兼容ViewPager的导航栏组件；可以自定义TabView；能动态加载Tab上的Icon图片； 能显示Tab的消息数量和提示小圆点。<br>项目地址：<a href=\"https://github.com/HomHomLin/AdvancedPagerSlidingTabStrip\">https://github.com/HomHomLin/AdvancedPagerSlidingTabStrip</a></p>\n</li>\n<li><p>ConvenientBanner<br>通用的广告栏控件，让你轻松实现广告头效果。支持无限循环，可以设置自动翻页和时间(而且非常智能，手指触碰则暂停翻页，离开自动开始翻页。你也可以设置在界面onPause的时候不进行自动翻页，onResume之后继续自动翻页)，并且提供多种翻页特效。 对比其他广告栏控件，大多都需要对源码进行改动才能加载网络图片，或者帮你集成不是你所需要的图片缓存库。而这个库能让有代码洁癖的你欢喜，不需要对库源码进行修改你就可以使用任何你喜欢的网络图片库进行配合。<br>项目地址：<a href=\"https://github.com/saiwu-bigkoo/Android-ConvenientBanner\">https://github.com/saiwu-bigkoo/Android-ConvenientBanner</a>  </p>\n</li>\n<li><p>Android-ViewPagerIndicator<br>配合 ViewPager 使用的 Indicator，支持各种位置和样式<br>项目地址：<a href=\"https://github.com/JakeWharton/Android-ViewPagerIndicator\">https://github.com/JakeWharton/Android-ViewPagerIndicator</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.viewpagerindicator.sample\">https://play.google.com/store/apps/details?id=com.viewpagerindicator.sample</a><br>APP 示例：太多了。。  </p>\n</li>\n<li><p>JazzyViewPager<br>支持 Fragment 切换动画的 ViewPager，动画包括转盘、淡入淡出、翻页、层叠、旋转、方块、翻转、放大缩小等，效果类似桌面左右切换的各种效果，不过桌面并非用 ViewPager 实现而已<br>项目地址：<a href=\"https://github.com/jfeinstein10/JazzyViewPager\">https://github.com/jfeinstein10/JazzyViewPager</a><br>Demo 地址：<a href=\"https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true\">https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true</a>  </p>\n</li>\n<li><p>JellyViewPager<br>特殊切换动画的 ViewPager<br>项目地址：<a href=\"https://github.com/chiemy/JellyViewPager\">https://github.com/chiemy/JellyViewPager</a>  </p>\n</li>\n<li><p>Android-DirectionalViewPager<br>支持横向和纵向(垂直)的 ViewPager<br>项目地址：<a href=\"https://github.com/JakeWharton/Android-DirectionalViewPager\">https://github.com/JakeWharton/Android-DirectionalViewPager</a><br>Demo 地址：<a href=\"https://market.android.com/details?id=com.directionalviewpager.sample\">https://market.android.com/details?id=com.directionalviewpager.sample</a>  </p>\n</li>\n<li><p>FancyCoverFlow<br>支持 Item 切换动画效果的类似 Gallery View<br>项目地址：<a href=\"https://github.com/davidschreiber/FancyCoverFlow\">https://github.com/davidschreiber/FancyCoverFlow</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=at.technikum.mti.fancycoverflow.samples\">https://play.google.com/store/apps/details?id=at.technikum.mti.fancycoverflow.samples</a>  </p>\n</li>\n<li><p>AndroidTouchGallery<br>支持双击或双指缩放的 Gallery(用 ViewPager 实现)，相比下面的 PhotoView，在被放大后依然能滑到下一个 item，并且支持直接从 url 和文件中获取图片，<br>项目地址：<a href=\"https://github.com/Dreddik/AndroidTouchGallery\">https://github.com/Dreddik/AndroidTouchGallery</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/touch-gallery-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/touch-gallery-demo.apk?raw=true</a><br>APP 示例：类似微信中查看聊天记录图片时可双击放大，并且放大情况下能正常左右滑动到前后图片  </p>\n</li>\n<li><p>Android Auto Scroll ViewPager<br>Android 自动滚动 轮播循环的 ViewPager<br>项目地址：<a href=\"https://github.com/Trinea/android-auto-scroll-view-pager\">https://github.com/Trinea/android-auto-scroll-view-pager</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=cn.trinea.android.demo\">https://play.google.com/store/apps/details?id=cn.trinea.android.demo</a><br>文档介绍：<a href=\"http://www.trinea.cn/android/auto-scroll-view-pager/\">http://www.trinea.cn/android/auto-scroll-view-pager/</a>  </p>\n</li>\n<li><p>Android PagerSlidingTabStrip<br>配合 ViewPager 使用的 Indicator，支持 ViewPager Scroll 时 Indicator 联动<br>项目地址：<a href=\"https://github.com/astuetz/PagerSlidingTabStrip\">https://github.com/astuetz/PagerSlidingTabStrip</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/ayyb1988/PagerSlidingTabStrip 源码解析\">Android PagerSlidingTabStrip</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.astuetz.viewpager.extensions.sample\">https://play.google.com/store/apps/details?id=com.astuetz.viewpager.extensions.sample</a>  </p>\n</li>\n<li><p>ViewPager3D<br>ViewPager3D 效果<br>项目地址：<a href=\"https://github.com/inovex/ViewPager3D\">https://github.com/inovex/ViewPager3D</a>  </p>\n</li>\n<li><p>AnimaTabsview<br>仿网易云音乐标签切换的动画,带透明小三角<br>项目地址：<a href=\"https://github.com/wuyexiong/transparent-over-animtabsview\">https://github.com/wuyexiong/transparent-over-animtabsview</a><br>在线演示：<a href=\"http://v.youku.com/v_show/id_XNzA4MjY5NjA0.html\">http://v.youku.com/v_show/id_XNzA4MjY5NjA0.html</a>  </p>\n</li>\n<li><p>LoopingViewPager<br>无限循环的 ViewPager<br>项目地址：<a href=\"https://github.com/imbryk/LoopingViewPager\">https://github.com/imbryk/LoopingViewPager</a>  </p>\n</li>\n<li><p>android_page_curl<br>翻书卷曲效果<br>项目地址：<a href=\"https://github.com/harism/android_page_curl\">https://github.com/harism/android_page_curl</a><br>在线演示：<a href=\"https://www.youtube.com/watch?v=iwu7P5PCpsw\">https://www.youtube.com/watch?v=iwu7P5PCpsw</a><br>APP 示例：iReader  </p>\n</li>\n<li><p>ViewPagerIndicator<br>简化并实现 android 的 TabHost 效果，顶部滑动 tab，引导页，支持自定义 tab 样式,自定义滑动块样式和位置,自定义切换 tab 的过渡动画,子界面的预加载和界面缓存,设置界面是否可滑动<br>项目地址：<a href=\"https://github.com/LuckyJayce/ViewPagerIndicator\">https://github.com/LuckyJayce/ViewPagerIndicator</a>  </p>\n</li>\n<li><p>ScreenSlideIndicator<br>轻量级的圆形 Indicadtor，位置可以自由调整，不会对 ViewPager 产生任何影响。<br>项目地址：<a href=\"https://github.com/LyndonChin/Android-ScreenSlidePager\">ScreenSlidePager</a>  </p>\n</li>\n<li><p>SmartTabLayout<br>自定义的 Tab title strip，基于 Google Samples 中的 android-SlidingTabBasic 项目，滑动时 Indicator 可平滑过渡。<br>项目地址：<a href=\"https://github.com/ogaclejapan/SmartTabLayout\">https://github.com/ogaclejapan/SmartTabLayout</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.ogaclejapan.smarttablayout.demo\">https://play.google.com/store/apps/details?id=com.ogaclejapan.smarttablayout.demo</a>  </p>\n</li>\n<li><p>AndroidImageSlider<br>Android 图片滑动<br>项目地址：<a href=\"https://github.com/daimajia/AndroidImageSlider\">https://github.com/daimajia/AndroidImageSlider</a><br>App示例：<a href=\"https://github.com/daimajia/AndroidImageSlider/releases/download/v1.0.8/demo-1.0.8.apk\">https://github.com/daimajia/AndroidImageSlider/releases/download/v1.0.8/demo-1.0.8.apk</a>  </p>\n</li>\n<li><p>RecyclerViewPager<br>完全继承自 RecyclerView，可以自定义触发翻页的距离，可自定义翻页速度，支持垂直方向的 ViewPager，支持 Fragment。<br>项目地址：<a href=\"https://github.com/lsjwzh/RecyclerViewPager\">RecyclerViewPager</a>  </p>\n</li>\n<li><p>CircleIndicator<br>轻量级ViewPager指示器,支持三种不同的模式<br>项目地址：<a href=\"https://github.com/THEONE10211024/CircleIndicator\">CircleIndicator</a>  </p>\n</li>\n<li><p>EasySlidingTabs<br>一款简单、易用的滑动标签页<br>项目地址： <a href=\"https://github.com/CaMnter/EasySlidingTabs\">https://github.com/CaMnter/EasySlidingTabs</a>  </p>\n</li>\n</ol>\n<h3 id=\"五、GridView\"><a href=\"#五、GridView\" class=\"headerlink\" title=\"五、GridView\"></a>五、GridView</h3><ol>\n<li><p>StaggeredGridView<br>允许非对齐行的 GridView，类似 Pinterest 的瀑布流，并且跟 ListView 一样自带 View 缓存，继承自 ViewGroup<br>项目地址：<a href=\"https://github.com/maurycyw/StaggeredGridView\">https://github.com/maurycyw/StaggeredGridView</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/staggered-gridview-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/staggered-gridview-demo.apk?raw=true</a><br>APP 示例：Pinterest 等  </p>\n</li>\n<li><p>AndroidStaggeredGrid<br>允许非对齐行的 GridView，类似 Pinterest 的瀑布流，继承自 AbsListView<br>项目地址：<a href=\"https://github.com/etsy/AndroidStaggeredGrid\">https://github.com/etsy/AndroidStaggeredGrid</a><br>APP 示例：Pinterest 等  </p>\n</li>\n<li><p>PinterestLikeAdapterView<br>允许非对齐行的 GridView，类似 Pinterest 的瀑布流，允许下拉刷新<br>项目地址：<a href=\"https://github.com/GDG-Korea/PinterestLikeAdapterView\">https://github.com/GDG-Korea/PinterestLikeAdapterView</a><br>APP 示例：Pinterest 等  </p>\n</li>\n<li><p>DraggableGridView<br>Item 可拖动交换位置的 GridView，实际是自己继承 ViewGroup 实现，类似桌面的单屏效果，可屏幕自动上下滚动进行 Item 移动交换，多屏效果见下面 PagedDragDropGrid<br>项目地址：<a href=\"https://github.com/thquinn/DraggableGridView\">https://github.com/thquinn/DraggableGridView</a><br>Demo 地址：<a href=\"https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true\">https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true</a><br>也可以自定义item的宽高和每行的个数，并且修改交换逻辑，当移动到另一个item时就进行交换，删除滚动逻辑。<br>项目地址：<a href=\"https://github.com/andyken/DraggableGridView\">DraggableGridView</a>  </p>\n</li>\n<li><p>StickyGridHeaders<br>GroupName 滑动到顶端时会固定不动直到另外一个 GroupName 到达顶端的 GridView<br>项目地址：<a href=\"https://github.com/TonicArtos/StickyGridHeaders\">https://github.com/TonicArtos/StickyGridHeaders</a>  </p>\n</li>\n<li><p>PagedDragDropGrid<br>Item 可拖动交换位置、拖动删除的自定义控件，实际是自己继承 ViewGroup 实现，类似桌面的多屏效果，可拖动到屏幕边缘，屏幕自动左右滚动进行 Item 移动交换，可拖动进行删除，单屏效果见上面 DraggableGridView<br>项目地址：<a href=\"https://github.com/mrKlar/PagedDragDropGrid\">https://github.com/mrKlar/PagedDragDropGrid</a><br>在线演示：<a href=\"http://youtu.be/FYTSRfthSuQ\">http://youtu.be/FYTSRfthSuQ</a>  </p>\n</li>\n<li><p>Android-DraggableGridViewPager<br>Item 可拖动交换位置的 GridView，实际是自己继承 ViewGroup 实现，类似桌面的多屏效果，可屏幕自动左右滚动进行 Item 移动交换，单屏效果见上面 DraggableGridView<br>项目地址：<a href=\"https://github.com/zzhouj/Android-DraggableGridViewPager\">https://github.com/zzhouj/Android-DraggableGridViewPager</a><br>Demo 地址：<a href=\"https://github.com/Trinea/trinea-download/blob/master/draggable-grid-viewpager-demo.apk?raw=true\">https://github.com/Trinea/trinea-download/blob/master/draggable-grid-viewpager-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>TwoWayGridView<br>可横向滚动的 GridView<br>项目地址：<a href=\"https://github.com/jess-anders/two-way-gridview\">https://github.com/jess-anders/two-way-gridview</a>  </p>\n</li>\n<li><p>PagingGridView<br>分页加载的 GridView。当滑动到 GridView 底部最后一个行时，显示一个进度行，然后加载下一页数据，并显示。<br>项目地址：<a href=\"https://github.com/nicolasjafelle/PagingGridView\">https://github.com/nicolasjafelle/PagingGridView</a>  </p>\n</li>\n<li><p>AsymmetricGridView<br>一个支持跨行和跨列可变 Item 大小的 GridView<br>项目地址：<a href=\"https://github.com/felipecsl/AsymmetricGridView\">https://github.com/felipecsl/AsymmetricGridView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.felipecsl.asymmetricgridview.app\">https://play.google.com/store/apps/details?id=com.felipecsl.asymmetricgridview.app</a>  </p>\n</li>\n<li><p>GridView with Header and Footer<br>和<code>ListView</code>一样带头部和底部的<code>GridView</code>，用法和<code>ListView</code>一样<br>项目地址：<a href=\"https://github.com/liaohuqiu/android-GridViewWithHeaderAndFooter\">https://github.com/liaohuqiu/android-GridViewWithHeaderAndFooter</a>  </p>\n</li>\n</ol>\n<h3 id=\"六、ImageView\"><a href=\"#六、ImageView\" class=\"headerlink\" title=\"六、ImageView\"></a>六、ImageView</h3><ol>\n<li><p>PhotoView<br>支持双击或双指缩放的 ImageView，在 ViewPager 等 Scrolling view 中正常使用，相比上面的 AndroidTouchGallery，不仅支持 ViewPager，同时支持单个 ImageView<br>项目地址：<a href=\"https://github.com/chrisbanes/PhotoView\">https://github.com/chrisbanes/PhotoView</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/dkmeteor/PhotoView 源码解析\">PhotoView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=uk.co.senab.photoview.sample\">https://play.google.com/store/apps/details?id=uk.co.senab.photoview.sample</a><br>APP 示例：photup  </p>\n</li>\n<li><p>Fresco-ImageView<br>Fresco-ImageView是一种Android平台的图像控件，底层是对Fresco的封装，可以异步加载网络图片、项目资源和本地图片，并且支持双指缩放、图片的基本处理以及Fresco的所有特性。<br>项目地址：<a href=\"https://github.com/HomHomLin/FrescoImageView。\">https://github.com/HomHomLin/FrescoImageView。</a>  </p>\n</li>\n<li><p>android-gif-drawable<br>支持 gif 显示的 view，用 jni 实现的，编译生成 so 库后直接 xml 定义 view 即可，而且本身不依赖于其他开源项目所以相对下面的 ImageViewEx 简单的多<br>项目地址：<a href=\"https://github.com/koral--/android-gif-drawable\">https://github.com/koral--/android-gif-drawable</a>  </p>\n</li>\n<li><p>ImageViewEx<br>支持 Gif 显示的 ImageView，依赖很多，编译过程很繁琐<br>项目地址：<a href=\"https://github.com/frapontillo/ImageViewEx\">https://github.com/frapontillo/ImageViewEx</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/imageviewex-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/imageviewex-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>RoundedImageView<br>带圆角的 ImageView<br>项目地址：<a href=\"https://github.com/vinc3m1/RoundedImageView\">https://github.com/vinc3m1/RoundedImageView</a>  </p>\n</li>\n<li><p>SelectableRoundedImageView<br>ImageView 允许四个角的每一个有不同的半径值。也允许椭圆形、圆形的形状或者边<br>项目地址：<a href=\"https://github.com/pungrue26/SelectableRoundedImageView\">https://github.com/pungrue26/SelectableRoundedImageView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.joooonho\">https://play.google.com/store/apps/details?id=com.joooonho</a>  </p>\n</li>\n<li><p>ColorArt<br>根据图片的均色设置背景色显示文字和图片，类似 itune11 中效果<br>项目地址：<a href=\"https://github.com/MichaelEvans/ColorArt\">https://github.com/MichaelEvans/ColorArt</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/color-art-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/color-art-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>CircleImageView<br>圆形的 ImageView<br>项目地址：<a href=\"https://github.com/hdodenhof/CircleImageView\">https://github.com/hdodenhof/CircleImageView</a>  </p>\n</li>\n<li><p>ImageViewZoom<br>支持放大和平移的 ImageView<br>项目地址：<a href=\"https://github.com/sephiroth74/ImageViewZoom\">https://github.com/sephiroth74/ImageViewZoom</a><br>APP 示例：<a href=\"https://play.google.com/store/apps/details?id=com.aviary.android.feather\">https://play.google.com/store/apps/details?id=com.aviary.android.feather</a>  </p>\n</li>\n<li><p>KenBurnsView<br>实现 Ken Burns effect 效果，达到身临其境效果的 ImageView<br>项目地址：<a href=\"https://github.com/flavioarfaria/KenBurnsView\">https://github.com/flavioarfaria/KenBurnsView</a>  </p>\n</li>\n<li><p>CustomShapeImageView<br>各种形状的 ImageView, 相比上面的圆形 ImageView，多了更多形状<br>项目地址：<a href=\"https://github.com/MostafaGazar/CustomShapeImageView\">https://github.com/MostafaGazar/CustomShapeImageView</a>  </p>\n</li>\n<li><p>Shape Image View<br>可以自定义各种形状的 ImageView, 并且支持边框<br>项目地址：<a href=\"https://github.com/siyamed/android-shape-imageview\">https://github.com/siyamed/android-shape-imageview</a>  </p>\n</li>\n<li><p>TextDrawable<br>一个用于生成带有文本或者字母的图片的轻量级库。扩展自 Drawable，因此可用于现有/自定义/网络等 ImageView 类，并且包含一个流接口用于创建 drawables 以及一个定制的 ColorGenerator<br>项目地址：<a href=\"https://github.com/amulyakhare/TextDrawable\">https://github.com/amulyakhare/TextDrawable</a>  </p>\n</li>\n<li><p>android-smart-image-view<br>可从 URL 或 contact address book 加载图片的 ImageView，支持缓存<br>项目地址：<a href=\"https://github.com/loopj/android-smart-image-view\">https://github.com/loopj/android-smart-image-view</a>  </p>\n</li>\n<li><p>PhotoView<br>支持双指/双击缩放的ImageView,支持从一个PhotoView缩放到另外一个PhotoView(点击图片放大预览),相对于其他PhototView有更加平滑的缩放,平移的动画,并且支持所有的ScaleType,可以作为普通的ImageView使用<br>项目地址：<a href=\"https://github.com/bm-x/PhotoView\">https://github.com/bm-x/PhotoView</a>  </p>\n</li>\n</ol>\n<h3 id=\"七、ProgressBar\"><a href=\"#七、ProgressBar\" class=\"headerlink\" title=\"七、ProgressBar\"></a>七、ProgressBar</h3><ol>\n<li><p>SmoothProgressBar<br>水平进度条<br>项目地址：<a href=\"https://github.com/castorflex/SmoothProgressBar\">https://github.com/castorflex/SmoothProgressBar</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=fr.castorflex.android.smoothprogressbar.sample\">https://play.google.com/store/apps/details?id=fr.castorflex.android.smoothprogressbar.sample</a>  </p>\n</li>\n<li><p>MaterialProgessBar<br>Material Design 的进度条，支持 Android 4.0<br>项目地址：<a href=\"https://github.com/DreaminginCodeZH/MaterialProgressBar\">https://github.com/DreaminginCodeZH/MaterialProgressBar</a><br>Demo 地址：<a href=\"https://github.com/DreaminginCodeZH/MaterialProgressBar/blob/master/dist/sample.apk\">https://github.com/DreaminginCodeZH/MaterialProgressBar/blob/master/dist/sample.apk</a>  </p>\n</li>\n<li><p>ProgressWheel<br>支持进度显示的圆形 ProgressBar<br>项目地址：<a href=\"https://github.com/Todd-Davies/ProgressWheel\">https://github.com/Todd-Davies/ProgressWheel</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/progress-wheel-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/progress-wheel-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>android-square-progressbar<br>在图片周围显示进度<br>项目地址：<a href=\"https://github.com/mrwonderman/android-square-progressbar\">https://github.com/mrwonderman/android-square-progressbar</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=net.yscs.android.square_progressbar_example\">https://play.google.com/store/apps/details?id=net.yscs.android.square_progressbar_example</a><br>APP 示例：square  </p>\n</li>\n<li><p>HoloCircularProgressBar<br>Android4.1 时钟 App 样式<br>项目地址：<a href=\"https://github.com/passsy/android-HoloCircularProgressBar\">https://github.com/passsy/android-HoloCircularProgressBar</a><br>APP 示例：Android4.1 时钟 App  </p>\n</li>\n<li><p>ProgressButton<br>通过图钉的不同状态显示进度<br>项目地址：<a href=\"https://github.com/f2prateek/progressbutton\">https://github.com/f2prateek/progressbutton</a><br>文档介绍：<a href=\"http://f2prateek.com/progressbutton/\">http://f2prateek.com/progressbutton/</a>  </p>\n</li>\n<li><p>GoogleProgressBar<br>类似 google 多个圆形卡片翻转的 progressBar<br>项目地址：<a href=\"https://github.com/jpardogo/GoogleProgressBar\">https://github.com/jpardogo/GoogleProgressBar</a>  </p>\n</li>\n<li><p>TH-ProgressButton<br>带圆形进度显示的按钮<br>项目地址：<a href=\"https://github.com/torryharris/TH-ProgressButton\">https://github.com/torryharris/TH-ProgressButton</a>  </p>\n</li>\n<li><p>NumberProgressBar<br>带数字进度的进度条<br>项目地址：<a href=\"https://github.com/daimajia/NumberProgressBar\">https://github.com/daimajia/NumberProgressBar</a>  </p>\n</li>\n<li><p>CircularProgressDrawable<br>带圆形进度显示的进度条<br>项目地址：<a href=\"https://github.com/Sefford/CircularProgressDrawable\">https://github.com/Sefford/CircularProgressDrawable</a>  </p>\n</li>\n<li><p>Android-RoundCornerProgressBar<br>Android 圆角 ProgressBar，可自定义圆角颜色和半径，包括带 Icon 和不带 Icon 两种类型。<br>项目地址：<a href=\"https://github.com/akexorcist/Android-RoundCornerProgressBar\">https://github.com/akexorcist/Android-RoundCornerProgressBar</a>  </p>\n</li>\n<li><p>circular-progress-button<br>带进度显示的 Button<br>项目地址：<a href=\"https://github.com/dmytrodanylyk/circular-progress-button\">https://github.com/dmytrodanylyk/circular-progress-button</a>  </p>\n</li>\n<li><p>WaveView<br>一个波纹效果的 View，可用来做 ProgressBar<br>项目地址：<a href=\"https://github.com/john990/WaveView\">https://github.com/john990/WaveView</a><br>Demo 地址：<a href=\"https://raw.github.com/john990/WaveView/master/screenshot%26apk/demo.unaligned.apk\">https://raw.github.com/john990/WaveView/master/screenshot%26apk/demo.unaligned.apk</a>  </p>\n</li>\n<li><p>MaterialLoadingProgressBar<br>抽取自 SwipeRefreshLayout 的 Material Design 进度指示器<br>项目地址：<a href=\"https://github.com/lsjwzh/MaterialLoadingProgressBar\">https://github.com/lsjwzh/MaterialLoadingProgressBar</a>  </p>\n</li>\n<li><p>MetaballLoading<br>A 2d metaball loading<br>项目地址：<a href=\"https://github.com/dodola/MetaballLoading\">https://github.com/dodola/MetaballLoading</a></p>\n</li>\n<li><p>SectorProgressView<br>一个圆形或环形的进度显示控件，用圆中扇形的角度大小来表示进度信息<br>项目地址：<a href=\"https://github.com/timqi/SectorProgressView\">https://github.com/timqi/SectorProgressView</a><br>Demo：<a href=\"https://github.com/timqi/SectorProgressView/raw/master/art/example.apk\">apk download</a> </p>\n</li>\n<li><p>CircularFillableLoaders<br>一个可以用于闪屏或者其他地方加载的控件<br>项目地址：<a href=\"https://github.com/lopspower/CircularFillableLoaders\">https://github.com/lopspower/CircularFillableLoaders</a><br>Demo地址：(<a href=\"https://play.google.com/store/apps/details?id=com.mikhaellopez.circularfillableloaderssample\">https://play.google.com/store/apps/details?id=com.mikhaellopez.circularfillableloaderssample</a>) </p>\n</li>\n<li><p>PinWheel<br>一个旋转的大风车Dialog<br>项目地址：<a href=\"https://github.com/codingWang/PinWheel\">https://github.com/codingWang/PinWheel</a></p>\n</li>\n<li><p>ColorArcProgressBar<br>一个可定制的圆形进度条，通过xml参数配置可实现QQ健康中步数的弧形进度显示、仪盘表显示速度、最常见的下载进度条等功能。<br>项目地址：<a href=\"https://github.com/Shinelw/ColorArcProgressBar\">https://github.com/Shinelw/ColorArcProgressBar</a></p>\n</li>\n</ol>\n<h3 id=\"八、TextView\"><a href=\"#八、TextView\" class=\"headerlink\" title=\"八、TextView\"></a>八、TextView</h3><p>包括 TextView 及所有继承自 TextView 控件，如 EditText、Button、RadioButton  </p>\n<ol>\n<li><p>android-flowtextview<br>文字自动环绕其他 View 的 Layout<br>项目地址：<a href=\"https://github.com/deano2390/FlowTextView\">https://github.com/deano2390/FlowTextView</a>  </p>\n</li>\n<li><p>Android Form EditText<br>验证输入合法性的编辑框，支持输入、英文、ip、url 等多种正则验证<br>项目地址：<a href=\"https://github.com/vekexasia/android-edittext-validator\">https://github.com/vekexasia/android-edittext-validator</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.andreabaccega.edittextformexample\">https://play.google.com/store/apps/details?id=com.andreabaccega.edittextformexample</a>  </p>\n</li>\n<li><p>Emojicon<br>支持 emojis 的 TextView 和 EditText<br>项目地址：<a href=\"https://github.com/rockerhieu/emojicon\">https://github.com/rockerhieu/emojicon</a><br>文档介绍：<a href=\"http://rockerhieu.com/emojicon/\">http://rockerhieu.com/emojicon/</a>  </p>\n</li>\n<li><p>android-circlebutton<br>Android 圆形按钮，实际实现是继承自 ImageView<br>项目地址：<a href=\"https://github.com/markushi/android-circlebutton\">https://github.com/markushi/android-circlebutton</a><br>Demo 地址：<a href=\"https://github.com/markushi/android-circlebutton/blob/master/example/example.apk\">https://github.com/markushi/android-circlebutton/blob/master/example/example.apk</a>  </p>\n</li>\n<li><p>Segmented Radio Buttons for Android<br>iOS’s segmented controls 的实现<br>项目地址：<a href=\"https://github.com/vinc3m1/android-segmentedradiobutton\">https://github.com/vinc3m1/android-segmentedradiobutton</a><br>Demo 地址：<a href=\"https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true\">https://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true</a>  </p>\n</li>\n<li><p>Chips EditText Library<br>支持国家名字联想从而选择显示该国国旗的 EditText，实际就是通过 SpannableStringBuilder 实现<br>项目地址：<a href=\"https://github.com/kpbird/chips-edittext-library\">https://github.com/kpbird/chips-edittext-library</a><br>Demo 地址：<a href=\"https://github.com/kpbird/chips-edittext-library/tree/master/ChipsEditTextDemo/bin\">https://github.com/kpbird/chips-edittext-library/tree/master/ChipsEditTextDemo/bin</a>  </p>\n</li>\n<li><p>AutoFitTextView<br>可固定边界内容字体大小自适应的 TextView<br>项目地址：<a href=\"https://github.com/grantland/android-autofittextview\">https://github.com/grantland/android-autofittextview</a>  </p>\n</li>\n<li><p>Shimmer for Android<br>文字发淡光的 TextView<br>项目地址：<a href=\"https://github.com/RomainPiel/Shimmer-android\">https://github.com/RomainPiel/Shimmer-android</a>  </p>\n</li>\n<li><p>Titanic<br>可以显示水位上升下降(不知道该怎么描述 囧)的 TextView<br>项目地址：<a href=\"https://github.com/RomainPiel/Titanic\">https://github.com/RomainPiel/Titanic</a>  </p>\n</li>\n<li><p>android-iconify<br>提供带 Icon 的 TextView,Menu,Button 等<br>项目地址：<a href=\"https://github.com/JoanZapata/android-iconify\">https://github.com/JoanZapata/android-iconify</a>  </p>\n</li>\n<li><p>Calligraphy<br>让我们在 android 开发中使用自定义字体变得更加简单<br>项目地址：<a href=\"https://github.com/chrisjenx/Calligraphy\">https://github.com/chrisjenx/Calligraphy</a>  </p>\n</li>\n<li><p>CreditsRoll<br>类似星球大战字幕效果的 TextView<br>项目地址：<a href=\"https://github.com/frakbot/CreditsRoll\">https://github.com/frakbot/CreditsRoll</a>  </p>\n</li>\n<li><p>android-process-buton<br>带加载或提交进度的 Button<br>项目地址：<a href=\"https://github.com/dmytrodanylyk/android-process-buton\">https://github.com/dmytrodanylyk/android-process-buton</a>  </p>\n</li>\n<li><p>FButton<br>扁平化的 Button<br>项目地址：<a href=\"https://github.com/hoang8f/android-flat-button\">https://github.com/hoang8f/android-flat-button</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo\">https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo</a>  </p>\n</li>\n<li><p>FloatingActionButton<br>一个类似 Android 版 Google+浮动功能按钮的控件，可以响应 ListView 的滚动事件。当列表向上滚动的时候会自动显示，向下滚动的时候自动隐藏。<br>项目地址：<a href=\"https://github.com/makovkastar/FloatingActionButton\">https://github.com/makovkastar/FloatingActionButton</a><br>Demo 地址：<a href=\"https://github.com/makovkastar/FloatingActionButton/tree/master/\">https://github.com/makovkastar/FloatingActionButton/tree/master/</a>  </p>\n</li>\n<li><p>Android Saripaar<br>Android 表单验证<br>项目地址：<a href=\"https://github.com/ragunathjawahar/android-saripaar/\">https://github.com/ragunathjawahar/android-saripaar/</a>  </p>\n</li>\n<li><p>JumpingBeans<br>文字像 Mexican beans 一样跳动<br>项目地址：<a href=\"https://github.com/frakbot/JumpingBeans\">https://github.com/frakbot/JumpingBeans</a><br>Demo 地址：<a href=\"http://play.google.com/store/apps/details?id=net.frakbot.jumpingbeans.demo\">http://play.google.com/store/apps/details?id=net.frakbot.jumpingbeans.demo</a>  </p>\n</li>\n<li><p>FancyButtons<br>一个不用图片就可以帮助我们创建出漂亮按钮的库。<br>项目地址：<a href=\"https://github.com/medyo/fancybuttons\">https://github.com/medyo/fancybuttons</a><br>Demo 地址：<a href=\"https://github.com/medyo/fancybuttons/tree/master/samples\">https://github.com/medyo/fancybuttons/tree/master/samples</a>  </p>\n</li>\n<li><p>Android-RobotoTextView<br>一个实现了所有 Roboto 字体的 TextView，包括新出的 Roboto Slab 字体。<br>项目地址：<a href=\"https://github.com/johnkil/Android-RobotoTextView\">https://github.com/johnkil/Android-RobotoTextView</a><br>Demo 地址：<a href=\"http://play.google.com/store/apps/details?id=com.devspark.robototextview\">http://play.google.com/store/apps/details?id=com.devspark.robototextview</a><br>Demo 项目：<a href=\"https://github.com/johnkil/Android-RobotoTextView/tree/master/robototextview-sample\">https://github.com/johnkil/Android-RobotoTextView/tree/master/robototextview-sample</a>  </p>\n</li>\n<li><p>Android-WizardPager<br>一个表单向导库<br>项目地址：<a href=\"https://github.com/romannurik/android-wizardpager\">https://github.com/romannurik/android-wizardpager</a><br>Demo 项目：<a href=\"https://github.com/str4d/android-wizardpager/tree/textfield\">https://github.com/str4d/android-wizardpager/tree/textfield</a>  </p>\n</li>\n<li><p>RippleView<br>一个实现了 Android L 上才引入的点击按钮后出现水波纹效果的按钮<br>项目地址：<a href=\"https://github.com/siriscac/RippleView\">https://github.com/siriscac/RippleView</a><br>Demo 项目：<a href=\"https://github.com/siriscac/RippleView/tree/master/RippleViewExample\">https://github.com/siriscac/RippleView/tree/master/RippleViewExample</a>  </p>\n</li>\n<li><p>RippleEffect<br>一个实现 Material Design Ripple 效果的库，支持 Android API 9+以上版本。<br>项目地址：<a href=\"https://github.com/traex/RippleEffect\">https://github.com/traex/RippleEffect</a><br>Demo 项目：<a href=\"https://github.com/traex/RippleEffect/tree/master/sample\">https://github.com/traex/RippleEffect/tree/master/sample</a>  </p>\n</li>\n<li><p>RippleCompat<br>使用易于移植的方式为UI控件实现波纹效应，可以适配控件原背景及Palette支持。api简单，可自定义效果，兼容至Android API 7+。<br>项目地址：<a href=\"https://github.com/desmond1121/RippleCompat\">https://github.com/desmond1121/RippleCompat</a><br>Demo 项目：<a href=\"https://github.com/desmond1121/RippleCompat/tree/master/app\">https://github.com/desmond1121/RippleCompat/tree/master/app</a></p>\n</li>\n<li><p>Android Floating Label Widgets<br>包含一系列控件，这些控件特点是：有默认值，当值不为空时默认值浮动到上面变为提示<br>项目地址：<a href=\"https://github.com/marvinlabs/android-floatinglabel-widgets\">https://github.com/marvinlabs/android-floatinglabel-widgets</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.marvinlabs.widget.floatinglabel.demo\">https://play.google.com/store/apps/details?id=com.marvinlabs.widget.floatinglabel.demo</a><br>在线演示：<a href=\"http://www.youtube.com/watch?v=hpZD9gJcRg0&amp;feature=youtu.be\">http://www.youtube.com/watch?v=hpZD9gJcRg0&amp;feature=youtu.be</a>  </p>\n</li>\n<li><p>MaterialEditText<br>EditText 的 Material Design 实现。包含 <a href=\"http://www.google.com/design/spec/components/text-fields.html\">Google Material Design Spec</a>中的 UI 效果和一些新增特性。<br>项目地址：<a href=\"https://github.com/rengwuxian/MaterialEditText\">https://github.com/rengwuxian/MaterialEditText</a>  </p>\n</li>\n<li><p>MaterialEditText<br>实现 <a href=\"http://www.google.com/design/spec/components/text-fields.html\">Material Design</a> 中 Ripple 效果线条背景的 EditText。直接替换原生 EditText 即可集成。<br>项目地址：<a href=\"https://github.com/DreamingInCodeZH/MaterialEditText\">https://github.com/DreamingInCodeZH/MaterialEditText</a>    </p>\n</li>\n<li><p>MultiActionTextView<br>可以分别给 TextView 中的某几个字设置点击事件的 TextView<br>项目地址：<a href=\"https://github.com/ajaysahani/MultiActionTextView\">https://github.com/ajaysahani/MultiActionTextView</a>  </p>\n</li>\n<li><p>ToggleButton<br>状态切换的 Button，类似 iOS，用 View 实现<br>项目地址：<a href=\"https://github.com/zcweng/ToggleButton\">https://github.com/zcweng/ToggleButton</a>  </p>\n</li>\n<li><p>SwitchButton<br>状态切换的 Button，类似 iOS，拥有良好的用户界面<br>项目地址：<a href=\"https://github.com/kyleduo/SwitchButton\">https://github.com/kyleduo/SwitchButton</a>  </p>\n</li>\n<li><p>SlideSwitch<br>状态切换的开关，可以设置为类似 IOS 的圆形，也可以设置为矩形，用 View 实现<br>项目地址：<a href=\"https://github.com/Leaking/SlideSwitch\">https://github.com/Leaking/SlideSwitch</a>  </p>\n</li>\n<li><p>ExpandableTextView<br>可展开和收缩内容的 TextView。<br>项目地址：<a href=\"https://github.com/Manabu-GT/ExpandableTextView\">https://github.com/Manabu-GT/ExpandableTextView</a>  </p>\n</li>\n<li><p>TagCloudView(支持 SingleLine 模式的标签云)<br>标签云效果，只需要一行代码即可设置为 SingleLine 模式，轻松实现知乎问题话题列表效果。SingleLine 模式时末尾文字及图片可自定义。<br>项目地址：<a href=\"https://github.com/kingideayou/TagCloudView\">https://github.com/kingideayou/TagCloudView</a><br>示例APK地址：<a href=\"https://github.com/kingideayou/TagCloudView/raw/master/apk/Demo.apk\">https://github.com/kingideayou/TagCloudView/raw/master/apk/Demo.apk</a><br>APP示例：知乎  </p>\n</li>\n<li><p>BubbleTextView<br>Android Bubble View<br>项目地址：<a href=\"https://github.com/dupengtao/BubbleTextView\">https://github.com/dupengtao/BubbleTextView</a> </p>\n</li>\n<li><p>shadow-layout<br>Android Shadow Layout<br>解决了<code>CardView</code>：1.不能画圆的阴影。2.设置阴影的位置。3.设置阴影颜色。<br>项目地址：<a href=\"https://github.com/dmytrodanylyk/shadow-layout\">https://github.com/dmytrodanylyk/shadow-layout</a></p>\n</li>\n</ol>\n<h3 id=\"九、ScrollView\"><a href=\"#九、ScrollView\" class=\"headerlink\" title=\"九、ScrollView\"></a>九、ScrollView</h3><ol>\n<li><p>Discrollview<br>支持滚动时 Item 淡入淡出，平移，缩放效果的 ScrollView<br>项目地址：<a href=\"https://github.com/flavienlaurent/discrollview\">https://github.com/flavienlaurent/discrollview</a><br>Demo 地址：<a href=\"https://github.com/flavienlaurent/discrollview/raw/master/sample.apk\">https://github.com/flavienlaurent/discrollview/raw/master/sample.apk</a>  </p>\n</li>\n<li><p>PullScrollView<br>仿照新浪微博 Android 客户端个人中心的 ScrollView，下拉背景伸缩回弹效果。<br>项目地址：<a href=\"https://github.com/MarkMjw/PullScrollView\">https://github.com/MarkMjw/PullScrollView</a>  </p>\n</li>\n<li><p>ArcLayout<br>一个非常简单的弧布局库<br>项目地址：<a href=\"https://github.com/ogaclejapan/ArcLayout\">https://github.com/ogaclejapan/ArcLayout</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.ogaclejapan.arclayout.demo\">https://play.google.com/store/apps/details?id=com.ogaclejapan.arclayout.demo</a>  </p>\n</li>\n<li><p>ParallaxScrollView<br>支持视差滚动的 ScrollView ，背景图片的滚动速度小于 ScrollView 中子控件的滚动速度<br>项目地址：<a href=\"https://github.com/chrisjenx/ParallaxScrollView\">https://github.com/chrisjenx/ParallaxScrollView</a><br>Demo 地址：<a href=\"http://cloud.github.com/downloads/chrisjenx/ParallaxScrollView/ParallaxScrollViewDemo-v1.0.5.apk\">http://cloud.github.com/downloads/chrisjenx/ParallaxScrollView/ParallaxScrollViewDemo-v1.0.5.apk</a>  </p>\n</li>\n<li><p>AKParallax-Android<br>支持视差滚动的 ScrollView<br>项目地址：<a href=\"https://github.com/ideaismobile/AKParallax-Android\">https://github.com/ideaismobile/AKParallax-Android</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.appkraft.parallax_sample\">https://play.google.com/store/apps/details?id=com.appkraft.parallax_sample</a>  </p>\n</li>\n<li><p>Android-ObservableScrollView<br>监听滚动视图滚动事件的库，帮助与 Toolbar 的交互动效处理与 Material Design 的实现<br>项目地址：<a href=\"https://github.com/ksoichiro/Android-ObservableScrollView\">https://github.com/ksoichiro/Android-ObservableScrollView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.github.ksoichiro.android.observablescrollview.samples2\">https://play.google.com/store/apps/details?id=com.github.ksoichiro.android.observablescrollview.samples2</a>  </p>\n</li>\n<li><p>OverScrollView<br>有弹性的 ScrollView，实现了当手指滑动到 ScrollView 的顶部、底部时，可以继续的向上、向下拉伸。当释放手指的时候，向上、下回弹<br>项目地址：<a href=\"https://github.com/EverythingMe/OverScrollView\">https://github.com/EverythingMe/OverScrollView</a>  </p>\n</li>\n</ol>\n<h3 id=\"十、TimeView\"><a href=\"#十、TimeView\" class=\"headerlink\" title=\"十、TimeView\"></a>十、TimeView</h3><p>包括 TimePicker、DatePicker、CalendarView、Clock 等时间相关控件  </p>\n<ol>\n<li><p>android-times-square<br>Android 日历时间部件，支持选取单个日期，多个日期，及日期区间段和对话框形式显示<br>项目地址：<a href=\"https://github.com/square/android-times-square\">https://github.com/square/android-times-square</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/times-square-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/times-square-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>android-calendar-card<br>日历<br>项目地址：<a href=\"https://github.com/kenumir/android-calendar-card\">https://github.com/kenumir/android-calendar-card</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.wt.calendarcardsample\">https://play.google.com/store/apps/details?id=com.wt.calendarcardsample</a>  </p>\n</li>\n<li><p>AndroidWheel<br>Android Wheel 支持城市、多种日期时间、密码、图片<br>项目地址：<a href=\"https://code.google.com/p/android-wheel/\">https://code.google.com/p/android-wheel/</a>  </p>\n</li>\n<li><p>GoogleDateTimePickers<br>时间选择部件<br>项目地址：<a href=\"https://github.com/Mirkoddd/GoogleDateTimePickers\">https://github.com/Mirkoddd/GoogleDateTimePickers</a><br>文档介绍：<a href=\"https://play.google.com/store/apps/details?id=com.mirko.sample&amp;hl=it\">https://play.google.com/store/apps/details?id=com.mirko.sample&amp;hl=it</a>  </p>\n</li>\n<li><p>DateTimePicker<br>日期选择部件(Google Agenda 的样式风格)<br>项目地址：<a href=\"https://github.com/flavienlaurent/datetimepicker\">https://github.com/flavienlaurent/datetimepicker</a><br>Demo 地址：<a href=\"https://raw.github.com/biboune/datetimepicker/master/datetimepicker-sample.apk\">https://raw.github.com/biboune/datetimepicker/master/datetimepicker-sample.apk</a>  </p>\n</li>\n<li><p>android-betterpickers<br>提供日期、数字、时间（数字方式和钟表方式）、重复周期（闹钟的周期重复）、HMS（时、分、秒）的选择，支持以 DialogFragment 的弹窗选择<br>项目地址：<a href=\"https://github.com/derekbrameyer/android-betterpickers\">https://github.com/derekbrameyer/android-betterpickers</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.doomonafireball.betterpickers.sample\">https://play.google.com/store/apps/details?id=com.doomonafireball.betterpickers.sample</a>  </p>\n</li>\n<li><p>Android Week View<br>日期控件，支持周，天视图，支持自定义样式<br>项目地址：<a href=\"https://github.com/alamkanak/Android-Week-View\">https://github.com/alamkanak/Android-Week-View</a>  </p>\n</li>\n<li><p>PickerView<br>仿 iOS 的 PickerView 控件，有时间选择和选项选择并支持一二三级联动效果，TimePopupWindow 时间选择器，支持年月日时分，年月日，时分等格式；OptionsPopupWindow 选项选择器，支持一，二，三级选项选择，并且可以设置是否联动<br>项目地址：<a href=\"https://github.com/saiwu-bigkoo/Android-PickerView\">https://github.com/saiwu-bigkoo/Android-PickerView</a>  </p>\n</li>\n<li><p>CountdownView<br>Android 倒计时控件，使用Canvas绘制，支持多种样式<br>项目地址：<a href=\"https://github.com/iwgang/CountdownView\">https://github.com/iwgang/CountdownView</a>  </p>\n</li>\n</ol>\n<h3 id=\"十一、TipView\"><a href=\"#十一、TipView\" class=\"headerlink\" title=\"十一、TipView\"></a>十一、TipView</h3><p>包括 Toast、角标、UndoBar 等提示性控件  </p>\n<ol>\n<li><p>SVProgressHUD<br>SVProgressHUD For Android 精仿iOS的提示库 SVProgressHUD，api也几乎一样。<br>项目地址：<a href=\"https://github.com/saiwu-bigkoo/Android-SVProgressHUD\">https://github.com/saiwu-bigkoo/Android-SVProgressHUD</a>  </p>\n</li>\n<li><p>Crouton<br>丰富样式的 Toast，允许 alert、comfirm、info 样式及点击消失样式，允许设置 Toast 显示时间，允许自定义 View。 本文 32. SuperToasts 为其扩展版<br>项目地址：<a href=\"https://github.com/keyboardsurfer/Crouton\">https://github.com/keyboardsurfer/Crouton</a><br>Demo 地址：<a href=\"http://play.google.com/store/apps/details?id=de.keyboardsurfer.app.demo.crouton\">http://play.google.com/store/apps/details?id=de.keyboardsurfer.app.demo.crouton</a>  </p>\n</li>\n<li><p>supertooltips<br>带动画效果的 Tips 显示<br>项目地址：<a href=\"https://github.com/nhaarman/supertooltips\">https://github.com/nhaarman/supertooltips</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.haarman.supertooltips\">https://play.google.com/store/apps/details?id=com.haarman.supertooltips</a>  </p>\n</li>\n<li><p>Android ViewBadger<br>为其他 View 添加角标（消息圆点）等<br>项目地址：<a href=\"https://github.com/jgilfelt/android-viewbadger\">https://github.com/jgilfelt/android-viewbadger</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/android-viewbadger.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/android-viewbadger.apk?raw=true</a>  </p>\n</li>\n<li><p>SuperToasts<br>更丰富样式的 toast，支持 Button、Progress、Horizontal Progress 样式、支持进入动画、支持撤销及其动画设置<br>项目地址：<a href=\"https://github.com/JohnPersano/SuperToasts\">https://github.com/JohnPersano/SuperToasts</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.supertoastsdemo\">https://play.google.com/store/apps/details?id=com.supertoastsdemo</a>  </p>\n</li>\n<li><p>UndoBar<br>屏幕底部显示取消或是确认的 PopupWindows<br>项目地址：<a href=\"https://github.com/soarcn/UndoBar\">https://github.com/soarcn/UndoBar</a>  </p>\n</li>\n<li><p>UndoBar<br>屏幕底部显示取消或是确认某操作<br>项目地址：<a href=\"https://github.com/jenzz/Android-UndoBar\">https://github.com/jenzz/Android-UndoBar</a>  </p>\n</li>\n<li><p>Android-ActionItemBadge<br>可以在 ActionBar 的 MenuItem 上显示一个小角标<br>项目地址：<a href=\"https://github.com/mikepenz/Android-ActionItemBadge\">https://github.com/mikepenz/Android-ActionItemBadge</a>  </p>\n</li>\n<li><p>SnackBar<br>Material Design 风格的 Toast，类似 Google inbox 中的提示<br>项目地址：<a href=\"https://github.com/MrEngineer13/SnackBar\">https://github.com/MrEngineer13/SnackBar</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.mrengineer13.snackbar.sample\">https://play.google.com/store/apps/details?id=com.mrengineer13.snackbar.sample</a>  </p>\n</li>\n<li><p>HeadsUp<br>在 2.3 上使用 android  5.0 的 HeadsUp 效果<br>项目地址：<a href=\"https://github.com/zzz40500/HeadsUp\">https://github.com/zzz40500/HeadsUp</a>  </p>\n</li>\n</ol>\n<h3 id=\"十二、FlipView\"><a href=\"#十二、FlipView\" class=\"headerlink\" title=\"十二、FlipView\"></a>十二、FlipView</h3><ol>\n<li><p>android-flip<br>类似 Flipboard 翻转动画的实现<br>项目地址：<a href=\"https://github.com/openaphid/android-flip\">https://github.com/openaphid/android-flip</a><br>Demo 地址：<a href=\"https://github.com/openaphid/android-flip/blob/master/FlipView/Demo/APK/Aphid-FlipView-Demo.apk?raw=true\">https://github.com/openaphid/android-flip/blob/master/FlipView/Demo/APK/Aphid-FlipView-Demo.apk?raw=true</a><br>APP 示例：flipboard  </p>\n</li>\n<li><p>FlipImageView<br>支持 x、y、z 及动画选择的翻转动画的实现<br>项目地址：<a href=\"https://github.com/castorflex/FlipImageView\">https://github.com/castorflex/FlipImageView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=fr.castorflex.android.flipimageview\">https://play.google.com/store/apps/details?id=fr.castorflex.android.flipimageview</a>  </p>\n</li>\n<li><p>FoldableLayout<br>Flip 翻转效果的 ListView，目前还不支持 ListView 缓存<br>项目地址：<a href=\"https://github.com/alexvasilkov/FoldableLayout\">https://github.com/alexvasilkov/FoldableLayout</a><br>Demo 地址：<a href=\"http://play.google.com/store/apps/details?id=com.alexvasilkov.foldablelayout.sample\">http://play.google.com/store/apps/details?id=com.alexvasilkov.foldablelayout.sample</a>  </p>\n</li>\n<li><p>FlipViewPager.Draco<br>Flip 翻转效果的 ViewPager<br>项目地址：<a href=\"https://github.com/Yalantis/FlipViewPager.Draco\">https://github.com/Yalantis/FlipViewPager.Draco</a>  </p>\n</li>\n</ol>\n<h3 id=\"十三、ColorPickView\"><a href=\"#十三、ColorPickView\" class=\"headerlink\" title=\"十三、ColorPickView\"></a>十三、ColorPickView</h3><ol>\n<li><p>ColorPickerView<br>颜色选择器，支持 PopupWindows 或新的 Activity 中打开<br>项目地址：<a href=\"https://code.google.com/p/color-picker-view/\">https://code.google.com/p/color-picker-view/</a>  </p>\n</li>\n<li><p>HoloColorPicker<br>颜色选择器<br>项目地址：<a href=\"https://github.com/LarsWerkman/HoloColorPicker\">https://github.com/LarsWerkman/HoloColorPicker</a><br>Demo 地址：<a href=\"https://docs.google.com/file/d/0BwclyDTlLrdXRzVnTGJvTlRfU2s/edit\">https://docs.google.com/file/d/0BwclyDTlLrdXRzVnTGJvTlRfU2s/edit</a>  </p>\n</li>\n<li><p>ColorPickerPreference<br>颜色选择器<br>项目地址：<a href=\"https://github.com/attenzione/android-ColorPickerPreference\">https://github.com/attenzione/android-ColorPickerPreference</a>  </p>\n</li>\n<li><p>ColorPicker<br>颜色选择器（Google Agenda 中的样式风格）<br>项目地址：<a href=\"https://github.com/flavienlaurent/colorpicker\">https://github.com/flavienlaurent/colorpicker</a><br>Demo 地址：<a href=\"https://raw.github.com/biboune/colorpicker/master/colorpicker-sample.apk\">https://raw.github.com/biboune/colorpicker/master/colorpicker-sample.apk</a>  </p>\n</li>\n</ol>\n<h3 id=\"十四、GraphView\"><a href=\"#十四、GraphView\" class=\"headerlink\" title=\"十四、GraphView\"></a>十四、GraphView</h3><ol>\n<li><p>MPAndroidChart<br>强大的图表绘制工具，支持折线图、面积图、散点图、时间图、柱状图、条图、饼图、气泡图、圆环图、范围（高至低）条形图、网状图等；支持图的拖拽缩放；支持 Android 2.2 以上，支持横纵轴缩放，多指缩放，展现动画、高亮、保存到 sdcard、从文件读取图表<br>项目地址：<a href=\"https://github.com/PhilJay/MPAndroidChart\">https://github.com/PhilJay/MPAndroidChart</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.xxmassdeveloper.mpchartexample\">https://play.google.com/store/apps/details?id=com.xxmassdeveloper.mpchartexample</a><br>Demo 项目：<a href=\"https://github.com/PhilJay/MPAndroidChart/tree/master/MPChartExample\">https://github.com/PhilJay/MPAndroidChart/tree/master/MPChartExample</a><br>在线演示：<a href=\"https://www.youtube.com/watch?v=ufaK_Hd6BpI\">https://www.youtube.com/watch?v=ufaK_Hd6BpI</a>  </p>\n</li>\n<li><p>achartengine<br>强大的图表绘制工具，支持折线图、面积图、散点图、时间图、柱状图、条图、饼图、气泡图、圆环图、范围（高至低）条形图、拨号图/表、立方线图及各种图的结合<br>项目地址：<a href=\"https://code.google.com/p/achartengine/\">https://code.google.com/p/achartengine/</a><br>官网网址：<a href=\"http://www.achartengine.org/\">http://www.achartengine.org/</a><br>APP 示例：Wordpress Android，Google Analytics  </p>\n</li>\n<li><p>GraphView<br>绘制图表和曲线图的 View，可用于 Android 上的曲形图、柱状图、波浪图展示<br>项目地址：<a href=\"https://github.com/jjoe64/GraphView\">https://github.com/jjoe64/GraphView</a><br>Demo 项目：<a href=\"https://github.com/jjoe64/GraphView-Demos\">https://github.com/jjoe64/GraphView-Demos</a><br>APP 示例：Wordpress Android，Google Analytics  </p>\n</li>\n<li><p>HoloGraphLibrary<br>绘制现状图、柱状图、饼状图<br>项目地址：<a href=\"https://bitbucket.org/danielnadeau/holographlibrary/src\">https://bitbucket.org/danielnadeau/holographlibrary/src</a><br>文档介绍：<a href=\"https://bitbucket.org/danielnadeau/holographlibrary/wiki/Home\">https://bitbucket.org/danielnadeau/holographlibrary/wiki/Home</a>  </p>\n</li>\n<li><p>XCL-Charts<br>XCL-Charts 基于原生的 Canvas 来绘制各种图表,在设计时，尽量在保证开发效率的同时，给使用者提供足够多的定制化能力。因此使用简便,同时具有相当灵活的定制能力。目前支持 3D/非 3D 柱形图(Bar Chart)、3D/非 3D 饼图(Pie Chart)、堆积图(Stacked Bar Chart)、面积图(Area Chart)、 折线图(Line Chart)、曲线图(Spline Chart)、环形图(Dount Chart)、南丁格尔玫瑰图(Rose Chart)、仪表盘(Dial Chart)、刻度盘(Gauge Chart)、雷达图(Radar Chart)、圆形图(Circle Chart)等图表。其它特性还包括支持图表缩放、手势移动、动画显示效果、高密度柱形显示、图表分界定制线、多图表的混合显示及同数据源不同类型图表切换等。<br>项目地址：<a href=\"https://github.com/xcltapestry/XCL-Charts\">https://github.com/xcltapestry/XCL-Charts</a><br>Demo 地址：<a href=\"https://github.com/xcltapestry/XCL-Charts/blob/master/XCL-Charts-demo/bin/XCL-Charts-demo.apk?raw=true\">https://github.com/xcltapestry/XCL-Charts/blob/master/XCL-Charts-demo/bin/XCL-Charts-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>EazeGraph<br>Android 图表库，支持柱状图、分层柱状图、饼状图、线性图<br>项目地址：<a href=\"https://github.com/blackfizz/EazeGraph\">https://github.com/blackfizz/EazeGraph</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=org.eazegraph.app\">https://play.google.com/store/apps/details?id=org.eazegraph.app</a>  </p>\n</li>\n<li><p>WilliamChart<br>绘制图表的库，支持 LineChartView、BarChartView 和 StackBarChartView 三中图表类型，并且支持 Android 2.2 及以上的系统。<br>项目地址：<a href=\"https://github.com/diogobernardino/WilliamChart\">https://github.com/diogobernardino/WilliamChart</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.db.williamchartdemo\">https://play.google.com/store/apps/details?id=com.db.williamchartdemo</a><br>Demo 项目：<a href=\"https://github.com/diogobernardino/WilliamChart/tree/master/sample\">https://github.com/diogobernardino/WilliamChart/tree/master/sample</a>  </p>\n</li>\n<li><p>HelloCharts for Android<br>支持折线图、柱状图、饼图、气泡图、组合图；支持预览、放大缩小，滚动，部分图表支持动画；支持 Android 2.2 以上<br>项目地址：<a href=\"https://github.com/lecho/hellocharts-android\">https://github.com/lecho/hellocharts-android</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=lecho.lib.hellocharts.samples\">https://play.google.com/store/apps/details?id=lecho.lib.hellocharts.samples</a><br>在线演示：<a href=\"https://www.youtube.com/watch?v=xbSBjyjH2SY\">https://www.youtube.com/watch?v=xbSBjyjH2SY</a>  </p>\n</li>\n<li><p>PieChartView<br>比较简单直接的饼状统计报表图，使用方便，设置相应的属性参数即可<br>项目地址：<a href=\"https://github.com/wuseal/PieChartView\">https://github.com/wuseal/PieChartView</a><br>Demo 地址：<a href=\"https://github.com/wuseal/PieChartView\">https://github.com/wuseal/PieChartView</a>  </p>\n</li>\n</ol>\n<h3 id=\"十五、UI-Style\"><a href=\"#十五、UI-Style\" class=\"headerlink\" title=\"十五、UI Style\"></a>十五、UI Style</h3><p>不同样式的系统 UI 风格，如 IOS、Bootstrap 风格  </p>\n<ol>\n<li><p>UITableView<br>ios 风格控件，包括 Button、ListView、TableView<br>项目地址：<a href=\"https://github.com/thiagolocatelli/android-uitableview\">https://github.com/thiagolocatelli/android-uitableview</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/ui-tableview-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/ui-tableview-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>ATableView<br>ios 风格控件<br>项目地址：<a href=\"https://github.com/dmacosta/ATableView\">https://github.com/dmacosta/ATableView</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.nakardo.atableview.demo\">https://play.google.com/store/apps/details?id=com.nakardo.atableview.demo</a>  </p>\n</li>\n<li><p>Cards-UI<br>卡片式 View，支持单个卡片，item 为卡片的 ListView<br>项目地址：<a href=\"https://github.com/afollestad/Cards-UI\">https://github.com/afollestad/Cards-UI</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/cards-ui-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/cards-ui-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>cardslib<br>卡片式 View，支持单个卡片，item 为卡片的 ListView 和 GridView<br>项目地址：<a href=\"https://github.com/gabrielemariotti/cardslib\">https://github.com/gabrielemariotti/cardslib</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=it.gmariotti.cardslib.demo\">https://play.google.com/store/apps/details?id=it.gmariotti.cardslib.demo</a>  </p>\n</li>\n<li><p>Android-Bootstrap<br>Bootstrap 风格的按钮<br>项目地址：<a href=\"https://github.com/Bearded-Hen/Android-Bootstrap\">https://github.com/Bearded-Hen/Android-Bootstrap</a>  </p>\n</li>\n<li><p>Material Design Android Library<br>Android L 中 Material Design 风格的组件适配到 Android 2.2+<br>项目地址：<a href=\"https://github.com/navasmdc/MaterialDesignLibrary\">https://github.com/navasmdc/MaterialDesignLibrary</a>  </p>\n</li>\n<li><p>Android FlatUI<br>Android 扁平化风格的组件，支持一些自定义样式<br>项目地址：<a href=\"https://github.com/eluleci/FlatUI\">https://github.com/eluleci/FlatUI</a>  </p>\n</li>\n<li><p>cheesesquare<br>全新 Android 设计库演示 Demo，包括 Collapsing Toolbar、FloatingActionButton、View anchoring、NavigationView、Snackbar<br>项目地址：<a href=\"https://github.com/chrisbanes/cheesesquare\">https://github.com/chrisbanes/cheesesquare</a>  </p>\n</li>\n</ol>\n<h3 id=\"十六、其他\"><a href=\"#十六、其他\" class=\"headerlink\" title=\"十六、其他\"></a>十六、其他</h3><ol>\n<li><p>SnappingStepper<br>一种漂亮的UI控件，能更灵活的控制数字的增减。可用于购物车商品数量控制。<br>项目地址：<a href=\"https://github.com/saiwu-bigkoo/Android-SnappingStepper\">https://github.com/saiwu-bigkoo/Android-SnappingStepper</a>  </p>\n</li>\n<li><p>SwipeBackLayout<br>左右或向上滑动返回的 Activity<br>项目地址：<a href=\"https://github.com/Issacw0ng/SwipeBackLayout\">https://github.com/Issacw0ng/SwipeBackLayout</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=me.imid.swipebacklayout.demo\">https://play.google.com/store/apps/details?id=me.imid.swipebacklayout.demo</a><br>APP 示例：知乎  </p>\n</li>\n<li><p>android-styled-dialogs<br>可自定义样式的 dialog，默认与 Holo 主题样式一致，在 Android2.2 以上同一样式<br>项目地址：<a href=\"https://github.com/inmite/android-styled-dialogs\">https://github.com/inmite/android-styled-dialogs</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/styled-dialogs-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/styled-dialogs-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>Android Sliding Up Panel<br>可拖动的 View，能在当前 Activity 上扶起一个可拖动的 Panel<br>项目地址：<a href=\"https://github.com/umano/AndroidSlidingUpPanel\">https://github.com/umano/AndroidSlidingUpPanel</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.sothree.umano\">https://play.google.com/store/apps/details?id=com.sothree.umano</a><br>APP 示例：Google Music 精简播放栏  </p>\n</li>\n<li><p>TableFixHeaders<br>第一列固定的 Table<br>项目地址：<a href=\"https://github.com/InQBarna/TableFixHeaders\">https://github.com/InQBarna/TableFixHeaders</a><br>Demo 地址：<a href=\"http://bit.ly/13buAIq\">http://bit.ly/13buAIq</a>  </p>\n</li>\n<li><p>Inscription<br>可用于展示应用 change 和 new feature 信息<br>项目地址：<a href=\"https://github.com/MartinvanZ/Inscription\">https://github.com/MartinvanZ/Inscription</a>  </p>\n</li>\n<li><p>ActivityTransition<br>Activity 切换动画，包括渐变、flip、某个位置进入等等<br>项目地址：<a href=\"https://github.com/ophilbert/ActivityTransition\">https://github.com/ophilbert/ActivityTransition</a><br>文档介绍：<a href=\"https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true\">https://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true</a>  </p>\n</li>\n<li><p>EasyAndroidAnimations<br>针对 View 的各种动画<br>项目地址：<a href=\"https://github.com/2359media/EasyAndroidAnimations\">https://github.com/2359media/EasyAndroidAnimations</a>  </p>\n</li>\n<li><p>ViewAnimation<br>对android view 动画进行封装,实现起更简单，自带三种常见运动路径，其他的可自定义<br>项目地址：<a href=\"https://github.com/guohuanwen/ViewAniamtion\">https://github.com/guohuanwen/ViewAniamtion</a><br>APP 示例：QQ名片圈圈效果  </p>\n</li>\n<li><p>AndroidLoadingAnimation<br>多种android加载动画<br>项目地址：<a href=\"https://github.com/guohuanwen/AndroidLoadingAnimation\">https://github.com/guohuanwen/AndroidLoadingAnimation</a>  </p>\n</li>\n<li><p>android-lockpattern<br>Android 的图案密码解锁<br>项目地址：<a href=\"https://code.google.com/p/android-lockpattern/\">https://code.google.com/p/android-lockpattern/</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/爱早起/Android Lock Pattern 源码解析\">android-lockpattern</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=group.pals.android.lib.ui.lockpattern.demo\">https://play.google.com/store/apps/details?id=group.pals.android.lib.ui.lockpattern.demo</a><br>文档介绍：<a href=\"https://code.google.com/p/android-lockpattern/wiki/QuickUse\">https://code.google.com/p/android-lockpattern/wiki/QuickUse</a><br>APP 示例：Android 开机的图案密码解锁，支付宝的密码解锁  </p>\n</li>\n<li><p>PatternLock<br>另一个 Android 图案解锁库<br>项目地址：<a href=\"https://github.com/DreaminginCodeZH/PatternLock\">https://github.com/DreaminginCodeZH/PatternLock</a><br>Demo 地址：<a href=\"https://github.com/DreaminginCodeZH/PatternLock/raw/master/dist/sample.apk\">https://github.com/DreaminginCodeZH/PatternLock/raw/master/dist/sample.apk</a><br>APP 示例：Android 开机的图案密码解锁，支付宝的密码解锁  </p>\n</li>\n<li><p>RangeBar<br>类似于 SeekBar，不同的是可以选择一个范围内的值而不是单个值<br>项目地址：<a href=\"https://github.com/edmodo/range-bar\">https://github.com/edmodo/range-bar</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/range-bar-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/range-bar-demo.apk?raw=true</a>  </p>\n</li>\n<li><p>ChromeView<br>利用 Chromium 实现的 WebView，解决各个 Android 版本 WebView 不同的问题，同时利用最新 Chrome 代码<br>项目地址：<a href=\"https://github.com/pwnall/chromeview\">https://github.com/pwnall/chromeview</a>  </p>\n</li>\n<li><p>android-phased-seek-bar<br>支持预先定义状态的 SeekBar<br>项目地址：<a href=\"https://github.com/ademar111190/android-phased-seek-bar\">https://github.com/ademar111190/android-phased-seek-bar</a>  </p>\n</li>\n<li><p>Android Slider Preference Library<br>可添加到设置中的基于对话框的 RankBar 小部件<br>项目地址：<a href=\"https://github.com/jayschwa/AndroidSliderPreference\">https://github.com/jayschwa/AndroidSliderPreference</a>  </p>\n</li>\n<li><p>ShowcaseView library<br>用于高亮显示应用程序的特定部分，从而突出突出重点<br>项目地址：<a href=\"https://github.com/amlcurran/ShowcaseView\">https://github.com/amlcurran/ShowcaseView</a>  </p>\n</li>\n<li><p>android-segmented-control<br>Android 上的 Segmented Controls，相当于 RadioButton 组<br>项目地址：<a href=\"https://github.com/hoang8f/android-segmented-control\">https://github.com/hoang8f/android-segmented-control</a>  </p>\n</li>\n<li><p>Swipeable Cards<br>类似 Tinder 的卡片效果，可以加载图片并动画效果展示，向左滑动表示喜欢，向右表示不喜欢<br>项目地址：<a href=\"https://github.com/kikoso/Swipeable-Cards\">https://github.com/kikoso/Swipeable-Cards</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo\">https://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo</a>  </p>\n</li>\n<li><p>EdgeEffectOverride<br>改变 ScrollView, ListView, ExpandableListView, GridView, ViewPager 等滚动控件滚动到边缘的颜色效果<br>项目地址：<a href=\"https://github.com/AndroidAlliance/EdgeEffectOverride\">https://github.com/AndroidAlliance/EdgeEffectOverride</a>  </p>\n</li>\n<li><p>android-pinned-header-listviews<br>使 ExpandListView 的 Group 滑动到顶端时会固定不动直到另外一个 Group 到达顶端<br>项目地址：<a href=\"https://github.com/rtyley/android-pinned-header-listviews\">https://github.com/rtyley/android-pinned-header-listviews</a>  </p>\n</li>\n<li><p>AndroidSwipeLayout<br>滑动 Layout，支持单个 View，ListView，GridView<br>项目地址：<a href=\"https://github.com/daimajia/AndroidSwipeLayout\">https://github.com/daimajia/AndroidSwipeLayout</a><br>Demo 地址：<a href=\"https://github.com/daimajia/AndroidSwipeLayout/releases/download/v1.0.0/AndroidSwipeLayout-Demo-1.0.1-snapshot.apk\">Download Demo</a>  </p>\n</li>\n<li><p>DynamicCardLayout<br>在 Android 中实现的类似 Windows8 的瓷片布局<br>项目地址：<a href=\"https://github.com/dodola/DynamicCardLayout\">https://github.com/dodola/DynamicCardLayout</a>  </p>\n</li>\n<li><p>Emoticons-Keyboard<br>带表情情符号的自定义键盘<br>项目地址：<a href=\"https://github.com/chiragjain/Emoticons-Keyboard\">https://github.com/chiragjain/Emoticons-Keyboard</a>  </p>\n</li>\n<li><p>Android Typeface Helper<br>可以帮你轻松实现自定义字体的库<br>项目地址：<a href=\"https://github.com/norbsoft/android-typeface-helper\">https://github.com/norbsoft/android-typeface-helper</a>  </p>\n</li>\n<li><p>Android-Anim-Playground<br>几个动画效果，其中第二个基于 android-svg 的绘制效果非常好<br>项目地址：<a href=\"https://github.com/Tibolte/Android-Anim-Playground\">https://github.com/Tibolte/Android-Anim-Playground</a>  </p>\n</li>\n<li><p>AlertView<br>仿iOS的AlertViewController 几乎完美还原iOS 的 AlertViewController ，同时支持Alert和ActionSheet模式，每一个细节都是精雕细琢，并把api封装成懒到极致模式，一行代码就可以进行弹窗.<br>项目地址：<a href=\"https://github.com/saiwu-bigkoo/Android-AlertView\">https://github.com/saiwu-bigkoo/Android-AlertView</a>  </p>\n</li>\n<li><p>NiftyDialogEffects<br>支持自定义飞入动画样式的 Dialog<br>项目地址：<a href=\"https://github.com/sd6352051/NiftyDialogEffects\">https://github.com/sd6352051/NiftyDialogEffects</a><br>在线演示：<a href=\"http://tympanus.net/Development/ModalWindowEffects/\">http://tympanus.net/Development/ModalWindowEffects/</a>  </p>\n</li>\n<li><p>PostOffice<br>创建 Holo 及 Material Design 样式的 Dialog<br>项目地址：<a href=\"https://github.com/r0adkll/PostOffice\">https://github.com/r0adkll/PostOffice</a>  </p>\n</li>\n<li><p>Swipecards<br>类似 Tinder 的卡片效果，可以加载图片并动画效果展示，向左滑动表示喜欢，向右表示不喜欢，根据 Kikoso’s Swipeable-Cards 改造而来<br>项目地址：<a href=\"https://github.com/Diolor/Swipecards\">https://github.com/Diolor/Swipecards</a>  </p>\n</li>\n<li><p>SeekArc<br>圆形的 SeekBar<br>项目地址：<a href=\"https://github.com/TriggerTrap/SeekArc\">https://github.com/TriggerTrap/SeekArc</a>  </p>\n</li>\n<li><p>BlurDialogFragment<br>显示  DialogFragment 时背景模糊效果<br>项目地址：<a href=\"https://github.com/tvbarthel/BlurDialogFragment\">https://github.com/tvbarthel/BlurDialogFragment</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=fr.tvbarthel.lib.blurdialogfragment.sample\">https://play.google.com/store/apps/details?id=fr.tvbarthel.lib.blurdialogfragment.sample</a>  </p>\n</li>\n<li><p>range-seek-bar<br>随机值选取的 SeekBar<br>项目地址：<a href=\"https://github.com/yahoo/android-range-seek-bar\">https://github.com/yahoo/android-range-seek-bar</a>  </p>\n</li>\n<li><p>MaterialRangeBar<br>可以选择一个范围内的值而不是单个值的 SeekBar，RangeBar 的 Material Design 风格适配<br>项目地址：<a href=\"https://github.com/oli107/material-range-bar\">https://github.com/oli107/material-range-bar</a>  </p>\n</li>\n<li><p>MaterialList<br>Material Design 风格的 CardView<br>项目地址：<a href=\"https://github.com/dexafree/MaterialList\">https://github.com/dexafree/MaterialList</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.dexafree.materiallistviewexample\">https://play.google.com/store/apps/details?id=com.dexafree.materiallistviewexample</a>  </p>\n</li>\n<li><p>road-trip<br>设置 path 的各种动画效果，以及如何实现复杂路径动画，类似于 ios 中的指纹注册界面的指纹动画效果<br>项目地址：<a href=\"https://github.com/romainguy/road-trip\">https://github.com/romainguy/road-trip</a>  </p>\n</li>\n<li><p>dialogplus<br>一个简单的 Android 对话框，支持不同的弹出模式<br>项目地址：<a href=\"https://github.com/orhanobut/dialogplus\">https://github.com/orhanobut/dialogplus</a>  </p>\n</li>\n<li><p>FlowLayout<br>一个简单的流式布局，用法类似 LinearLayout，但是能够让子元素根据宽度自动换行<br>项目地址：<a href=\"https://github.com/LyndonChin/AndroidFlowLayout\">FLowLayout</a>  </p>\n</li>\n<li><p>CircleSeekbar<br>一个环形Seekbar组件,支持叠加复合使用<br>项目地址：<a href=\"https://github.com/feeeei/CircleSeekbar\">CircleSeekbar</a>  </p>\n</li>\n<li><p>FinestWebView<br>美麗的和可定制的Android的活動，顯示在一個應用程序的網頁。<br>项目地址: <a href=\"https://github.com/TheFinestArtist/FinestWebView-Android\">https://github.com/TheFinestArtist/FinestWebView-Android</a><br>Sample 地址: <a href=\"https://play.google.com/store/apps/details?id=com.thefinestartist.finestwebview.sample\">https://play.google.com/store/apps/details?id=com.thefinestartist.finestwebview.sample</a>  </p>\n</li>\n<li><p>YouTubePlayerActivity<br>只需通過一個URL來在新的活動播放YouTube視頻。它支持屏幕方向，媒體音量控制等。<br>项目地址: <a href=\"https://github.com/TheFinestArtist/YouTubePlayerActivity\">https://github.com/TheFinestArtist/YouTubePlayerActivity</a><br>Sample 地址: <a href=\"https://play.google.com/store/apps/details?id=com.thefinestartist.ytpa.sample\">https://play.google.com/store/apps/details?id=com.thefinestartist.ytpa.sample</a>  </p>\n</li>\n<li><p>material-camera<br>material风格的camera。能使camera使用起来更简单的库。<br>项目地址：<a href=\"https://github.com/afollestad/material-camera\">https://github.com/afollestad/material-camera</a>   </p>\n</li>\n<li><p>material-dialogs<br>各种material风格的dialog。<br>漂亮的的、易于使用的和可定制的Dialog API，你能够使用Material designed风格的Dialog到API 8。<br>项目地址：<a href=\"https://github.com/afollestad/material-dialogs\">https://github.com/afollestad/material-dialogs</a><br>Sample地址：<a href=\"https://github.com/afollestad/material-dialogs/blob/master/sample/sample.apk\">https://github.com/afollestad/material-dialogs/blob/master/sample/sample.apk</a>  </p>\n</li>\n<li><p>NotifyUtil<br>最常见的通知样式库<br>项目地址:<a href=\"https://github.com/wenmingvs/NotifyUtil\">https://github.com/wenmingvs/NotifyUtil</a><br>demo地址：<a href=\"https://github.com/wenmingvs/NotifyUtil#notifydemo\">https://github.com/wenmingvs/NotifyUtil#notifydemo</a>  </p>\n</li>\n<li><p>CanPhotos<br>使用fresco选取多张图片并可预览图片<br>项目地址：<a href=\"https://github.com/canyinghao/CanPhotos\">https://github.com/canyinghao/CanPhotos</a>   </p>\n</li>\n<li><p>CanDialog<br>仿照系统Dialog所写，继承于FrameLayout，添加一些动画，一些显示类型。<br>项目地址：<a href=\"https://github.com/canyinghao/CanDialog\">https://github.com/canyinghao/CanDialog</a>  </p>\n</li>\n</ol>\n<h2 id=\"第二部分-工具库\"><a href=\"#第二部分-工具库\" class=\"headerlink\" title=\"第二部分 工具库\"></a>第二部分 工具库</h2><p>主要包括那些不错的开发库，包括依赖注入框架、图片缓存、网络请求、数据库 ORM 建模、Android 公共库、Android 高版本向低版本兼容、多媒体相关及其他。  </p>\n<h3 id=\"一、依赖注入-DI\"><a href=\"#一、依赖注入-DI\" class=\"headerlink\" title=\"一、依赖注入 DI\"></a>一、依赖注入 DI</h3><p>通过依赖注入减少 View、服务、资源简化初始化，事件绑定等重复繁琐工作  </p>\n<ol>\n<li><p>AndroidAnnotations(Code Diet)<br>android 快速开发框架<br>项目地址：<a href=\"https://github.com/excilys/androidannotations\">https://github.com/excilys/androidannotations</a><br>文档介绍：<a href=\"https://github.com/excilys/androidannotations/wiki\">https://github.com/excilys/androidannotations/wiki</a><br>官网网址：<a href=\"http://androidannotations.org/\">http://androidannotations.org/</a><br>特点：(1) 依赖注入：包括 view，extras，系统服务，资源等等<br>(2) 简单的线程模型，通过 annotation 表示方法运行在 ui 线程还是后台线程<br>(3) 事件绑定：通过 annotation 表示 view 的响应事件，不用在写内部类<br>(4) REST 客户端：定义客户端接口，自动生成 REST 请求的实现<br>(5) 没有你想象的复杂：AndroidAnnotations 只是在在编译时生成相应子类<br>(6) 不影响应用性能：仅 50kb，在编译时完成，不会对运行时有性能影响。<br>其他：与 roboguice 的比较：roboguice 通过运行时读取 annotations 进行反射，所以可能影响应用性能，而 AndroidAnnotations 在编译时生成子类，所以对性能没有影响  </p>\n</li>\n<li><p>roboguice<br>帮你处理了很多代码异常，利用 annotation 使得更少的代码完成项目<br>项目地址：<a href=\"https://github.com/roboguice/roboguice\">https://github.com/roboguice/roboguice</a><br>文档介绍：<a href=\"https://github.com/roboguice/roboguice/wiki\">https://github.com/roboguice/roboguice/wiki</a>  </p>\n</li>\n<li><p>butterknife<br>利用 annotation 帮你快速完成 View 的初始化，减少代码<br>项目地址：<a href=\"https://github.com/JakeWharton/butterknife\">https://github.com/JakeWharton/butterknife</a><br>文档介绍：<a href=\"http://jakewharton.github.io/butterknife/\">http://jakewharton.github.io/butterknife/</a>  </p>\n</li>\n<li><p>Dagger<br>依赖注入，适用于 Android 和 Java<br>项目地址：<a href=\"https://github.com/square/dagger\">https://github.com/square/dagger</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/扔物线/Dagger 源码解析\">Dagger</a><br>文档介绍：<a href=\"http://square.github.io/dagger/\">http://square.github.io/dagger/</a>  </p>\n</li>\n<li><p>AutoParcel<br>注解自动生成Parcelable实现代码的库<br>项目地址：<a href=\"https://github.com/frankiesardo/auto-parcel\">https://github.com/frankiesardo/auto-parcel</a><br>这篇文章详细介绍了它的使用方法：<a href=\"https://passy.svbtle.com/simpler-android-apis-with-autoparcel\">AutoParcel</a><br>作者认为使用AutoParcel的好处是，可以简化构造函数，方便IDE代码自动完成，方便测试，前向兼容，生成不可变的对象。<br>文档介绍：<a href=\"https://github.com/frankiesardo/auto-parcel\">https://github.com/frankiesardo/auto-parcel</a></p>\n</li>\n</ol>\n<h3 id=\"二、图片缓存\"><a href=\"#二、图片缓存\" class=\"headerlink\" title=\"二、图片缓存\"></a>二、图片缓存</h3><ol>\n<li><p>Android-Universal-Image-Loader<br>图片缓存，目前使用最广泛的图片缓存，支持主流图片缓存的绝大多数特性。<br>项目地址：<a href=\"https://github.com/nostra13/Android-Universal-Image-Loader\">https://github.com/nostra13/Android-Universal-Image-Loader</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/huxian99/Android Universal Image Loader 源码分析\">Android-Universal-Image-Loader</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/universal-imageloader-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/universal-imageloader-demo.apk?raw=true</a><br>文档介绍：<a href=\"http://www.intexsoft.com/blog/item/74-universal-image-loader-part-3.html\">http://www.intexsoft.com/blog/item/74-universal-image-loader-part-3.html</a>  </p>\n</li>\n<li><p>picasso<br>square 开源的图片缓存<br>项目地址：<a href=\"https://github.com/square/picasso\">https://github.com/square/picasso</a><br>文档介绍：<a href=\"http://square.github.io/picasso/\">http://square.github.io/picasso/</a><br>特点：(1)可以自动检测 adapter 的重用并取消之前的下载<br>(2)图片变换<br>(3)可以加载本地资源<br>(4)可以设置占位资源<br>(5)支持 debug 模式  </p>\n</li>\n<li><p>Cube ImageLoader<br>阿里巴巴一淘使用的图片加载，综合了 Android-Universal-Image-Loader 和 square 等组件优点，简单易用，良好的中文文档支持<br>项目地址：<a href=\"https://github.com/etao-open-source/cube-sdk\">https://github.com/etao-open-source/cube-sdk</a><br>Demo 地址：<a href=\"https://github.com/liaohuqiu/cube-sdk/raw/master/cube-sdk-sample.apk\">https://github.com/liaohuqiu/cube-sdk/raw/master/cube-sdk-sample.apk</a><br>文档介绍：<a href=\"http://cube-sdk.liaohuqiu.net/\">http://cube-sdk.liaohuqiu.net/</a>  </p>\n</li>\n<li><p>fresco<br>一款强大的图片缓存工具，由 Facebook 开发<br>项目地址：<a href=\"https://github.com/facebook/fresco\">https://github.com/facebook/fresco</a><br>文档介绍：<a href=\"http://frescolib.org/\">http://frescolib.org/</a><br>特点：(1) 两个内存缓存加上磁盘缓存构成了三级缓存<br>(2) 支持流式，可以类似网页上模糊渐进式显示图片<br>(3) 对多帧动画图片支持更好，如 Gif、WebP<br>(4) 更多样的显示，如圆角、进度条、点击重试、自定义对焦点<br>(5) 更多样的加载，如支持 EXIF、全面支持 WebP<br>(6) 支持 Android 2.3+  </p>\n</li>\n<li><p>Glide<br>Glide 是一个 android 平台上的快速和高效的开源的多媒体资源管理库,提供 多媒体文件的压缩,内存和磁盘缓存, 资源池的接口。<br>它可以最大性能地在 Android 设备上读取、解码、显示图片和视频。Glide 可以将远程的图片、视频、动画图片等缓存在设备本地便于提高用户浏览图片的流畅体验。<br>项目地址：<a href=\"https://github.com/bumptech/glide\">https://github.com/bumptech/glide</a><br>特点：<br>(1) GIF 动画的解码<br>(2) 本地视频剧照的解码<br>(3) 支持缩略图<br>(4) Activity 生命周期的集成<br>(5) 转码的支持<br>(6) 动画的支持<br>(7) OkHttp 和 Volley 的支持  </p>\n</li>\n</ol>\n<h3 id=\"三、网络请求\"><a href=\"#三、网络请求\" class=\"headerlink\" title=\"三、网络请求\"></a>三、网络请求</h3><ol>\n<li><p>Volley<br>Google 提供的网络通信库，使得网络请求更简单、更快速<br>项目地址：<a href=\"https://android.googlesource.com/platform/frameworks/volley\">https://android.googlesource.com/platform/frameworks/volley</a><br>文档介绍：<a href=\"http://commondatastorage.googleapis.com/io-2013/presentations/110%20-%20Volley-%20Easy,%20Fast%20Networking%20for%20Android.pdf\">http://commondatastorage.googleapis.com/io-2013/presentations/110%20-%20Volley-%20Easy,%20Fast%20Networking%20for%20Android.pdf</a>  </p>\n</li>\n<li><p>Asynchronous Http Client for Android<br>Android 异步 Http 请求<br>项目地址：<a href=\"https://github.com/loopj/android-async-http\">https://github.com/loopj/android-async-http</a><br>文档介绍：<a href=\"http://loopj.com/android-async-http/\">http://loopj.com/android-async-http/</a><br>特点：(1) 在匿名回调中处理请求结果<br>(2) 在 UI 线程外进行 http 请求<br>(3) 文件断点上传<br>(4) 智能重试<br>(5) 默认 gzip 压缩<br>(6) 支持解析成 Json 格式<br>(7) 可将 Cookies 持久化到 SharedPreferences  </p>\n</li>\n<li><p>android-query<br>异步加载，更少代码完成 Android 加载<br>项目地址：<a href=\"https://github.com/androidquery/androidquery\">https://github.com/androidquery/androidquery</a> 或 <a href=\"https://code.google.com/p/android-query/\">https://code.google.com/p/android-query/</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.androidquery\">https://play.google.com/store/apps/details?id=com.androidquery</a><br>文档介绍：<a href=\"https://code.google.com/p/android-query/#Why_AQuery?\">https://code.google.com/p/android-query/#Why_AQuery?</a><br>特点：<a href=\"https://code.google.com/p/android-query/#Why_AQuery?\">https://code.google.com/p/android-query/#Why_AQuery?</a>  </p>\n</li>\n<li><p>Async Http Client<br>Java 异步 Http 请求<br>项目地址：<a href=\"https://github.com/AsyncHttpClient/async-http-client\">https://github.com/AsyncHttpClient/async-http-client</a><br>文档介绍：<a href=\"http://sonatype.github.io/async-http-client/\">http://sonatype.github.io/async-http-client/</a>  </p>\n</li>\n<li><p>Ion<br>支持图片、json、http post 等异步请求<br>项目地址：<a href=\"https://github.com/koush/ion\">https://github.com/koush/ion</a><br>文档介绍：<a href=\"https://github.com/koush/ion#more-examples\">https://github.com/koush/ion#more-examples</a>  </p>\n</li>\n<li><p>Http Request<br>项目地址：<a href=\"https://github.com/kevinsawicki/http-request\">https://github.com/kevinsawicki/http-request</a><br>文档介绍：<a href=\"https://github.com/kevinsawicki/http-request#examples\">https://github.com/kevinsawicki/http-request#examples</a>  </p>\n</li>\n<li><p>okhttp<br>square 开源的 http 工具类<br>项目地址：<a href=\"https://github.com/square/okhttp\">https://github.com/square/okhttp</a><br>文档介绍：<a href=\"http://square.github.io/okhttp/\">http://square.github.io/okhttp/</a><br>特点：(1) 支持 SPDY( <a href=\"http://zh.wikipedia.org/wiki/SPDY\">http://zh.wikipedia.org/wiki/SPDY</a> )协议。SPDY 协议是 Google 开发的基于传输控制协议的应用层协议，通过压缩，多路复用(一个 TCP 链接传送网页和图片等资源)和优先级来缩短加载时间。<br>(2) 如果 SPDY 不可用，利用连接池减少请求延迟<br>(3) Gzip 压缩<br>(4) Response 缓存减少不必要的请求  </p>\n</li>\n<li><p>Retrofit<br>RESTFUL API 设计<br>项目地址：<a href=\"https://github.com/square/retrofit\">https://github.com/square/retrofit</a><br>文档介绍：<a href=\"http://square.github.io/retrofit/\">http://square.github.io/retrofit/</a>  </p>\n</li>\n<li><p>RoboSpice<br>Android 异步网络请求工具，支持缓存、REST 等等<br>项目地址：<a href=\"https://github.com/stephanenicolas/robospice\">https://github.com/stephanenicolas/robospice</a><br>Demo 地址：<a href=\"https://github.com/stephanenicolas/RoboDemo/downloads\">https://github.com/stephanenicolas/RoboDemo/downloads</a>  </p>\n</li>\n<li><p>TwistVolley<br>TwistVolley 是对 Volley 的一个封装库。提供类似 Picasso 一样的串联式 API。使得使用 Volley 更加方便。<br>项目地址：<a href=\"https://github.com/TwistedEquations/TwistVolley\">https://github.com/TwistedEquations/TwistVolley</a>  </p>\n</li>\n</ol>\n<h3 id=\"四、数据库-orm-工具包\"><a href=\"#四、数据库-orm-工具包\" class=\"headerlink\" title=\"四、数据库 orm 工具包\"></a>四、数据库 orm 工具包</h3><p>orm 的 db 工具类，简化建表、查询、更新、插入、事务、索引的操作 </p>\n<ol>\n<li><p>greenDAO<br>Android Sqlite orm 的 db 工具类<br>项目地址：<a href=\"https://github.com/greenrobot/greenDAO\">https://github.com/greenrobot/greenDAO</a><br>文档介绍：<a href=\"http://greendao-orm.com/documentation/\">http://greendao-orm.com/documentation/</a><br>官网网址：<a href=\"http://greendao-orm.com/\">http://greendao-orm.com/</a><br>特点：(1) 性能佳<br>(2) 简单易用的 API<br>(3) 内存小好小<br>(4) 库大小小  </p>\n</li>\n<li><p>GreenDaoUpgradeHelper<br>greenDAO的数据库升级帮助类，只需一行代码解决数据库升级<br>项目地址：<a href=\"https://github.com/yuweiguocn/GreenDaoUpgradeHelper\">https://github.com/yuweiguocn/GreenDaoUpgradeHelper</a></p>\n</li>\n<li><p>ActiveAndroid<br>Android Sqlite orm 的 db 工具类<br>项目地址：<a href=\"https://github.com/pardom/ActiveAndroid\">https://github.com/pardom/ActiveAndroid</a><br>文档介绍：<a href=\"https://github.com/pardom/ActiveAndroid/wiki/_pages\">https://github.com/pardom/ActiveAndroid/wiki/_pages</a>  </p>\n</li>\n<li><p>Sprinkles<br>Android Sqlite orm 的 db 工具类，比较显著的特点就是配合 <a href=\"https://github.com/square/retrofit\">https://github.com/square/retrofit</a> 能保存从服务器获取的数据<br>项目地址：<a href=\"https://github.com/emilsjolander/sprinkles\">https://github.com/emilsjolander/sprinkles</a><br>文档介绍：<a href=\"http://emilsjolander.github.io/blog/2013/12/18/android-with-sprinkles/\">http://emilsjolander.github.io/blog/2013/12/18/android-with-sprinkles/</a>  </p>\n</li>\n<li><p>Realm<br>移动端的数据库，适用于 Phone、Tablet、Wearable，支持 ORM，线程安全、支持连表及数据库加密，比 SQLite 性能更好<br>项目地址：<a href=\"https://github.com/realm/realm-java\">https://github.com/realm/realm-java</a><br>文档介绍：<a href=\"http://realm.io/docs/java/0.72.0/\">http://realm.io/docs/java/0.72.0/</a>  </p>\n</li>\n<li><p>ormlite-android<br>项目地址：<a href=\"https://github.com/j256/ormlite-android\">https://github.com/j256/ormlite-android</a><br>文档介绍：<a href=\"http://ormlite.com/sqlite_java_android_orm.shtml\">http://ormlite.com/sqlite_java_android_orm.shtml</a>  </p>\n</li>\n<li><p>Schematic<br>根据 SQLite 生成 ContentProvider<br>项目地址：<a href=\"https://github.com/SimonVT/schematic\">https://github.com/SimonVT/schematic</a>  </p>\n</li>\n<li><p>DBFlow<br>Android SQLite ORM 工具库。综合了 Active Android, Schematic, Ollie,Sprinkles 等库的优点；通过注解实现，性能好；能生成 ContentProvider。<br>项目地址：<a href=\"https://github.com/Raizlabs/DBFlow\">https://github.com/Raizlabs/DBFlow</a><br>文档介绍：<a href=\"https://github.com/Raizlabs/DBFlow#usage-docs\">https://github.com/Raizlabs/DBFlow#usage-docs</a>  </p>\n</li>\n<li><p>SnappyDB<br>SnappyDB是一个key-value数据库，非常流行的NoSQL数据库。<br>项目地址：<a href=\"https://github.com/nhachicha/SnappyDB\">https://github.com/nhachicha/SnappyDB</a><br>演示Demo：<a href=\"https://play.google.com/store/apps/details?id=com.snappydb.snippets.app\">https://play.google.com/store/apps/details?id=com.snappydb.snippets.app</a></p>\n</li>\n</ol>\n<h3 id=\"五、Android-公共库\"><a href=\"#五、Android-公共库\" class=\"headerlink\" title=\"五、Android 公共库\"></a>五、Android 公共库</h3><ol>\n<li><p>Guava<br>Google 的基于 java1.6 的类库集合的扩展项目，包括 collections, caching, primitives support, concurrency libraries, common annotations, string processing, I/O 等等. 这些高质量的 API 可以使你的 JAVa 代码更加优雅，更加简洁<br>项目地址：<a href=\"https://code.google.com/p/guava-libraries/\">https://code.google.com/p/guava-libraries/</a><br>文档介绍：<a href=\"https://code.google.com/p/guava-libraries/wiki/GuavaExplained\">https://code.google.com/p/guava-libraries/wiki/GuavaExplained</a>  </p>\n</li>\n<li><p>AndroidCommon<br>Android 公共库<br>项目地址：<a href=\"https://github.com/Trinea/AndroidCommon\">https://github.com/Trinea/AndroidCommon</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=cn.trinea.android.demo\">https://play.google.com/store/apps/details?id=cn.trinea.android.demo</a><br>文档介绍：<a href=\"http://www.trinea.cn/android/android-common-lib/\">http://www.trinea.cn/android/android-common-lib/</a><br>包括：a. ImageCache 图片缓存，包含内存和 Sdcard 缓存<br><a href=\"http://www.trinea.cn/android/android-imagecache/\">http://www.trinea.cn/android/android-imagecache/</a><br>特点：(1)支持预取新图片，支持等待队列<br>(2)包含二级缓存，可自定义文件名保存规则<br>(3)可选择多种缓存算法(FIFO、LIFO、LRU、MRU、LFU、MFU 等 13 种)或自定义缓存算法<br>(4)可方便的保存及初始化恢复数据<br>(5)支持不同类型网络处理<br>(6)可根据系统配置初始化缓存等  </p>\n</li>\n<li><p>HttpCache Http 缓存<br>文档介绍：<a href=\"http://www.trinea.cn/android/android-http-cache\">http://www.trinea.cn/android/android-http-cache</a><br>特点是：(1) 根据 cache-control、expires 缓存 http 请求<br>(2) 支持同步、异步 Http 请求<br>(3) 在匿名回调中处理请求结果<br>(4) 在 UI 线程外进行 http 请求<br>(5) 默认 gzip 压缩<br>(2) 公共 View(下拉及底部加载更多 ListView、底部加载更多 ScrollView、滑动一页 Gallery)<br>(3) Android 常用工具类(网络、下载、Android 资源操作、shell、文件、Json、随机数、Collection 等等)  </p>\n</li>\n<li><p>DropDownListView 下拉刷新及滑动到底部加载更多 ListView<br>文档介绍：<a href=\"http://www.trinea.cn/android/dropdown-to-refresh-and-bottom-load-more-listview/\">http://www.trinea.cn/android/dropdown-to-refresh-and-bottom-load-more-listview/</a>  </p>\n</li>\n<li><p>shipfaster<br>整合了 Dagger Otto Retrofit Robolectric Picasso OkHttp，方便快速开发<br>项目地址：<a href=\"https://github.com/pyricau/shipfaster\">https://github.com/pyricau/shipfaster</a>  </p>\n</li>\n<li><p>CleanAndroidCode<br>整合了 Dagger Otto AndroidAnnotations，方便快速开发<br>项目地址：<a href=\"https://github.com/pyricau/CleanAndroidCode\">https://github.com/pyricau/CleanAndroidCode</a>  </p>\n</li>\n<li><p>xUtils<br>基于 Afinal，包含 DbUtils、ViewUtils、HttpUtils、BitmapUtils 四大模块，可用于快速开发<br>项目地址：<a href=\"https://github.com/wyouflf/xUtils\">https://github.com/wyouflf/xUtils</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/Caij/xUtils 源码解析\">xUtils</a>  </p>\n</li>\n<li><p>Afinal<br>Afinal 是一个 android 的 ioc，orm 框架，内置了四大模块功能：FinalAcitivity,FinalBitmap,FinalDb,FinalHttp。通过 finalActivity，我们可以通过注解的方式进行绑定 ui 和事件。通过 finalBitmap，我们可以方便的加载 bitmap 图片，而无需考虑 oom 等问题。通过 finalDB 模块，我们一行代码就可以对 android 的 sqlite 数据库进行增删改查。通过 FinalHttp 模块，我们可以以 ajax 形式请求 http 数据<br>项目地址：<a href=\"https://github.com/yangfuhai/afinal\">https://github.com/yangfuhai/afinal</a><br>官网网址：<a href=\"http://www.afinal.org\">http://www.afinal.org</a>  </p>\n</li>\n<li><p>UltimateAndroid<br>UltimateAndroid 是一个快速开发 Android 应用的框架，框架目前主要包含的功能有 View Injection,ORM,异步网络请求和图片加载，自动化脚本测试,磁盘 LRU 等功能.同时提供了类似于 TripleDes、Webview 快速设置、Md5 处理、String 处理,Https 处理等常用工具类，还有超过 100 多种 UI 控件效果。<br>项目地址：<a href=\"https://github.com/cymcsg/UltimateAndroid\">https://github.com/cymcsg/UltimateAndroid</a><br>官网网址：<a href=\"http://blog.marshalchen.com/UltimateAndroid/\">http://blog.marshalchen.com/UltimateAndroid/</a>  </p>\n</li>\n<li><p>SAF<br>SAF(Simple Android Framework)是一个简单的 android 框架，它为开发 Android app 提供了基础性组件。<br>项目地址：<a href=\"https://github.com/fengzhizi715/SAF\">https://github.com/fengzhizi715/SAF</a><br>官网网址：<a href=\"http://www.salesuite.cn/\">http://www.salesuite.cn/</a><br>包括：(1)Event Bus(事件总线)<br>(2) Rest Client(http 的框架)<br>(3) Image Cache(图片缓存)<br>(4) Dependency Injection(依赖注入)<br>(5) Sqlite ORM(sqlite 的 orm)<br>(6) Router(Activity、Fragment 的 Router)<br>(7) Utils(各种常用的工具类)  </p>\n</li>\n<li><p>Barber<br>Custom View 神器。通过简单的注解帮助你大大减少 Custom View 中的代码量。由于和 ButterKnife 一样使用了 Annotation Proccessor ，所以对程序性能没有影响。<br>项目地址：<a href=\"https://github.com/hzsweers/barber\">https://github.com/hzsweers/barber</a>  </p>\n</li>\n<li><p>device-year-class<br>A library that analyzes an Android device’s specifications and calculates which year the device would be considered “high end”.(facebook 开发的检测手机主流配置工具)<br>项目地址：<a href=\"https://github.com/facebook/device-year-class\">https://github.com/facebook/device-year-class</a>  </p>\n</li>\n<li><p>RxAndroid<br>对RxJava在Android上的扩展，使得Android上也很容易实现reactive components，简化线程操作，从而写出很漂亮的代码。<br>项目地址：<a href=\"https://github.com/ReactiveX/RxAndroid\">https://github.com/ReactiveX/RxAndroid</a><br>文档介绍：<a href=\"http://gank.io/post/560e15be2dca930e00da1083\">给Android 开发者的 RxJava 详解</a>  </p>\n</li>\n<li><p>MultiImageSelector<br>一个本地图片选择器，支持图片的单选和多选，直接返回所选图片的路径。<br>项目地址：<a href=\"https://github.com/lovetuzitong/MultiImageSelector.git\">https://github.com/lovetuzitong/MultiImageSelector.git</a> </p>\n</li>\n</ol>\n<h3 id=\"六、Android-高版本向低版本兼容\"><a href=\"#六、Android-高版本向低版本兼容\" class=\"headerlink\" title=\"六、Android 高版本向低版本兼容\"></a>六、Android 高版本向低版本兼容</h3><ol>\n<li><p>Nine Old Androids<br>将 Android 3.0(Honeycomb)所有动画 API(ObjectAnimator ValueAnimator 等)兼容到 Android1.0<br>项目地址：<a href=\"https://github.com/JakeWharton/NineOldAndroids\">https://github.com/JakeWharton/NineOldAndroids</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/Mr.Simple/NineOldAnimations 源码解析\">Nine Old Androids</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.jakewharton.nineoldandroids.sample\">https://play.google.com/store/apps/details?id=com.jakewharton.nineoldandroids.sample</a><br>文档介绍：<a href=\"http://nineoldandroids.com/\">http://nineoldandroids.com/</a>  </p>\n</li>\n<li><p>HoloEverywhere<br>将 Android 3.0 的 Holo 主题兼容到 Android2.1++<br>项目地址：<a href=\"https://github.com/Prototik/HoloEverywhere\">https://github.com/Prototik/HoloEverywhere</a><br>Demo 地址：<a href=\"https://raw.github.com/Prototik/HoloEverywhere/repo/org/holoeverywhere/demo/2.1.0/demo-2.1.0.apk\">https://raw.github.com/Prototik/HoloEverywhere/repo/org/holoeverywhere/demo/2.1.0/demo-2.1.0.apk</a><br>文档介绍：<a href=\"http://android-developers.blogspot.com/2012/01/holo-everywhere.html\">http://android-developers.blogspot.com/2012/01/holo-everywhere.html</a>  </p>\n</li>\n<li><p>SherlockNavigationDrawer<br>将 Android NavigationDrawer 和 ActionbarSherlock 结合，解决 4.0 以下 NavigationDrawer 的适配问题<br>项目地址：<a href=\"https://github.com/tobykurien/SherlockNavigationDrawer\">https://github.com/tobykurien/SherlockNavigationDrawer</a><br>文档介绍：<a href=\"http://developer.android.com/training/implementing-navigation/nav-drawer.html\">http://developer.android.com/training/implementing-navigation/nav-drawer.html</a>  </p>\n</li>\n<li><p>Notifications4EveryWhere<br>将 Android 4.1 的 Notification 兼容到 Android2.2++<br>项目地址：<a href=\"https://github.com/youxiachai/Notifications4EveryWhere\">https://github.com/youxiachai/Notifications4EveryWhere</a>  </p>\n</li>\n<li><p>Android Switch Widget Backport<br>将 Android Switch 和 SwitchPreference 的兼容到 Android2.1++<br>项目地址：<a href=\"https://github.com/BoD/android-switch-backport\">https://github.com/BoD/android-switch-backport</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=org.jraf.android.backport.switchwidget.sample\">https://play.google.com/store/apps/details?id=org.jraf.android.backport.switchwidget.sample</a><br>文档介绍：<a href=\"https://github.com/BoD/android-switch-backport#using-the-switch\">https://github.com/BoD/android-switch-backport#using-the-switch</a>  </p>\n</li>\n<li><p>android-datepicker<br>将 Android 4.0 的 datepicker 兼容到 Android2.2++<br>项目地址：<a href=\"https://github.com/SimonVT/android-datepicker\">https://github.com/SimonVT/android-datepicker</a>  </p>\n</li>\n<li><p>Transitions Everywhere<br>Android 4.4 的 Transitions API 兼容到 Android 2.2 以上<br>项目地址：<a href=\"https://github.com/andkulikov/transitions-everywhere\">https://github.com/andkulikov/transitions-everywhere</a>  </p>\n</li>\n<li><p>KShareViewActivityManager<br>一个兼容Android 5.0 以下Shared Element Transition （页面间共享元素位移动画）库<br>项目地址：<a href=\"https://github.com/kot32go/KShareViewActivityManager\">https://github.com/kot32go/KShareViewActivityManager</a>  </p>\n</li>\n</ol>\n<h3 id=\"七、多媒体相关\"><a href=\"#七、多媒体相关\" class=\"headerlink\" title=\"七、多媒体相关\"></a>七、多媒体相关</h3><ol>\n<li><p>cocos2d-x<br>跨平台的 2d 游戏框架，支持 Android、IOS、Linux、Windows 等众多平台<br>项目地址：<a href=\"https://github.com/cocos2d/cocos2d-x\">https://github.com/cocos2d/cocos2d-x</a><br>文档介绍：<a href=\"http://www.cocos2d-x.org/wiki\">http://www.cocos2d-x.org/wiki</a><br>官网网址：<a href=\"http://www.cocos2d-x.org/\">http://www.cocos2d-x.org/</a>  </p>\n</li>\n<li><p>JustWeEngine<br>Android的轻量级游戏框架，能大大缩减编写原生游戏的代码量和难度，仍在持续更新中。<br>项目地址: <a href=\"https://github.com/lfkdsk/JustWeEngine\">https://github.com/lfkdsk/JustWeEngine</a><br>Demo地址: <a href=\"https://github.com/lfkdsk/EngineDemo\">https://github.com/lfkdsk/EngineDemo</a>  </p>\n</li>\n<li><p>Vitamio<br>是一款 Android 与 iOS 平台上的全能多媒体开发框架<br>项目地址：<a href=\"https://github.com/yixia/VitamioBundle\">https://github.com/yixia/VitamioBundle</a><br>网站介绍：<a href=\"http://www.vitamio.org/docs/\">http://www.vitamio.org/docs/</a><br>特点：(1) 全面支持硬件解码与 GPU 渲染<br>(2) 能够流畅播放 720P 甚至 1080P 高清 MKV，FLV，MP4，MOV，TS，RMVB 等常见格式的视频<br>(3) 在 Android 与 iOS 上跨平台支持 MMS, RTSP, RTMP, HLS(m3u8)等常见的多种视频流媒体协议，包括点播与直播。 </p>\n</li>\n<li><p>VDPlayerSDK<br>最容易集成的开源播放器组件，支持直播，支持软硬解切换，支持清晰度切换<br>项目地址：<a href=\"https://github.com/SinaVDDeveloper/\">https://github.com/SinaVDDeveloper/</a><br>Demo 地址：<a href=\"https://github.com/SinaVDDeveloper/demo\">https://github.com/SinaVDDeveloper/demo</a><br>文档介绍：<a href=\"https://github.com/SinaVDDeveloper/sinavideo_playersdk\">https://github.com/SinaVDDeveloper/sinavideo_playersdk</a><br>特点：<br>(1) 使用自定义控件方式提供播放器UI，不需要视频相关知识，能编写android应用就能使用<br>(2) 软硬解切换、点播直播支持<br>(3) 解码内核小于4M，更方便集成到非专业视频app中<br>(4) 修正一些vitaimio的问题，比如m3u8可以拖动等等</p>\n</li>\n<li><p>VideoPlayerManager<br>帮助实现VideoPlayer控制，使得它更容易使用ListView和recyclerview。它还可以跟踪滚动列表中可见的项。当列表中的新项可见域最大时，该库给出了接口来跟踪它。<br>项目地址：<a href=\"https://github.com/danylovolokh/VideoPlayerManager\">https://github.com/danylovolokh/VideoPlayerManager</a><br>文档介绍：<a href=\"https://medium.com/@v.danylo/implementing-video-playback-in-a-scrolled-list-listview-recyclerview-d04bc2148429#.hs5n0geqn\">https://medium.com/@v.danylo/implementing-video-playback-in-a-scrolled-list-listview-recyclerview-d04bc2148429#.hs5n0geqn</a>  </p>\n</li>\n<li><p>UniversalVideoView<br>Android上定义播放器控件,支持自定义控制UI, 全屏播放, 重力感应自动切换横竖屏.<br>项目地址：<a href=\"https://github.com/linsea/UniversalVideoView\">https://github.com/linsea/UniversalVideoView</a>  </p>\n</li>\n<li><p>PhotoProcessing<br>利用 ndk 处理图片库，支持 Instafix、Ansel、Testino、XPro、Retro、BW、Sepia、Cyano、Georgia、Sahara、HDR、Rotate(旋转)、Flip(翻转)等各种特效<br>项目地址：<a href=\"https://github.com/lightbox/PhotoProcessing\">https://github.com/lightbox/PhotoProcessing</a><br>Demo 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/photo-processing.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/photo-processing.apk?raw=true</a>  </p>\n</li>\n<li><p>Android StackBlur<br>图片模糊效果工具类<br>项目地址：<a href=\"https://github.com/kikoso/android-stackblur\">https://github.com/kikoso/android-stackblur</a><br>Demo 地址：<a href=\"https://github.com/kikoso/android-stackblur/blob/master/StackBlurDemo/bin/StackBlurDemo.apk?raw=true\">https://github.com/kikoso/android-stackblur/blob/master/StackBlurDemo/bin/StackBlurDemo.apk?raw=true</a><br>文档介绍：<a href=\"https://github.com/kikoso/android-stackblur#usage\">https://github.com/kikoso/android-stackblur#usage</a>  </p>\n</li>\n<li><p>Bitmap Smart Clipping using OpenCV<br>图片智能裁剪保留重要部分显示<br>项目地址：<a href=\"https://github.com/beartung/tclip-android\">https://github.com/beartung/tclip-android</a><br>利用淘宝的 <a href=\"http://code.taobao.org/p/tclip/\">http://code.taobao.org/p/tclip/</a> 库完成<br>一淘玩客正在使用的图片裁剪，自动识别图片中的重要区域，并且在图片裁剪时保留重要区域<br>特点：(1). 能进行人脸识别。图片中有人脸，将自动视为人脸区域为重要区域，将不会被裁剪掉<br>(2).自动其它重要区域。如果图片中未识别出人脸，则会根据特征分布计算出重区域  </p>\n</li>\n<li><p>Cropper<br>图片局部剪切工具，可触摸控制选择区域或旋转<br>项目地址：<a href=\"https://github.com/edmodo/cropper\">https://github.com/edmodo/cropper</a><br>文档介绍：<a href=\"https://github.com/edmodo/cropper/wiki\">https://github.com/edmodo/cropper/wiki</a>  </p>\n</li>\n<li><p>uCrop<br>Yalantis 出品的强大的图片裁剪库 ，支持缩放，旋转图片，支持各种比例的裁剪框<br>项目地址：<a href=\"https://github.com/Yalantis/uCrop\">https://github.com/Yalantis/uCrop</a>  </p>\n</li>\n<li><p>android-crop<br>图片裁剪 Activity<br>项目地址：<a href=\"https://github.com/jdamcd/android-crop\">https://github.com/jdamcd/android-crop</a>  </p>\n</li>\n<li><p>TileView<br>可分块显示大图，支持 2D 拖动、双击、双指放大、双指捏合<br>项目地址：<a href=\"https://github.com/moagrius/TileView\">https://github.com/moagrius/TileView</a><br>Demo 地址：<a href=\"http://moagrius.github.io/TileView/TileViewDemo.apk\">http://moagrius.github.io/TileView/TileViewDemo.apk</a>  </p>\n</li>\n<li><p>BlurEffectForAndroidDesign<br>图片模糊效果<br>项目地址：<a href=\"https://github.com/PomepuyN/BlurEffectForAndroidDesign\">https://github.com/PomepuyN/BlurEffectForAndroidDesign</a>  </p>\n</li>\n<li><p>android-eye<br>PC 端网页查看同一局域网内的手机摄像头内容，可以用来监控哦<br>项目地址：<a href=\"https://github.com/Teaonly/android-eye\">https://github.com/Teaonly/android-eye</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=teaonly.droideye\">https://play.google.com/store/apps/details?id=teaonly.droideye</a>  </p>\n</li>\n<li><p>libpng for Android<br>PNG 图片的 jni 库，支持几乎 png 的所有特性<br>项目地址：<a href=\"https://github.com/julienr/libpng-android\">https://github.com/julienr/libpng-android</a><br>文档介绍：<a href=\"http://www.libpng.org/pub/png/libpng.html\">http://www.libpng.org/pub/png/libpng.html</a>  </p>\n</li>\n<li><p>android-gpuimage<br>基于 GPU 的图片滤镜<br>项目地址：<a href=\"https://github.com/CyberAgent/android-gpuimage\">https://github.com/CyberAgent/android-gpuimage</a>  </p>\n</li>\n<li><p>AndroidFaceCropper<br>图片脸部自动识别，将识别后的局部图片返回<br>项目地址：<a href=\"https://github.com/lafosca/AndroidFaceCropper\">https://github.com/lafosca/AndroidFaceCropper</a>  </p>\n</li>\n<li><p>Android Video Crop<br>利用 TextureView 播放和剪切视频，类似 ImageView.setScaleType<br>项目地址：<a href=\"https://github.com/dmytrodanylyk/android-video-crop\">https://github.com/dmytrodanylyk/android-video-crop</a><br>Demo 地址：<a href=\"https://github.com/lafosca/AndroidFaceCropper/releases/download/1.0/FaceCropper-sample-debug-unaligned.apk\">https://github.com/lafosca/AndroidFaceCropper/releases/download/1.0/FaceCropper-sample-debug-unaligned.apk</a>  </p>\n</li>\n<li><p>svg-android<br>Android Svg 矢量图形支持<br>项目地址：<a href=\"https://github.com/japgolly/svg-android\">https://github.com/japgolly/svg-android</a> <a href=\"https://github.com/japgolly/svg-android\">https://github.com/japgolly/svg-android</a>  </p>\n</li>\n<li><p>Android Visualizer<br>从 Android MediaPlayer 获得音频，然后像 iTunes 及 WinAmp 一样展示音轨<br>项目地址：<a href=\"https://github.com/felixpalmer/android-visualizer\">https://github.com/felixpalmer/android-visualizer</a>  </p>\n</li>\n<li><p>ExoPlayer<br>包括仪表板和 SmoothStreaming 自适应回放，缓存持久化和自定义渲染器，方便自定义和扩展，并且可以通过应用商店更新<br>项目地址：<a href=\"https://github.com/google/ExoPlayer\">https://github.com/google/ExoPlayer</a>  </p>\n</li>\n<li><p>DanmakuFlameMaster<br>android 上开源弹幕解析绘制引擎项目<br>项目地址：<a href=\"https://github.com/ctiao/DanmakuFlameMaster\">https://github.com/ctiao/DanmakuFlameMaster</a>  </p>\n</li>\n<li><p>OpenDanmaku<br>android 上一个轻量级的更简单的开源弹幕控件<br>项目地址：<a href=\"https://github.com/linsea/OpenDanmaku\">https://github.com/linsea/OpenDanmaku</a>  </p>\n</li>\n</ol>\n<h3 id=\"八、事件总线-订阅者模式\"><a href=\"#八、事件总线-订阅者模式\" class=\"headerlink\" title=\"八、事件总线(订阅者模式)\"></a>八、事件总线(订阅者模式)</h3><p>通过发布/订阅事件解耦事件发送和接受，从而简化应用程序组件(Activities, Fragments 及后台线程)之间的通信  </p>\n<ol>\n<li><p>EventBus<br>greenrobot 的开源项目<br>项目地址：<a href=\"https://github.com/greenrobot/EventBus\">https://github.com/greenrobot/EventBus</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/Trinea/EventBus 源码解析\">EventBus</a><br>文档介绍：<a href=\"https://github.com/greenrobot/EventBus#general-usage-and-api\">https://github.com/greenrobot/EventBus#general-usage-and-api</a><br>特点：(1) 支持在不同类型的线程中处理订阅，包括发布所在线程，UI 线程、单一后台线程、异步线程<br>(2) 支持事件优先级定义，支持优先级高的订阅者取消事件继续传递，支持粘性事件，是不是跟系统的有序广播、粘性广播很像啊<br>(3) 不是基于 annotations<br>(4) 性能更优<br>(5) 体积小<br>(6) 支持单例创建或创建多个对象<br>(7) 支持根据事件类型订阅  </p>\n</li>\n<li><p>Otto<br>Square 的开源项目，基于 Guava 的 Android 优化<br>项目地址：<a href=\"https://github.com/square/otto\">https://github.com/square/otto</a><br>文档介绍：<a href=\"http://square.github.io/otto/\">http://square.github.io/otto/</a><br><a href=\"https://github.com/greenrobot/EventBus#comparison-with-squares-otto\">EventBus 与 Otto 的功能及性能对比文档</a><br><a href=\"https://play.google.com/store/apps/details?id=de.greenrobot.eventperf\">EventBus 与 Otto 性能对比 Demo Apk</a>  </p>\n</li>\n</ol>\n<h3 id=\"九、传感器\"><a href=\"#九、传感器\" class=\"headerlink\" title=\"九、传感器\"></a>九、传感器</h3><ol>\n<li><p>Great Android Sensing Toolkit<br>Android 感应器工具包，包含示例及使用过程中可能需要的算法<br>项目地址：<a href=\"https://github.com/gast-lib/gast-lib\">https://github.com/gast-lib/gast-lib</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=root.gast.playground\">https://play.google.com/store/apps/details?id=root.gast.playground</a><br>文档介绍：<a href=\"https://github.com/gast-lib/gast-lib#documentation\">https://github.com/gast-lib/gast-lib#documentation</a>  </p>\n</li>\n<li><p>SensorManager<br>Android 传感器管理<br>项目地址：<a href=\"https://github.com/nlathia/SensorManager\">https://github.com/nlathia/SensorManager</a><br>文档介绍：<a href=\"https://docs.google.com/document/d/1TqThJULb-4e6TGb1gdkAaPCfyuXStjJpbnt7a0OZ9OE/edit\">https://docs.google.com/document/d/1TqThJULb-4e6TGb1gdkAaPCfyuXStjJpbnt7a0OZ9OE/edit</a>  </p>\n</li>\n<li><p>GPSLogger<br>记录 GPS 信息<br>项目地址：<a href=\"https://github.com/mendhak/gpslogger\">https://github.com/mendhak/gpslogger</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.mendhak.gpslogger\">https://play.google.com/store/apps/details?id=com.mendhak.gpslogger</a><br>文档介绍：<a href=\"http://code.mendhak.com/gpslogger/\">http://code.mendhak.com/gpslogger/</a>  </p>\n</li>\n<li><p>Pedometer<br>计步器，使用硬件计步感应器<br>项目地址：<a href=\"https://github.com/j4velin/Pedometer\">https://github.com/j4velin/Pedometer</a>  </p>\n</li>\n<li><p>leapcast<br>ChromeCast 模拟器的 App<br>项目地址：<a href=\"https://github.com/dz0ny/leapcast\">https://github.com/dz0ny/leapcast</a>  </p>\n</li>\n<li><p>Arduino-Communicator<br>与 Arduino 通信的 App<br>项目地址：<a href=\"https://github.com/jeppsson/Arduino-Communicator\">https://github.com/jeppsson/Arduino-Communicator</a>  </p>\n</li>\n<li><p>android-pedometer<br>Android 计步器<br>项目地址：<a href=\"https://github.com/bagilevi/android-pedometer\">https://github.com/bagilevi/android-pedometer</a><br>Demo 地址：<a href=\"http://pedometer.googlecode.com/files/Pedometer-1.4.apk\">http://pedometer.googlecode.com/files/Pedometer-1.4.apk</a>  </p>\n</li>\n<li><p>OwnTracks for Android<br>自己的轨迹记录<br>项目地址：<a href=\"https://github.com/owntracks/android\">https://github.com/owntracks/android</a>  </p>\n</li>\n<li><p>Shake Detector library for Android<br>Android 手机震动摇晃检测库，提供供 UI 线程调用的回调接口<br>项目地址：<a href=\"https://github.com/tbouron/ShakeDetector\">https://github.com/tbouron/ShakeDetector</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.github.tbouron.shakedetector.example\">https://play.google.com/store/apps/details?id=com.github.tbouron.shakedetector.example</a>  </p>\n</li>\n<li><p>Android heart rate monitor<br>Android 心跳检测<br>项目地址：<a href=\"https://github.com/phishman3579/android-heart-rate-monitor\">https://github.com/phishman3579/android-heart-rate-monitor</a>  </p>\n</li>\n<li><p>Bluetooth LE Library for Android<br>蓝牙源信息，包括宝库 Mac、更新时间、RSSI、UUID、信号源距离、影响范围等信息<br>项目地址：<a href=\"https://github.com/alt236/Bluetooth-LE-Library---Android\">https://github.com/alt236/Bluetooth-LE-Library---Android</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=uk.co.alt236.btlescan\">https://play.google.com/store/apps/details?id=uk.co.alt236.btlescan</a>  </p>\n</li>\n<li><p>farebot<br>通过 NFC 从公交卡中读取数据的一个应用<br>项目地址：<a href=\"https://github.com/codebutler/farebot\">https://github.com/codebutler/farebot</a>  </p>\n</li>\n</ol>\n<h3 id=\"十、安全\"><a href=\"#十、安全\" class=\"headerlink\" title=\"十、安全\"></a>十、安全</h3><ol>\n<li><p>SQLCipher<br>Sqlite 加密工具<br>项目地址：<a href=\"https://github.com/sqlcipher/sqlcipher\">https://github.com/sqlcipher/sqlcipher</a><br>文档介绍：<a href=\"http://sqlcipher.net/sqlcipher-for-android/\">http://sqlcipher.net/sqlcipher-for-android/</a>  </p>\n</li>\n<li><p>Conceal<br>快速高效的进行文件加密解密<br>项目地址：<a href=\"https://github.com/facebook/conceal\">https://github.com/facebook/conceal</a><br>文档介绍：<a href=\"https://github.com/facebook/conceal#usage\">https://github.com/facebook/conceal#usage</a>  </p>\n</li>\n<li><p>Android-PasscodeLock<br>应用锁，每次启动或从任何 Activity 启动应用都需要输入四位数字的密码方可进入<br>项目地址：<a href=\"https://github.com/wordpress-mobile/Android-PasscodeLock\">https://github.com/wordpress-mobile/Android-PasscodeLock</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=org.wordpress.android\">https://play.google.com/store/apps/details?id=org.wordpress.android</a><br>APP 示例：Wordpress Android，支付宝，挖财  </p>\n</li>\n<li><p>GlowPadBackport<br>将 Android4.2 的锁屏界面解锁扩展到 Android1.6 及 1.6+<br>项目地址：<a href=\"https://github.com/rock3r/GlowPadBackport\">https://github.com/rock3r/GlowPadBackport</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=net.sebastianopoggi.samples.ui.GlowPadSample\">https://play.google.com/store/apps/details?id=net.sebastianopoggi.samples.ui.GlowPadSample</a>  </p>\n</li>\n<li><p>GlowPadView<br>Android 4 锁屏界面解锁<br>项目地址：<a href=\"https://github.com/nadavfima/GlowPadView\">https://github.com/nadavfima/GlowPadView</a>  </p>\n</li>\n<li><p>Android-InsecureBank<br>关于 Android 不安全性的示例<br>项目地址：<a href=\"https://github.com/dineshshetty/Android-InsecureBankv2\">https://github.com/dineshshetty/Android-InsecureBankv2</a>  </p>\n</li>\n</ol>\n<h3 id=\"十一、插件化\"><a href=\"#十一、插件化\" class=\"headerlink\" title=\"十一、插件化\"></a>十一、插件化</h3><p>更多见：<a href=\"http://www.trinea.cn/android/android-plugin/\">Android 插件化作用、概念以及不错的资料(包括开源项目)和解决方案</a>  </p>\n<ol>\n<li><p>dynamic-load-apk<br>Android 动态加载 Apk，热部署，利用 ClassLoader 以及 Activity 代理的方式解决<br>项目地址：<a href=\"https://github.com/singwhatiwanna/dynamic-load-apk\">https://github.com/singwhatiwanna/dynamic-load-apk</a><br>原理剖析文档：<a href=\"http://a.codekk.com/detail/Android/FFish/DynamicLoadApk 源码解析\">dynamic-load-apk</a><br>文档介绍：<a href=\"http://blog.csdn.net/singwhatiwanna/article/details/22597587\">http://blog.csdn.net/singwhatiwanna/article/details/22597587</a>  </p>\n</li>\n<li><p>Android Dynamic Loader<br>点评的实现方式，和上面不同的是：他不是用代理 Activity 的方式实现而是用 Fragment 以及 Schema 的方式实现<br>项目地址：<a href=\"https://github.com/mmin18/AndroidDynamicLoader\">https://github.com/mmin18/AndroidDynamicLoader</a><br>Demo 地址：<a href=\"https://github.com/mmin18/AndroidDynamicLoader/raw/master/host.apk\">https://github.com/mmin18/AndroidDynamicLoader/raw/master/host.apk</a>  </p>\n</li>\n<li><p>xCombine<br>Android App 插件式插件开发，插件必须先安装，更推荐看上面两个开源项目<br>项目地址：<a href=\"https://github.com/wyouflf/xCombine\">https://github.com/wyouflf/xCombine</a><br>文档介绍：<a href=\"http://my.oschina.net/u/1171837/blog/155377\">http://my.oschina.net/u/1171837/blog/155377</a>  </p>\n</li>\n<li><p>Android Plugin Framework<br>Android 插件式开发，开放的源码目前不完整<br>项目地址：<a href=\"https://github.com/umeng/apf\">https://github.com/umeng/apf</a>  </p>\n</li>\n<li><p>Android OpenAtlas<br>Android插件框架，基于OSGI，非代理方式，组件需要在宿主中声明<br>项目地址：<a href=\"https://github.com/bunnyblue/OpenAtlas\">https://github.com/bunnyblue/OpenAtlas</a><br>Demo 地址：<a href=\"https://github.com/bunnyblue/OpenAtlasExtension/blob/master/Dist/OpenAtlasLauncher.apk\">https://github.com/bunnyblue/OpenAtlasExtension/blob/master/Dist/OpenAtlasLauncher.apk</a> </p>\n</li>\n<li><p>multidex<br>安装多 dex 的 classloader<br>项目地址：<a href=\"https://github.com/casidiablo/multidex\">https://github.com/casidiablo/multidex</a>  </p>\n</li>\n<li><p>ANR-WatchDog<br>Android ANR 监听，通过监听自己的 UI Thread 是否被执行确定是否发生了 ANR，并可以设置相关事件<br>项目地址：<a href=\"https://github.com/SalomonBrys/ANR-WatchDog\">https://github.com/SalomonBrys/ANR-WatchDog</a>  </p>\n</li>\n</ol>\n<h3 id=\"十二、文件\"><a href=\"#十二、文件\" class=\"headerlink\" title=\"十二、文件\"></a>十二、文件</h3><p>对不同文档类型的处理，包括 PDF、Word、EPub、Html、Zip 等  </p>\n<ol>\n<li><p>purePDF<br>允许从任何运行的 SWF 文件读取和创建 PDF 文档<br>项目地址：<a href=\"https://github.com/sephiroth74/purePDF\">https://github.com/sephiroth74/purePDF</a>  </p>\n</li>\n<li><p>android-pdfview<br>快速解析 pdf 的 view，默认支持手势缩放和相关动画<br>项目地址：<a href=\"https://github.com/JoanZapata/android-pdfview\">https://github.com/JoanZapata/android-pdfview</a>  </p>\n</li>\n<li><p>Office 365 SDK for Android Preview<br>可支持 Microsoft SharePoint Lists, Microsoft SharePoint Files, Microsoft Exchange Calendar, Microsoft Exchange Contacts, Microsoft Exchange Mail<br>项目地址：<a href=\"https://github.com/OfficeDev/Office-365-SDK-for-Android\">https://github.com/OfficeDev/Office-365-SDK-for-Android</a>  </p>\n</li>\n<li><p>OpenSpritz-Android<br>EPub 阅读器<br>项目地址：<a href=\"https://github.com/OnlyInAmerica/OpenSpritz-Android\">https://github.com/OnlyInAmerica/OpenSpritz-Android</a>  </p>\n</li>\n<li><p>jsoup<br>一个解析 html 的 java 库，可方便的提取和操作数据<br>项目地址：<a href=\"https://github.com/jhy/jsoup\">https://github.com/jhy/jsoup</a><br>官网网址：<a href=\"http://jsoup.org/\">http://jsoup.org/</a><br>作用：(1) 从一个 url、文件或 string 获得 html 并解析<br>(2) 利用 dom 遍历或 css 选择器查找、提取数据<br>(3) 操作 html 元素<br>(4) 根据白名单去除用于提交的非法数据防止 xss 攻击<br>(5) 输出整齐的 html  </p>\n</li>\n<li><p>ZIP<br>java 压缩和解压库<br>项目地址：<a href=\"https://github.com/zeroturnaround/zt-zip\">https://github.com/zeroturnaround/zt-zip</a><br>文档介绍：<a href=\"https://github.com/zeroturnaround/zt-zip#examples\">https://github.com/zeroturnaround/zt-zip#examples</a><br>作用：(1) 解压和压缩，并支持文件夹内递归操作<br>(2) 支持包含和排除某些元素<br>(3) 支持重命名元素<br>(4) 支持遍历 zip 包内容<br>(5) 比较两个 zip 包等功能  </p>\n</li>\n<li><p>Image File Selector<br>轻量级的图片文件选择器，用系统api选取，压缩和裁切图片，可以方便的得要指定尺寸的图片<br>项目地址：<a href=\"https://github.com/sw926/ImageFileSelector\">https://github.com/sw926/ImageFileSelector</a>  </p>\n</li>\n</ol>\n<h3 id=\"十三、其他\"><a href=\"#十三、其他\" class=\"headerlink\" title=\"十三、其他\"></a>十三、其他</h3><ol>\n<li><p>FragmentStack<br>一个封装了启动模式的Fragment便捷使用库,方便构建单Activity+多Fragment轻量级框架<br>项目地址：<a href=\"https://github.com/Mr-wangyong/FragmentStack\">https://github.com/Mr-wangyong/FragmentStack</a><br>App示例：<a href=\"http://www.wandoujia.com/apps/cn.vcinema.cinema\">南瓜电影</a>  </p>\n</li>\n<li><p>CustomTabsHelper<br>快速集成 CustomTabs 的工具类<br>项目地址：<a href=\"https://github.com/DreaminginCodeZH/CustomTabsHelper\">https://github.com/DreaminginCodeZH/CustomTabsHelper</a>  </p>\n</li>\n<li><p>Salvage view<br>带 View 缓存的 Viewpager PagerAdapter，很方便使用<br>项目地址：<a href=\"https://github.com/JakeWharton/salvage\">https://github.com/JakeWharton/salvage</a>  </p>\n</li>\n<li><p>Android Priority Job Queue<br>Android 后台任务队列<br>项目地址：<a href=\"https://github.com/path/android-priority-jobqueue\">https://github.com/path/android-priority-jobqueue</a><br>文档介绍：<a href=\"https://github.com/path/android-priority-jobqueue#getting-started\">https://github.com/path/android-priority-jobqueue#getting-started</a>  </p>\n</li>\n<li><p>Cobub Razor<br>开源的 mobile 行为分析系统，包括 web 端、android 端，支持 ios 和 window phone<br>项目地址：<a href=\"https://github.com/cobub/razor\">https://github.com/cobub/razor</a><br>Demo 地址：<a href=\"http://demo.cobub.com/razor\">http://demo.cobub.com/razor</a><br>官网网址：<a href=\"http://dev.cobub.com/\">http://dev.cobub.com/</a>  </p>\n</li>\n<li><p>Countly<br>Android 移动端数据采集分析系统<br>项目地址：<a href=\"https://github.com/Countly/countly-sdk-android\">https://github.com/Countly/countly-sdk-android</a><br>官网网址：<a href=\"https://count.ly/\">https://count.ly/</a>  </p>\n</li>\n<li><p>aFileChooser<br>文件选择器，可内嵌到程序中，而无需使用系统或三方文件选择器。<br>项目地址：<a href=\"https://github.com/iPaulPro/aFileChooser\">https://github.com/iPaulPro/aFileChooser</a>  </p>\n</li>\n<li><p>androidpn<br>基于 xmpp 协议的消息推送解决方案，包括服务器端和 android 端。<br>项目地址：<a href=\"https://github.com/dannytiehui/androidpn\">https://github.com/dannytiehui/androidpn</a>  </p>\n</li>\n<li><p>Bolts<br>Android 的异步编程模式<br>项目地址：<a href=\"https://github.com/BoltsFramework/Bolts-Android/\">https://github.com/BoltsFramework/Bolts-Android/</a><br>与 AsyncTask 比较：(1) 使用的是无大小限制的线程池<br>(2) 任务可组合可级联，防止了代码耦合  </p>\n</li>\n<li><p>CastCompanionLibrary-android<br>使 Android 程序中更快的接入 Google Cast<br>项目地址：<a href=\"https://github.com/googlecast/CastCompanionLibrary-android\">https://github.com/googlecast/CastCompanionLibrary-android</a><br>文档介绍：<a href=\"https://developers.google.com/cast/\">https://developers.google.com/cast/</a>  </p>\n</li>\n<li><p>CastVideos-android<br>从 Android 设备分享 Video 通过 Google Cast<br>项目地址：<a href=\"https://github.com/googlecast/CastVideos-android\">https://github.com/googlecast/CastVideos-android</a><br>文档介绍：<a href=\"https://developers.google.com/cast/\">https://developers.google.com/cast/</a>  </p>\n</li>\n<li><p>Uninstall_Statics<br>Android 应用自身被卸载监听及打开浏览器等反馈功能实现<br>项目地址：<a href=\"https://github.com/sevenler/Uninstall_Statics\">https://github.com/sevenler/Uninstall_Statics</a><br>文档介绍：<a href=\"http://www.cnblogs.com/zealotrouge/p/3157126.html\">http://www.cnblogs.com/zealotrouge/p/3157126.html</a>  <a href=\"http://www.cnblogs.com/zealotrouge/p/3159772.html\">http://www.cnblogs.com/zealotrouge/p/3159772.html</a>  </p>\n</li>\n<li><p>Memento<br>保证在系统配置改变时，Activity 中的某些数据可以简单安全的保持不变<br>项目地址：<a href=\"https://github.com/mttkay/memento\">https://github.com/mttkay/memento</a><br>文档介绍：<a href=\"https://github.com/mttkay/memento#usage\">https://github.com/mttkay/memento#usage</a>  </p>\n</li>\n<li><p>FreeFlow<br>布局引擎，更简单的创建自定义布局，并且当数据和布局改变时更美观的过渡动画<br>项目地址：<a href=\"https://github.com/Comcast/FreeFlow\">https://github.com/Comcast/FreeFlow</a><br>Demo 地址：<a href=\"https://github.com/Comcast/FreeFlow/releases\">https://github.com/Comcast/FreeFlow/releases</a>  </p>\n</li>\n<li><p>Android Gesture Detectors Framework<br>Android 手势框架，支持双指旋转、移动、平移、缩放等<br>项目地址：<a href=\"https://github.com/Almeros/android-gesture-detectors\">https://github.com/Almeros/android-gesture-detectors</a>  </p>\n</li>\n<li><p>Mapbox Android SDK<br>Android Map 的替代版<br>项目地址：<a href=\"https://github.com/mapbox/mapbox-android-sdk\">https://github.com/mapbox/mapbox-android-sdk</a>  </p>\n</li>\n<li><p>Activity animation<br>Activity 跳转动画，支持各个方向波浪的效果<br>项目地址：<a href=\"https://github.com/flavienlaurent/activityanimation\">https://github.com/flavienlaurent/activityanimation</a><br>在线演示：<a href=\"https://www.youtube.com/watch?v=-E0sc6w_Jck\">https://www.youtube.com/watch?v=-E0sc6w_Jck</a>  </p>\n</li>\n<li><p>KryoNet<br>通过 NIO 提供客户端和服务器端 TCP/UDP 网络传输的 Java 库<br>项目地址：<a href=\"https://github.com/EsotericSoftware/kryonet\">https://github.com/EsotericSoftware/kryonet</a>  </p>\n</li>\n<li><p>Rebound<br>一个模仿弹簧反弹的 Java 库，可用于创建动画<br>项目地址：<a href=\"https://github.com/facebook/rebound\">https://github.com/facebook/rebound</a>  </p>\n</li>\n<li><p>Android Social Networks<br>社交网络接入统一管理器，可方便的从 Twitter, LinkedIn, Facebook, Google Plus 登陆、获得个人信息、发送消息、发送专篇、添加或删除好友<br>项目地址：<a href=\"https://github.com/antonkrasov/AndroidSocialNetworks\">https://github.com/antonkrasov/AndroidSocialNetworks</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.github.androidsocialnetworks.apidemos\">https://play.google.com/store/apps/details?id=com.github.androidsocialnetworks.apidemos</a>  </p>\n</li>\n<li><p>SmartAppUpdates<br>Android App 增量升级，包含前后端方案、Demo、以及 so 库，可用于商店或大体积 App 差分升级<br>项目地址：<a href=\"https://github.com/cundong/SmartAppUpdates\">https://github.com/cundong/SmartAppUpdates</a>  </p>\n</li>\n<li><p>Magnet<br>创建类似 Facebook 聊天桌面悬浮窗的效果<br>项目地址：<a href=\"https://github.com/premnirmal/Magnet\">https://github.com/premnirmal/Magnet</a>  </p>\n</li>\n<li><p>AcDisplay<br>将 Android 的通知都集中到锁屏显示<br>项目地址：<a href=\"https://github.com/AChep/AcDisplay\">https://github.com/AChep/AcDisplay</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.achep.acdisplay\">https://play.google.com/store/apps/details?id=com.achep.acdisplay</a>  </p>\n</li>\n<li><p>QrCodeScan<br>ZXing 和 ZBar 结合的二维码扫描项目，提高了扫描效率<br>项目地址：<a href=\"https://github.com/SkillCollege/QrCodeScan\">https://github.com/SkillCollege/QrCodeScan</a>  </p>\n</li>\n<li><p>Android-ScreenShot<br>实现 android 系统截屏功能<br>项目地址：<a href=\"https://github.com/Android-ScreenShot/AndroidScreenShotService\">https://github.com/Android-ScreenShot/AndroidScreenShotService</a><br>文档介绍：<a href=\"http://blog.csdn.net/buptgshengod/article/details/39155979\">http://blog.csdn.net/buptgshengod/article/details/39155979</a>  </p>\n</li>\n<li><p>card.io SDK for Android<br>信用卡扫描 Android SDK<br>项目地址：<a href=\"https://github.com/card-io/card.io-Android-SDK\">https://github.com/card-io/card.io-Android-SDK</a><br>Demo 项目：<a href=\"https://github.com/card-io/card.io-Android-SDK/tree/master/SampleApp\">https://github.com/card-io/card.io-Android-SDK/tree/master/SampleApp</a>  </p>\n</li>\n<li><p>ASNE<br>Twitter, Facebook, Google Plus, LinkedIn, Instagram, Vkontakte, Odnoklassniki 的集成库，包括他们的大多数功能<br>项目地址：<a href=\"https://github.com/gorbin/ASNE\">https://github.com/gorbin/ASNE</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=com.gorbin.androidsocialnetworksextended.asne\">https://play.google.com/store/apps/details?id=com.gorbin.androidsocialnetworksextended.asne</a>  </p>\n</li>\n<li><p>Android Signature Pad<br>Android 自定义的签名 View，可自定义笔颜色和大小<br>项目地址：<a href=\"https://github.com/gcacace/android-signaturepad\">https://github.com/gcacace/android-signaturepad</a><br>Demo 项目：<a href=\"https://github.com/gcacace/android-signaturepad/tree/master/SignaturePad-Example\">https://github.com/gcacace/android-signaturepad/tree/master/SignaturePad-Example</a>  </p>\n</li>\n<li><p>Teleport<br>Android Wear 数据同步和消息传送库<br>项目地址：<a href=\"https://github.com/Mariuxtheone/Teleport\">https://github.com/Mariuxtheone/Teleport</a>  </p>\n</li>\n<li><p>DebugLog<br>可以帮你创建更简单和更容易理解的调试日志，能够友好的显示调试信息所在类和函数。<br>项目地址：<a href=\"https://github.com/MustafaFerhan/DebugLog\">https://github.com/MustafaFerhan/DebugLog</a>  </p>\n</li>\n<li><p>Logger<br>简单、美观而且十分强大的 Android 日志工具<br>项目地址：<a href=\"https://github.com/orhanobut/logger\">https://github.com/orhanobut/logger</a><br>Demo 地址：<a href=\"https://github.com/orhanobut/logger/tree/master/app\">https://github.com/orhanobut/logger/tree/master/app</a>  </p>\n</li>\n<li><p>jlog<br>可以灵活配置的日志工具，支持JSON打印，日志保存到指定文件，日志显示调用位置（混淆模式下依然有效）<br>项目地址：<a href=\"https://github.com/JiongBull/jlog\">https://github.com/JiongBull/jlog</a><br>Demo 地址：<a href=\"https://raw.githubusercontent.com/JiongBull/jlog/master/apk/JLog_sample.apk\">apk地址</a>  </p>\n</li>\n<li><p>Phrase<br>square 组开源大牛写的字符串替换类<br>项目地址：<a href=\"https://github.com/square/phrase\">https://github.com/square/phrase</a>  </p>\n</li>\n<li><p>ColorPhrase<br>模仿 phrase 写的对字符串个别字符颜色改变的类，高效强大！<br>项目地址：<a href=\"https://github.com/THEONE10211024/ColorPhrase\">https://github.com/THEONE10211024/ColorPhrase</a>  </p>\n</li>\n<li><p>PinyinSearch<br>一个为 T9 搜索和 Qwerty 搜索,提供数据解析与匹配等方法的拼音搜索 java 库。<br>项目地址： <a href=\"https://github.com/handsomezhou/PinyinSearchLibrary\">https://github.com/handsomezhou/PinyinSearchLibrary</a><br>Demo 地址： <a href=\"https://github.com/handsomezhou/PinyinSearchLibrary/blob/master/external_res/bin/ContactsSearch.apk?raw=true\">ContactsSearch</a>    <a href=\"https://github.com/handsomezhou/PinyinSearchLibrary/blob/master/external_res/bin/AppSearch.apk?raw=true\">AppSearch</a><br>APP 示例： 通讯录应用，微信电话本  </p>\n</li>\n<li><p>PrainView<br>PaintView 是一个画图工具:<br>可直接使用设定按钮来实现已拥有的方法，且拓展性强<br>基础功能：更换颜色、更换橡皮、以及更换橡皮和笔的粗细、清屏、倒入图片<br>特殊功能：保存画笔轨迹帧动画、帧动画导入导出、ReDo和UnDo<br>项目地址：<a href=\"https://github.com/lfkdsk/JustWeTools\">Paintview</a><br>demo地址：<a href=\"https://github.com/lfkdsk/JustWeTools/blob/master/demo/DrawAPicture.apk\">apk地址</a><br>原理解析：<a href=\"http://www.cnblogs.com/lfk-dsk/p/4768850.html\">PaintView 绘图控件解析</a>  </p>\n</li>\n<li><p>CodeView<br>CodeView代码查看／修改工具: 基于WebView制作的代码编辑器,实现代码高亮，暗色主题<br>项目地址：<a href=\"https://github.com/lfkdsk/JustWeTools\">CodeView</a><br>demo地址：<a href=\"https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk\">apk地址</a>  </p>\n</li>\n<li><p>ExplorerView<br>文件浏览器：继承自ListView，可拓展性强，可进行文件类型分析<br>项目地址：<a href=\"https://github.com/lfkdsk/JustWeTools\">CodeView</a><br>demo地址：<a href=\"https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk\">apk地址</a>  </p>\n</li>\n<li><p>ReadView<br>小说阅读器，支持文字字体、颜色、背景、进度等多种调整，支持一键设置。<br>项目地址：<a href=\"https://github.com/lfkdsk/JustWeTools\">ReadView</a><br>demo地址：<a href=\"https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk\">apk地址</a>  </p>\n</li>\n<li><p>MarkDownView<br>支持MarkDown语法的渲染器,基于WebView的MarkDown渲染器,支持标准化的MarkDown语法,<br>调用接口和CodeView保持一致使用简便<br>项目地址：<a href=\"https://github.com/lfkdsk/JustWeTools\">ReadView</a><br>demo地址：<a href=\"https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk\">apk地址</a>  </p>\n</li>\n<li><p>VerTextView竖行排版的TextView:<br>支持竖行排版，添加了下划线功能，开启简便，下划线粗细、颜色、间距均可自定义，<br>接口调用方式与TextView相似，使用简便。<br>项目地址：<a href=\"https://github.com/lfkdsk/JustWeTools\">ReadView</a><br>demo地址：<a href=\"https://github.com/lfkdsk/JustWeTools/blob/master/demo/JustWeTools.apk\">apk地址</a>  </p>\n</li>\n<li><p>GHDownload下载框架<br>支持单线程和多线程断点下载，简单易用。<br>项目地址：<a href=\"https://github.com/guanchao/GHDownload\">GHDownload</a>  </p>\n</li>\n</ol>\n<h2 id=\"第三部分-优秀项目\"><a href=\"#第三部分-优秀项目\" class=\"headerlink\" title=\"第三部分 优秀项目\"></a>第三部分 优秀项目</h2><p>主要介绍那些 Android 还不错的完整项目，目前包含的项目主要依据是项目有意思或项目分层规范比较好。  </p>\n<h3 id=\"一、系统及平台\"><a href=\"#一、系统及平台\" class=\"headerlink\" title=\"一、系统及平台\"></a>一、系统及平台</h3><ol>\n<li>Linux<br>项目地址：<a href=\"https://github.com/torvalds/linux\">https://github.com/torvalds/linux</a>  </li>\n<li>Android<br>项目地址：<a href=\"https://android.googlesource.com/\">https://android.googlesource.com/</a>  </li>\n</ol>\n<h3 id=\"二、项目\"><a href=\"#二、项目\" class=\"headerlink\" title=\"二、项目\"></a>二、项目</h3><ol>\n<li><p>ZXing<br>二维码扫描工具<br>项目地址：<a href=\"https://github.com/zxing/zxing\">https://github.com/zxing/zxing</a> 或 <a href=\"https://code.google.com/p/zxing/\">https://code.google.com/p/zxing/</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=com.google.zxing.client.android\">https://play.google.com/store/apps/details?id=com.google.zxing.client.android</a><br>其他：现在市面上很多应用的二维码扫描功能都是从这个修改而来  </p>\n</li>\n<li><p>photup<br>编辑机批量上传照片到 facebook 上<br>项目地址：<a href=\"https://github.com/chrisbanes/photup\">https://github.com/chrisbanes/photup</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=uk.co.senab.photup\">https://play.google.com/store/apps/details?id=uk.co.senab.photup</a><br>其他：代码分包合理，很棒。不过这个项目依赖的开源项目比较多，比较难编译  </p>\n</li>\n<li><p>github-android<br>Github 的 Android 客户端项目<br>项目地址：<a href=\"https://github.com/github/android\">https://github.com/github/android</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=com.github.mobile\">https://play.google.com/store/apps/details?id=com.github.mobile</a>  </p>\n</li>\n<li><p>Notes<br>MIUI 便签<br>项目地址：<a href=\"https://github.com/MiCode/Notes\">https://github.com/MiCode/Notes</a><br>APK 地址：<a href=\"https://github.com/Trinea/TrineaDownload/blob/master/miui-note-demo.apk?raw=true\">https://github.com/Trinea/TrineaDownload/blob/master/miui-note-demo.apk?raw=true</a><br>其他：项目分包比较合理，相比较 miui 的文件管理器 <a href=\"https://github.com/MiCode/FileExplorer\">https://github.com/MiCode/FileExplorer</a> 代码规范较好得多  </p>\n</li>\n<li><p>weicuiyuan<br>四次元-新浪微博客户端<br>项目地址：<a href=\"https://github.com/qii/weiciyuan\">https://github.com/qii/weiciyuan</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=org.qii.weiciyuan\">https://play.google.com/store/apps/details?id=org.qii.weiciyuan</a>  </p>\n</li>\n<li><p>Douya<br>豆芽——Material Design 的豆瓣客户端<br>项目地址：<a href=\"https://github.com/DreaminginCodeZH/Douya\">https://github.com/DreaminginCodeZH/Douya</a>  </p>\n</li>\n<li><p>gnucash-android<br>一个记账理财软件<br>项目地址：<a href=\"https://github.com/codinguser/gnucash-android\">https://github.com/codinguser/gnucash-android</a><br>APK 地址：<a href=\"http://play.google.com/store/apps/details?id=org.gnucash.android\">http://play.google.com/store/apps/details?id=org.gnucash.android</a>  </p>\n</li>\n<li><p>AntennaPod<br>支持 rss 订阅、音乐订阅<br>项目地址：<a href=\"https://github.com/danieloeh/AntennaPod\">https://github.com/danieloeh/AntennaPod</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=de.danoeh.antennapod\">https://play.google.com/store/apps/details?id=de.danoeh.antennapod</a>  </p>\n</li>\n<li><p>ChaseWhisplyProject<br>打鬼游戏<br>项目地址：<a href=\"https://github.com/tvbarthel/ChaseWhisplyProject\">https://github.com/tvbarthel/ChaseWhisplyProject</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=fr.tvbarthel.games.chasewhisply\">https://play.google.com/store/apps/details?id=fr.tvbarthel.games.chasewhisply</a>  </p>\n</li>\n<li><p>Tweet Lanes<br>功能完整的 Twitter 客户端<br>项目地址：<a href=\"https://github.com/chrislacy/TweetLanes\">https://github.com/chrislacy/TweetLanes</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=com.tweetlanes.android\">https://play.google.com/store/apps/details?id=com.tweetlanes.android</a>  </p>\n</li>\n<li><p>Financius<br>简单易用的记账程序<br>项目地址：<a href=\"https://github.com/mvarnagiris/Financius\">https://github.com/mvarnagiris/Financius</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=com.code44.finance\">https://play.google.com/store/apps/details?id=com.code44.finance</a>  </p>\n</li>\n<li><p>todo.txt-android<br>todo.txt 的官方 Android 应用<br>项目地址：<a href=\"https://github.com/ginatrapani/todo.txt-android\">https://github.com/ginatrapani/todo.txt-android</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=com.todotxt.todotxttouch\">https://play.google.com/store/apps/details?id=com.todotxt.todotxttouch</a>  </p>\n</li>\n<li><p>simpletask<br>基于 todo.txt 官方应用的另一个客户端<br>项目地址：<a href=\"https://github.com/mpcjanssen/simpletask-android\">https://github.com/mpcjanssen/simpletask-android</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=nl.mpcjanssen.todotxtholo\">https://play.google.com/store/apps/details?id=nl.mpcjanssen.todotxtholo</a>  </p>\n</li>\n<li><p>Muzei Live Wallpaper<br>定时更换桌面精美壁纸<br>项目地址：<a href=\"https://github.com/romannurik/muzei\">https://github.com/romannurik/muzei</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=net.nurik.roman.muzei\">https://play.google.com/store/apps/details?id=net.nurik.roman.muzei</a>  </p>\n</li>\n<li><p>Scanbook<br>扫描搜索查询图书信息<br>项目地址：<a href=\"https://github.com/JayFang1993/ScanBook\">https://github.com/JayFang1993/ScanBook</a><br>APK 地址：<a href=\"http://www.wandoujia.com/apps/com.scanbook\">http://www.wandoujia.com/apps/com.scanbook</a>  </p>\n</li>\n<li><p>iosched<br>The Google I/O 2014 Android App<br>项目地址：<a href=\"https://github.com/google/iosched\">https://github.com/google/iosched</a><br>APK 地址：<a href=\"https://play.google.com/store/apps/details?id=com.google.samples.apps.iosched\">https://play.google.com/store/apps/details?id=com.google.samples.apps.iosched</a>  </p>\n</li>\n</ol>\n<h2 id=\"第四部分-开发工具及测试工具\"><a href=\"#第四部分-开发工具及测试工具\" class=\"headerlink\" title=\"第四部分 开发工具及测试工具\"></a>第四部分 开发工具及测试工具</h2><p>主要介绍和 Android 开发工具和测试工具相关的开源项目。  </p>\n<h3 id=\"一、开发效率工具\"><a href=\"#一、开发效率工具\" class=\"headerlink\" title=\"一、开发效率工具\"></a>一、开发效率工具</h3><ol>\n<li><p>Parceler<br>通过注解及工具类自动完成实体类 Parcelable 及值传递<br>项目地址：<a href=\"https://github.com/johncarl81/parceler\">https://github.com/johncarl81/parceler</a>  </p>\n</li>\n<li><p>Json2Java<br>根据 JSon 数据自动生成对应的 Java 实体类，还支持 Parcel、Gson Annotations 对应代码自动生成。期待后续的提取父类以及多 url 构建整个工程的功能<br>项目地址：<a href=\"https://github.com/jonfhancock/JsonToJava\">https://github.com/jonfhancock/JsonToJava</a><br>在线演示：<a href=\"http://jsontojava.appspot.com/\">http://jsontojava.appspot.com/</a>  </p>\n</li>\n<li><p>IntelliJ Plugin for Android Parcelable boilerplate code generation<br>Android studio 插件，生成 Parcelable 代码<br>项目地址：<a href=\"https://github.com/mcharmas/android-parcelable-intellij-plugin\">https://github.com/mcharmas/android-parcelable-intellij-plugin</a>  </p>\n</li>\n<li><p>Android Holo Colors IntelliJ Plugin<br>Android studio 插件，生成 holo 样式 9 patch 图片<br>项目地址：<a href=\"https://github.com/jeromevdl/android-holo-colors-idea-plugin\">https://github.com/jeromevdl/android-holo-colors-idea-plugin</a>  </p>\n</li>\n<li><p>Android Drawable Factory<br>用于生成各个分辨率的图片<br>项目地址：<a href=\"https://github.com/tizionario/AndroidDrawableFactory\">https://github.com/tizionario/AndroidDrawableFactory</a>  </p>\n</li>\n<li><p>SelectorChapek for Android<br>Android Studio 插件，可根据固定文件名格式资源自动生成 drawable selectors xml 文件。<br>项目地址：<a href=\"https://github.com/inmite/android-selector-chapek\">https://github.com/inmite/android-selector-chapek</a>  </p>\n</li>\n<li><p>Android Action Bar Style Generator<br>Android ActionBar 样式生成器，可在线选择 ActionBar 样式自动生成所需要的图片资源及 xml 文件<br>项目地址：<a href=\"https://github.com/jgilfelt/android-actionbarstylegenerator\">https://github.com/jgilfelt/android-actionbarstylegenerator</a><br>在线演示：<a href=\"http://jgilfelt.github.io/android-actionbarstylegenerator/\">http://jgilfelt.github.io/android-actionbarstylegenerator/</a>  </p>\n</li>\n<li><p>ButterKnifeZelezny<br>用于快速生成<a href=\"https://github.com/JakeWharton/butterknife\">ButterKnife</a>View 注入代码的 Android Studio/IDEA 插件<br>项目地址：<a href=\"https://github.com/inmite/android-butterknife-zelezny\">https://github.com/inmite/android-butterknife-zelezny</a>  </p>\n</li>\n<li><p>RoboCoP<br>利用 Gradle task 根据固定格式的 json 文件生成 ContentProvider<br>项目地址：<a href=\"https://github.com/mediarain/RoboCoP\">https://github.com/mediarain/RoboCoP</a>  </p>\n</li>\n<li><p>appiconsizes<br>用于生成各个分辨率的图片<br>项目地址：<a href=\"http://www.appiconsizes.com/\">http://www.appiconsizes.com/</a>  </p>\n</li>\n<li><p>AndroidUtiles<br>集合了所有常用的安卓工具类<br>项目地址：<a href=\"https://github.com/l123456789jy/Lazy\">https://github.com/l123456789jy/Lazy</a></p>\n</li>\n<li><p>Gradle Retrolambda Plugin<br><a href=\"https://github.com/orfjackal/retrolambda\">Retrolambda</a>是将 Java8 的 Lambdas 应用于 Java7 的工具，本项目是 Gradle 插件，通过 Retrolambda 从而使 Java 或 Android 项目用 Java8 的 Lambdas 编写，将编译后的字节码转换为 Java6 和 7 的字节码从而正常运行<br>项目地址：<a href=\"https://github.com/evant/gradle-retrolambda\">https://github.com/evant/gradle-retrolambda</a>  </p>\n</li>\n<li><p>Dagger IntelliJ Plugin<br>dagger 的 intellij 插件<br>项目地址：<a href=\"https://github.com/square/dagger-intellij-plugin\">https://github.com/square/dagger-intellij-plugin</a>  </p>\n</li>\n<li><p>Android Gen Drawable Maven plugin<br>在编译时根据 SVG 描述文件生成不同分辨率的 jpg、png 或点 9 图片<br>项目地址：<a href=\"https://github.com/avianey/androidgendrawable-maven-plugin\">https://github.com/avianey/androidgendrawable-maven-plugin</a>  </p>\n</li>\n<li><p>Android Asset Studio<br>各种 Android 资源自动生成器，包括启动图标、ActionBar 图标、通知栏图标、点 9 等<br>项目地址：<a href=\"https://github.com/romannurik/AndroidAssetStudio\">https://github.com/romannurik/AndroidAssetStudio</a><br>在线演示：<a href=\"http://romannurik.github.io/AndroidAssetStudio/\">http://romannurik.github.io/AndroidAssetStudio/</a>  </p>\n</li>\n<li><p>jsonschema2pojo<br>根据 Json 内容生成 java 对象，支持 jackjson 和 gson<br>项目地址：<a href=\"https://github.com/joelittlejohn/jsonschema2pojo\">https://github.com/joelittlejohn/jsonschema2pojo</a><br>在线演示：<a href=\"http://www.jsonschema2pojo.org/\">http://www.jsonschema2pojo.org/</a>  </p>\n</li>\n<li><p>GsonFormat<br>根据 JSONObject 格式的字符串,自动生成实体类参数的 Android Studio/IntelliJ IDEA 插件<br>项目地址：<a href=\"https://github.com/zzz40500/GsonFormat\">https://github.com/zzz40500/GsonFormat</a>  </p>\n</li>\n<li><p>9-Patch-Resizer<br>自动生成 png 及点 9 图片的不同分辨率版本<br>项目地址：<a href=\"https://github.com/redwarp/9-Patch-Resizer\">https://github.com/redwarp/9-Patch-Resizer</a>  </p>\n</li>\n<li><p>AndroidLocalizationer<br>可用于将项目中的 string 资源自动翻译为其他语言的 Android Studio/IntelliJ IDEA 插件<br>项目地址：<a href=\"https://github.com/westlinkin/AndroidLocalizationer\">https://github.com/westlinkin/AndroidLocalizationer</a>  </p>\n</li>\n<li><p>Material Palette<br>一个将现有的色彩方案组合成材料设计的调色板方案，提供下载。选取两个主要色彩后便可以提供下载，提供下载的格式可以是 android 的资源 xml 文件，以色彩的方式提供，也可以是 CSS、SVG、PNG 等常见格式文件。<br>项目地址：<a href=\"http://www.materialpalette.com/\">http://www.materialpalette.com/</a>  </p>\n</li>\n</ol>\n<h3 id=\"二、开发自测相关\"><a href=\"#二、开发自测相关\" class=\"headerlink\" title=\"二、开发自测相关\"></a>二、开发自测相关</h3><ol>\n<li><p>Quality Tools for Android<br>Android 测试及自测工具集合和示例<br>项目地址：<a href=\"https://github.com/stephanenicolas/Quality-Tools-for-Android\">https://github.com/stephanenicolas/Quality-Tools-for-Android</a>  </p>\n</li>\n<li><p>android-test-kit<br>Google 的 Android 测试工具<br>包括 GoogleInstrumentationTestRunner(增强版的 InstrumentationTestRunner)和 Espresso(用于快速写出可靠测试用例的 API)<br>项目地址：<a href=\"https://code.google.com/p/android-test-kit/\">https://code.google.com/p/android-test-kit/</a><br>文档介绍：<a href=\"https://code.google.com/p/android-test-kit/w/list\">https://code.google.com/p/android-test-kit/w/list</a>  </p>\n</li>\n<li><p>robolectric<br>测试用例编写框架<br>项目地址：<a href=\"https://github.com/robolectric/robolectric\">https://github.com/robolectric/robolectric</a><br>Demo 地址：<a href=\"https://github.com/robolectric/robolectricsample\">https://github.com/robolectric/robolectricsample</a><br>文档介绍：<a href=\"http://robolectric.org/\">http://robolectric.org/</a><br>特点：(1). 不需要模拟器在一般 JVM 就可以运行测试用例<br>(2). 能完成在真机上的大部分测试包括感应器<br>其他的测试用例及相关模块 Mock 可见：<a href=\"https://code.google.com/p/android-mock/\">android-mock</a>, <a href=\"https://code.google.com/p/mockito/\">mockito</a>, <a href=\"https://github.com/easymock/easymock\">easy-mock</a>  </p>\n</li>\n<li><p>Android FEST<br>提供一些列方便的断言，可用于提高编写 Android 自测代码效率<br>项目地址：<a href=\"https://github.com/square/fest-android\">https://github.com/square/fest-android</a>  </p>\n</li>\n<li><p>BoundBox<br>可用于测试类各种访问权限的属性、方法。实际是通过 BoundBox 这个 annotation 生成一个属性和方法都是 public 权限的中间类并对此类进行测试完成的<br>项目地址：<a href=\"https://github.com/stephanenicolas/boundbox\">https://github.com/stephanenicolas/boundbox</a>  </p>\n</li>\n<li><p>Hugo<br>用于打印函数信息及执行时间的工具，仅在 debug 模式生效<br>项目地址：<a href=\"https://github.com/JakeWharton/hugo\">https://github.com/JakeWharton/hugo</a>  </p>\n</li>\n<li><p>scalpel<br>在应用下面添加一层用于界面调试<br>项目地址：<a href=\"https://github.com/JakeWharton/scalpel\">https://github.com/JakeWharton/scalpel</a>  </p>\n</li>\n<li><p>Android Screenshot library<br>Android 截图工具类，用于在持续集成时截图<br>项目地址：<a href=\"https://github.com/rtyley/android-screenshot-lib\">https://github.com/rtyley/android-screenshot-lib</a>  </p>\n</li>\n<li><p>sonar-android-lint-plugin<br>将 android lint 的错误在 sonar 中展现<br>项目地址：<a href=\"https://github.com/SonarCommunity/sonar-android\">https://github.com/SonarCommunity/sonar-android</a>  </p>\n</li>\n</ol>\n<h3 id=\"三、测试工具\"><a href=\"#三、测试工具\" class=\"headerlink\" title=\"三、测试工具\"></a>三、测试工具</h3><ol>\n<li><p>Spoon<br>可用于 android 不同机型设备自动化测试，能将应用 apk 和测试 apk 运行在不同机器上并生成相应测试报告。<br>项目地址：<a href=\"https://github.com/square/spoon\">https://github.com/square/spoon</a>  </p>\n</li>\n<li><p>Tencent APT<br>APT 是腾讯开源的一个 Android 平台高效性能测试组件，提供丰富实用的功能，适用于开发自测、定位性能瓶颈；测试人员完成性能基准测试、竞品对比测试<br>项目地址：<a href=\"https://github.com/stormzhang/APT\">https://github.com/stormzhang/APT</a>  </p>\n</li>\n<li><p>Emmagee<br>网易开源的性能测试工具，包括 CPU、内存、网络流量、启动时间、电池状态等<br>项目地址：<a href=\"https://github.com/NetEase/Emmagee\">https://github.com/NetEase/Emmagee</a>  </p>\n</li>\n<li><p>Android py-uiautomator<br>py-uiautomator 是一个对 Android uiautomator 用 python 进行封装的测试框架.<br>项目地址：<a href=\"https://github.com/xiaocong/uiautomator\">https://github.com/xiaocong/uiautomator</a>  </p>\n</li>\n<li><p>Augmented Traffic Control<br>模拟网络状况，包括带宽、时延抖动、丢包率、错包率、包重排率<br>项目地址：<a href=\"https://github.com/facebook/augmented-traffic-control\">https://github.com/facebook/augmented-traffic-control</a>  </p>\n</li>\n<li><p>stetho<br>强大的 Android Debug 工具。支持网络请求监控以及数据库查看，可以和 Chrome DevTools 结合或者命令行模式。<br>项目地址：<a href=\"https://github.com/facebook/stetho\">https://github.com/facebook/stetho</a>  </p>\n</li>\n</ol>\n<h3 id=\"四、开发及编译环境\"><a href=\"#四、开发及编译环境\" class=\"headerlink\" title=\"四、开发及编译环境\"></a>四、开发及编译环境</h3><ol>\n<li><p>Buck<br>facebook 开源的 Android 编译工具，效率是 ant 的两倍。主要优点在于：<br>(1) 加快编译速度，通过并行利用多核 cpu 和跟踪不变资源减少增量编译时间实现<br>(2) 可以在编译系统中生成编译规则而无须另外的系统生成编译规则文件<br>(3) 编译同时可生成单元测试结果<br>(4) 既可用于 IDE 编译也可用于持续集成编译<br>(5) facebook 持续优化中<br>项目地址：<a href=\"https://github.com/facebook/buck\">https://github.com/facebook/buck</a>  </p>\n</li>\n<li><p>Android Maven Plugin<br>Android Maven 插件，可用于对 android 三方依赖进行管理。在 J2EE 开发中，maven 是非常成熟的依赖库管理工具，可统一管理依赖库。<br>项目地址：<a href=\"https://github.com/jayway/maven-android-plugin\">https://github.com/jayway/maven-android-plugin</a>  </p>\n</li>\n<li><p>umeng-muti-channel-build-tool<br>渠道打包工具<br>项目地址：<a href=\"https://github.com/umeng/umeng-muti-channel-build-tool\">https://github.com/umeng/umeng-muti-channel-build-tool</a><br>另可参见 Google 的构建系统 Gradle：<a href=\"http://tools.android.com/tech-docs/new-build-system/user-guide\">http://tools.android.com/tech-docs/new-build-system/user-guide</a>  </p>\n</li>\n<li><p>Genymotion<br>目前最好用最快的 android 模拟器<br>项目地址：<a href=\"http://www.genymotion.com/\">http://www.genymotion.com/</a><br>Android studio 集成控件： <a href=\"http://plugins.jetbrains.com/plugin/7269?pr=idea\">http://plugins.jetbrains.com/plugin/7269?pr=idea</a><br>Cyril Mottier 推荐：<a href=\"http://cyrilmottier.com/2013/06/27/a-productive-android-development-environment/\">http://cyrilmottier.com/2013/06/27/a-productive-android-development-environment/</a>  </p>\n</li>\n<li><p>gradle-mvn-push<br>方便的将 Gradle 的 Artifacts 上传到 Maven 仓库<br>项目地址：<a href=\"https://github.com/chrisbanes/gradle-mvn-push\">https://github.com/chrisbanes/gradle-mvn-push</a><br>文档介绍：<a href=\"https://github.com/chrisbanes/gradle-mvn-push#usage\">https://github.com/chrisbanes/gradle-mvn-push#usage</a>  </p>\n</li>\n<li><p>Android Emulator Plugin for Jenkins<br>Android 模拟器 jenkins 插件，用于 Jenkins 做持续集成时跑模拟器测试<br>项目地址：<a href=\"https://github.com/jenkinsci/android-emulator-plugin\">https://github.com/jenkinsci/android-emulator-plugin</a>  </p>\n</li>\n<li><p>Android Maven Plugin<br>管理应用所需要的依赖库。包括的构建工具有 Maven、Gradle、ant、sbt<br>项目地址：<a href=\"https://github.com/mosabua/maven-android-sdk-deployer\">https://github.com/mosabua/maven-android-sdk-deployer</a>  </p>\n</li>\n<li><p>SDK Manager Plugin<br>下载和管理 Android SDK 的 Gradle 插件<br>项目地址：<a href=\"https://github.com/JakeWharton/sdk-manager-plugin\">https://github.com/JakeWharton/sdk-manager-plugin</a>  </p>\n</li>\n<li><p>Gradle Protobuf Plugin<br>将.proto 文件转换成 Java 文件的 gradle 插件<br>项目地址：<a href=\"https://github.com/andrewkroh/gradle-protobuf-plugin\">https://github.com/andrewkroh/gradle-protobuf-plugin</a>  </p>\n</li>\n<li><p>ChromeADB<br>Chrome 的 Adb 插件，当登录后，能看到所有连接的设备并操作，可以看应用、进程、内存及磁盘使用情况等<br>项目地址：<a href=\"https://github.com/importre/chromeadb\">https://github.com/importre/chromeadb</a>  </p>\n</li>\n</ol>\n<h3 id=\"五、其他\"><a href=\"#五、其他\" class=\"headerlink\" title=\"五、其他\"></a>五、其他</h3><ol>\n<li><p>GT<br>APP的随身调试平台，它是直接运行在手机上的“集成调试环境”(IDTE, Integrated Debug Environment)。<br>项目地址：<a href=\"https://github.com/TencentOpen/GT\">https://github.com/TencentOpen/GT</a><br>文档介绍：<a href=\"http://gt.qq.com/docs.html\">http://gt.qq.com/docs.html</a>  </p>\n</li>\n<li><p>ViewServer<br>允许 app 运行在任何手机上都可以用 HierarchyViewer 查看<br>项目地址：<a href=\"https://github.com/romainguy/ViewServer\">https://github.com/romainguy/ViewServer</a>  </p>\n</li>\n<li><p>GridWichterle for Android<br>在整个系统上显示一个 grid，用来帮助查看应用布局及使得布局更美观，可设置 grid 网格大小和颜色，android 推荐 48dp 和 8dp，可见 Android Design Guidelines – Metrics and Grids，比起 hierarchyviewer 相差甚远，不过偶尔可用来作为布局查看工具。<br>项目地址：<a href=\"https://github.com/inmite/android-grid-wichterle\">https://github.com/inmite/android-grid-wichterle</a><br>Demo 地址：<a href=\"https://play.google.com/store/apps/details?id=eu.inmite.android.gridwichterle\">https://play.google.com/store/apps/details?id=eu.inmite.android.gridwichterle</a>  </p>\n</li>\n<li><p>Catlog<br>手机端 log 查看工具，支持不同颜色显示、关键字过滤、级别过滤、进程 id 过滤、录制功能等<br>项目地址：<a href=\"https://github.com/nolanlawson/Catlog\">https://github.com/nolanlawson/Catlog</a><br>在线演示：<a href=\"https://play.google.com/store/apps/details?id=com.nolanlawson.logcat\">https://play.google.com/store/apps/details?id=com.nolanlawson.logcat</a>  </p>\n</li>\n<li><p>PID Cat<br>根据 package 查看 logcat 日志<br>项目地址：<a href=\"https://github.com/JakeWharton/pidcat\">https://github.com/JakeWharton/pidcat</a>  </p>\n</li>\n<li><p>ACRA<br>应用崩溃信息日志上报到 GoogleDoc 工具，网页版展现结果三方开源地址 <a href=\"https://github.com/BenoitDuffez/crashreportsviewer\">https://github.com/BenoitDuffez/crashreportsviewer</a><br>项目地址：<a href=\"https://github.com/ACRA/acra\">https://github.com/ACRA/acra</a><br>文档介绍：<a href=\"https://github.com/ACRA/acra/wiki/BasicSetup\">https://github.com/ACRA/acra/wiki/BasicSetup</a>  </p>\n</li>\n<li><p>Crashlytics<br>提供丰富的应用崩溃信息日志收集<br>轻量级，丰富，可自定义应用崩溃信息收集器，附有邮件通知<br>项目地址：<a href=\"http://www.crashlytics.com/\">http://www.crashlytics.com/</a><br>集成插件：<a href=\"http://try.crashlytics.com/sdk-android/?utm_source=blog&amp;utm_medium=blog&amp;utm_campaign=Announcing_android_studio_wp&amp;utm_content=CTA_button\">Android Studio, Eclipse and IntelliJ</a>  </p>\n</li>\n<li><p>Android Resource Navigator<br>chrome 插件，可以方便的查看 github 上 android 源码工程的 styles.xml 和 themes.xml。主要功能：<br>(1) 快速打开 android styles.xml themes.xml<br>(2) 方便在资源间跳转。styles.xml themes.xml 文件中资源链接跳转，可以方便跳转到某个资源<br>(3) 方便查找某个 style 和 theme。chrome 地址栏输入 arn+tab+搜索内容回车即可<br>(4) 自动下载不同分辨率下的 drawable<br>(5) 通过映射查找那些不是按照固定命名规则命名的 style 和 theme<br>项目地址：<a href=\"https://github.com/jgilfelt/android-resource-navigator\">https://github.com/jgilfelt/android-resource-navigator</a><br>在线演示：<a href=\"https://chrome.google.com/webstore/detail/android-resource-navigato/agoomkionjjbejegcejiefodgbckeebo?hl=en&amp;gl=GB\">https://chrome.google.com/webstore/detail/android-resource-navigato/agoomkionjjbejegcejiefodgbckeebo?hl=en&amp;gl=GB</a>  </p>\n</li>\n<li><p>android-resource-remover<br>根据 lint 的提示删除项目中无用的资源，减少包的大小<br>项目地址：<a href=\"https://github.com/KeepSafe/android-resource-remover\">https://github.com/KeepSafe/android-resource-remover</a>  </p>\n</li>\n<li><p>Telescope<br>通过手势截图以特定主题发送到特定邮箱地址报告 Bug<br>项目地址：<a href=\"https://github.com/mattprecious/telescope\">https://github.com/mattprecious/telescope</a>  </p>\n</li>\n<li><p>Complete Android Fragment &amp; Activity Lifecycle<br>完整的 Android Fragment/Activity 生命周期图<br>项目地址：<a href=\"https://github.com/xxv/android-lifecycle\">https://github.com/xxv/android-lifecycle</a>  </p>\n</li>\n<li><p>Bugsnag Notifier for Android<br>通过<code>Thread.UncaughtExceptionHandler</code>捕获应用未处理的异常崩溃 Bug 并用 Notification 展示同时上传到后台服务器<br>项目地址：<a href=\"https://github.com/bugsnag/bugsnag-android\">https://github.com/bugsnag/bugsnag-android</a><br>文档介绍：<a href=\"https://github.com/bugsnag/bugsnag-android#installation--setup\">https://github.com/bugsnag/bugsnag-android#installation--setup</a>  </p>\n</li>\n<li><p>Material Design Icons<br>Google Material Design 规范中的 Icon<br>项目地址：<a href=\"https://github.com/google/material-design-icons\">https://github.com/google/material-design-icons</a>  </p>\n</li>\n<li><p>scrollscreenshot<br>Android 滚动屏幕自动截图 jar 包，支持纵向、横向滚动截屏拼接<br>项目地址：<a href=\"https://github.com/PGSSoft/scrollscreenshot\">https://github.com/PGSSoft/scrollscreenshot</a>  </p>\n</li>\n<li><p>droidicon<br>1600+的海量 Icon，包括 750+的 Material Design icons<br>项目地址：<a href=\"https://github.com/theDazzler/droidicon\">https://github.com/theDazzler/droidicon</a>  </p>\n</li>\n<li><p>leakcanary<br>Android 内存泄露检测工具，集成方便，出现泄露后报告直观<br>项目地址：<a href=\"https://github.com/square/leakcanary\">https://github.com/square/leakcanary</a>  </p>\n</li>\n<li><p>CacheUtilsLibrary<br>将任何Java Object类型的数据序列化后写入缓存文件，将来使用时读取缓存文件并反序列化成对应Java Object的库<br>项目地址：<a href=\"https://github.com/westlinkin/CacheUtilsLibrary\">https://github.com/westlinkin/CacheUtilsLibrary</a></p>\n</li>\n<li><p>BlockCanary<br>BlockCanary是一个Android平台的一个非侵入式的性能监控组件，应用只需要实现一个抽象类，提供一些该组件需要的上下文环境，就可以在平时使用应用的时候检测主线程上的各种卡慢问题，并通过组件提供的各种信息分析出原因并进行修复。<br>项目地址: <a href=\"https://github.com/moduth/blockcanary\">https://github.com/moduth/blockcanary</a>  </p>\n</li>\n</ol>\n<h2 id=\"第五部分\"><a href=\"#第五部分\" class=\"headerlink\" title=\"第五部分\"></a>第五部分</h2><p>主要介绍那些乐于分享并且有一些很不错的开源项目的个人和组织。Follow 大神，深挖大神的项目和 following，你会发现很多。  </p>\n<h3 id=\"一、个人\"><a href=\"#一、个人\" class=\"headerlink\" title=\"一、个人\"></a>一、个人</h3><ol>\n<li><p>JakeWharton<br>就职于 Square，绝对牛逼的大神，项目主要集中在 Android 版本兼容，ViewPager 及开发工具上<br>Github 地址：<a href=\"https://github.com/JakeWharton\">https://github.com/JakeWharton</a><br>代表作：ActionBarSherlock，Android-ViewPagerIndicator，Nine Old Androids，SwipeToDismissNOA，hugo，butterknife，Android-DirectionalViewPager, scalpel<br>pidcat 另外对 square 及其他开源项目有很多贡献<br>主页：<a href=\"http://jakewharton.com/\">http://jakewharton.com/</a>  </p>\n</li>\n<li><p>Chris Banes<br>Github 地址：<a href=\"https://github.com/chrisbanes\">https://github.com/chrisbanes</a><br>代表作：ActionBar-PullToRefresh，PhotoView，Android-BitmapCache，Android-PullToRefresh<br>主页：<a href=\"http://chris.banes.me/\">http://chris.banes.me/</a>  </p>\n</li>\n<li><p>Koushik Dutta<br>就职于 ClockworkMod<br>Github 地址：<a href=\"https://github.com/koush\">https://github.com/koush</a><br>代表作：Superuser，AndroidAsync，UrlImageViewHelper，ion, 另外对 <a href=\"https://github.com/CyanogenMod\">https://github.com/CyanogenMod</a> 的开源项目有很多贡献<br>主页：<a href=\"http://koush.com/\">http://koush.com/</a>  </p>\n</li>\n<li><p>Simon Vig<br>Github 地址：<a href=\"https://github.com/SimonVT\">https://github.com/SimonVT</a><br>代表作：android-menudrawer，MessageBar<br>主页：<a href=\"http://simonvt.net/\">http://simonvt.net/</a>  </p>\n</li>\n<li><p>Manuel Peinado<br>Github 地址：<a href=\"https://github.com/ManuelPeinado\">https://github.com/ManuelPeinado</a><br>代表作：FadingActionBar，GlassActionBar，RefreshActionItem，QuickReturnHeader  </p>\n</li>\n<li><p>Emil Sj?lander<br>Github 地址：<a href=\"https://github.com/emilsjolander\">https://github.com/emilsjolander</a><br>代表作：StickyListHeaders，sprinkles，android-FlipView<br>主页：<a href=\"http://emilsjolander.se/\">http://emilsjolander.se/</a>  </p>\n</li>\n<li><p>greenrobot<br>Github 地址：<a href=\"https://github.com/greenrobot\">https://github.com/greenrobot</a><br>代表作：greenDAO，EventBus<br>主页：<a href=\"http://greenrobot.de/\">http://greenrobot.de/</a>  </p>\n</li>\n<li><p>Jeff Gilfelt<br>Github 地址：<a href=\"https://github.com/jgilfelt\">https://github.com/jgilfelt</a><br>代表作：android-mapviewballoons，android-viewbadger，android-actionbarstylegenerator，android-sqlite-asset-helper<br>主页：<a href=\"http://jeffgilfelt.com\">http://jeffgilfelt.com</a>  </p>\n</li>\n<li><p>Romain Guy<br>Android team 成员(2013.10 已离开 Android team，仍在 Google)<br>Github 地址：<a href=\"https://github.com/romainguy\">https://github.com/romainguy</a><br>代表作：ViewServer<br>主页：<a href=\"http://www.curious-creature.org/category/android/\">http://www.curious-creature.org/category/android/</a><br>個人攝影作品：<a href=\"http://www.flickr.com/photos/romainguy\">http://www.flickr.com/photos/romainguy</a>  </p>\n</li>\n<li><p>sephiroth74<br>就职于 Aviary.com<br>Github 地址：<a href=\"https://github.com/sephiroth74\">https://github.com/sephiroth74</a><br>代表作：ImageViewZoom，HorizontalVariableListView，AndroidWheel，purePDF<br>主页：<a href=\"http://www.sephiroth.it/\">http://www.sephiroth.it/</a>  </p>\n</li>\n<li><p>Cyril Mottier<br>Google 开发者专家认证，发布一些 Android 技巧及文章<br>Github 地址：<a href=\"https://github.com/cyrilmottier\">https://github.com/cyrilmottier</a><br>代表作：GreenDroid，Polaris<br>主页：<a href=\"http://cyrilmottier.com/\">http://cyrilmottier.com/</a>  </p>\n</li>\n</ol>\n<h3 id=\"二、组织\"><a href=\"#二、组织\" class=\"headerlink\" title=\"二、组织\"></a>二、组织</h3><ol>\n<li><p>Square<br>有态度有良心的企业，很多不错的分享<br>Github 地址：<a href=\"https://github.com/square\">https://github.com/square</a><br>代表作：okhttp、fest-android，android-times-square、picasso、dagger、spoon 等等<br>主页：<a href=\"http://square.github.io/\">http://square.github.io/</a>  </p>\n</li>\n<li><p>Inmite s.r.o.<br>Github 地址：<a href=\"https://github.com/inmite\">https://github.com/inmite</a><br>代表作：android-styled-dialogs，android-grid-wichterle，android-selector-chapek<br>主页：<a href=\"http://www.inmite.eu/\">http://www.inmite.eu/</a>  </p>\n</li>\n</ol>\n<h3 id=\"三、博客\"><a href=\"#三、博客\" class=\"headerlink\" title=\"三、博客\"></a>三、博客</h3><p><a href=\"https://github.com/android-cn/android-dev-com\">部分国外著名 Android 开发者信息</a>  </p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><blockquote>\n<p>本文转自——<strong><a href=\"https://github.com/Trinea/android-open-project\">Trinea 汇总的开源项目</a></strong><br>欢迎大家关注他的微信公众号：codekk。二维码如下：<br> 专注于 Android 开源分享、源码解析、框架设计、Android 内推。<br>  <img src=\"http://www.trinea.cn/wp-content/uploads/2016/01/weixin-codekk-160.jpg\" alt=\"img\"><br>   他的网站：<a href=\"http://a.codekk.com\">www.codekk.com</a><br> <strong>关于trinea，欢迎关注</strong><br> 微博：<a title=\"Android 技术及移动互联网分享\" href=\"http://weibo.com/trinea?s=6cm7D0\" target=\"_blank\">Trinea</a>&nbsp;&nbsp;&nbsp;&nbsp;主页：<a title=\"关注于 Android、Java、性能优化、开源项目\" href=\"http://www.trinea.cn/\" target=\"_blank\">trinea.cn</a> </p>\n</blockquote>\n<h2 id=\"推荐\"><a href=\"#推荐\" class=\"headerlink\" title=\"推荐\"></a>推荐</h2><blockquote>\n<p><a href=\"http://a.codekk.com\">Android 开源项目源码解析(Volley、UIL、Dagger、EventBus、插件化库等分析)</a></p>\n<p><a href=\"http://j.codekk.com\">Android 职位内部推荐(阿里、腾讯、百度、京东、滴滴、美团、58、华为、网易、魅族等)</a></p>\n</blockquote>"}],"PostAsset":[],"PostCategory":[{"post_id":"ciwn8lgu70000kw1g6d1f8qo4","category_id":"ciwn8lgur0005kw1g5aih7kku","_id":"ciwn8lgvg000ekw1gjpp5grna"},{"post_id":"ciwn8lgvb000dkw1g5tsoostn","category_id":"ciwn8lgva000ckw1gdp1tqi3t","_id":"ciwn8lgvu000kkw1gikikrwyl"},{"post_id":"ciwn8lgui0002kw1g0qfi33c0","category_id":"ciwn8lgva000ckw1gdp1tqi3t","_id":"ciwn8lgvy000pkw1gyxccbcdg"},{"post_id":"ciwn8lgus0006kw1gvrd9ya7x","category_id":"ciwn8lgvn000hkw1g2i9w9fvu","_id":"ciwn8lgw1000qkw1ge95iqvgb"},{"post_id":"ciwn8lgvv000mkw1g7m6qy59y","category_id":"ciwn8lgva000ckw1gdp1tqi3t","_id":"ciwn8lgw4000tkw1gx0bhldpp"},{"post_id":"ciwn8lguy0008kw1gy0tsbqa2","category_id":"ciwn8lgva000ckw1gdp1tqi3t","_id":"ciwn8lgw5000vkw1g21a15gnb"},{"post_id":"ciwn8lgv7000bkw1gitkcui6e","category_id":"ciwn8lgw2000rkw1ggpb5cltz","_id":"ciwn8lgw7000zkw1gfzoai0nq"},{"post_id":"ciwn8lgvh000fkw1gk19ik0cf","category_id":"ciwn8lgvn000hkw1g2i9w9fvu","_id":"ciwn8lgwa0013kw1gncr4okst"},{"post_id":"ciwn8lgvs000jkw1g6e09fp0c","category_id":"ciwn8lgw80010kw1gm7o6ls0h","_id":"ciwn8lgwb0016kw1g2nju1rld"},{"post_id":"ciwn8lh4n001pkw1g1hmflhud","category_id":"ciwn8lgva000ckw1gdp1tqi3t","_id":"ciwn8lh4s001rkw1gxa4fuoau"}],"PostTag":[{"post_id":"ciwn8lgu70000kw1g6d1f8qo4","tag_id":"ciwn8lgun0004kw1g5ueqkgoc","_id":"ciwn8lgvr000ikw1g91yedq00"},{"post_id":"ciwn8lgu70000kw1g6d1f8qo4","tag_id":"ciwn8lgv6000akw1gsadpv8wy","_id":"ciwn8lgvv000lkw1gefnwf4n6"},{"post_id":"ciwn8lgui0002kw1g0qfi33c0","tag_id":"ciwn8lgvm000gkw1gcb6ksdei","_id":"ciwn8lgw4000ukw1g4iuxi2o6"},{"post_id":"ciwn8lgui0002kw1g0qfi33c0","tag_id":"ciwn8lgvy000nkw1gwlyq8ibm","_id":"ciwn8lgw5000wkw1g14tb281v"},{"post_id":"ciwn8lgus0006kw1gvrd9ya7x","tag_id":"ciwn8lgw3000skw1g156wjohq","_id":"ciwn8lgw90012kw1gab3ffkhl"},{"post_id":"ciwn8lgus0006kw1gvrd9ya7x","tag_id":"ciwn8lgw6000ykw1g3p332u9e","_id":"ciwn8lgwa0014kw1gilf4zhnb"},{"post_id":"ciwn8lguy0008kw1gy0tsbqa2","tag_id":"ciwn8lgvy000nkw1gwlyq8ibm","_id":"ciwn8lgwd0018kw1gntgs8vv2"},{"post_id":"ciwn8lguy0008kw1gy0tsbqa2","tag_id":"ciwn8lgwa0015kw1g0gkbpjex","_id":"ciwn8lgwd0019kw1gf3gtwn1a"},{"post_id":"ciwn8lgv7000bkw1gitkcui6e","tag_id":"ciwn8lgwc0017kw1gy582r9yq","_id":"ciwn8lgwe001bkw1gae68kr5y"},{"post_id":"ciwn8lgvb000dkw1g5tsoostn","tag_id":"ciwn8lgvy000nkw1gwlyq8ibm","_id":"ciwn8lgwh001fkw1gaye5rrm1"},{"post_id":"ciwn8lgvb000dkw1g5tsoostn","tag_id":"ciwn8lgwf001ckw1g7xcu8vy2","_id":"ciwn8lgwi001gkw1gk4k1vs99"},{"post_id":"ciwn8lgvb000dkw1g5tsoostn","tag_id":"ciwn8lgwg001dkw1glumbotu9","_id":"ciwn8lgwj001ikw1gyhu00xue"},{"post_id":"ciwn8lgvh000fkw1gk19ik0cf","tag_id":"ciwn8lgw3000skw1g156wjohq","_id":"ciwn8lgwj001jkw1g0a734li2"},{"post_id":"ciwn8lgvs000jkw1g6e09fp0c","tag_id":"ciwn8lgwi001hkw1g0cz0r0k0","_id":"ciwn8lgwl001lkw1gpog96e5l"},{"post_id":"ciwn8lgvv000mkw1g7m6qy59y","tag_id":"ciwn8lgwg001dkw1glumbotu9","_id":"ciwn8lgwm001nkw1gpad0w3v6"},{"post_id":"ciwn8lgvv000mkw1g7m6qy59y","tag_id":"ciwn8lgvy000nkw1gwlyq8ibm","_id":"ciwn8lgwm001okw1geo3qhmd6"},{"post_id":"ciwn8lh4n001pkw1g1hmflhud","tag_id":"ciwn8lgvy000nkw1gwlyq8ibm","_id":"ciwn8lh4v001skw1g7f1lape0"},{"post_id":"ciwn8lh4n001pkw1g1hmflhud","tag_id":"ciwn8lh4q001qkw1gtzjtyn2i","_id":"ciwn8lh4v001tkw1gbnp9neee"}],"Tag":[{"name":"Hexo","_id":"ciwn8lgun0004kw1g5ueqkgoc"},{"name":"HelloWorld","_id":"ciwn8lgv6000akw1gsadpv8wy"},{"name":"volley","_id":"ciwn8lgvm000gkw1gcb6ksdei"},{"name":"Android","_id":"ciwn8lgvy000nkw1gwlyq8ibm"},{"name":"Linux","_id":"ciwn8lgw3000skw1g156wjohq"},{"name":"JDK","_id":"ciwn8lgw6000ykw1g3p332u9e"},{"name":"eclipse小技巧","_id":"ciwn8lgwa0015kw1g0gkbpjex"},{"name":"随笔","_id":"ciwn8lgwc0017kw1gy582r9yq"},{"name":"svn","_id":"ciwn8lgwf001ckw1g7xcu8vy2"},{"name":"eclipse","_id":"ciwn8lgwg001dkw1glumbotu9"},{"name":"elasticsearch","_id":"ciwn8lgwi001hkw1g0cz0r0k0"},{"name":"开源项目汇总","_id":"ciwn8lh4q001qkw1gtzjtyn2i"}]}}